webpackJsonp([0,5],{

/***/ 1060:
/***/ (function(module, exports) {

/**
 * This file is licensed under Creative Commons Zero (CC0)
 * http://creativecommons.org/publicdomain/zero/1.0/
 *
 * Author: http://www.openstreetmap.org/user/Zartbitter
 */





var map;

/**
 * Add or replace a parameter (with value) in the given URL.
 * By Adil Malik, http://stackoverflow.com/questions/1090948/change-url-parameters/10997390#10997390
 * @param String url the URL
 * @param String param the parameter
 * @param String paramVal the value of the parameter
 * @return String the changed URL
 */
function updateURLParameter(url, param, paramVal) {
	var theAnchor = null;
	var newAdditionalURL = "";
	var tempArray = url.split("?");
	var baseURL = tempArray[0];
	var additionalURL = tempArray[1];
	var temp = "";

	if (additionalURL) {
		var tmpAnchor = additionalURL.split("#");
		var theParams = tmpAnchor[0];
		theAnchor = tmpAnchor[1];
		if (theAnchor) {
			additionalURL = theParams;
		}

		tempArray = additionalURL.split("&");

		for (i = 0; i < tempArray.length; i++) {
			if (tempArray[i].split('=')[0] != param) {
				newAdditionalURL += temp + tempArray[i];
				temp = "&";
			}
		}
	} else {
		var tmpAnchor = baseURL.split("#");
		var theParams = tmpAnchor[0];
		theAnchor = tmpAnchor[1];

		if (theParams) {
			baseURL = theParams;
		}
	}

	if (theAnchor) {
		paramVal += "#" + theAnchor;
	}

	var rows_txt = temp + "" + param + "=" + paramVal;
	return baseURL + "?" + newAdditionalURL + rows_txt;
}

/**
 * Add or replace the language parameter of the URL and reload the page.
 * @param String id of the language
 */
function changeLanguage(pLang) {
	window.location.href = updateURLParameter(window.location.href, 'lang', pLang);
}

/**
 * Get all parameters out of the URL.
 * @return Array List of URL parameters key-value indexed
 */
function getUrlParameters() {
	var vars = [], hash;
	var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	for (var i = 0; i < hashes.length; i++) {
		hash = hashes[i].split('=');
		vars.push(hash[0]);
		vars[hash[0]] = hash[1];
	}
	return vars;
}

/**
 * Callback for successful geolocation.
 * @var position Geolocated position
 */
function foundLocation(position) {
	if (typeof map != "undefined") {
		var lat = position.coords.latitude;
		var lon = position.coords.longitude;
		map.setView(new L.LatLng(lat, lon), 11);
	}
}

/**
 * Example function to replace leaflet-openweathermap's builtin marker by a wind rose symbol.
 * Some helper functions and an event listener are needed, too. See below.
 */
function myWindroseMarker(data) {
	var content = '<canvas id="id_' + data.id + '" width="50" height="50"></canvas>';
	var icon = L.divIcon({ html: content, iconSize: [50, 50], className: 'owm-div-windrose' });
	return L.marker([data.coord.lat, data.coord.lon], { icon: icon, clickable: false });
}

/**
 * Helper function for replacing leaflet-openweathermap's builtin marker by a wind rose symbol.
 * This function draws the canvas of one marker symbol once it is available in the DOM.
 */
function myWindroseDrawCanvas(data, owm) {

	var canvas = document.getElementById('id_' + data.id);
	canvas.title = data.name;
	var angle = 0;
	var speed = 0;
	var gust = 0;
	if (typeof data.wind != 'undefined') {
		if (typeof data.wind.speed != 'undefined') {
			canvas.title += ', ' + data.wind.speed + ' m/s';
			canvas.title += ', ' + owm._windMsToBft(data.wind.speed) + ' BFT';
			speed = data.wind.speed;
		}
		if (typeof data.wind.deg != 'undefined') {
			//canvas.title += ', ' + data.wind.deg + '°';
			canvas.title += ', ' + owm._directions[(data.wind.deg / 22.5).toFixed(0)];
			angle = data.wind.deg;
		}
		if (typeof data.wind.gust != 'undefined') {
			gust = data.wind.gust;
		}
	}
	if (canvas.getContext && speed > 0) {
		var red = 0;
		var green = 0;
		if (speed <= 10) {
			green = 10 * speed + 155;
			red = 255 * speed / 10.0;
		} else {
			red = 255;
			green = 255 - (255 * (Math.min(speed, 21) - 10) / 11.0);
		}
		var ctx = canvas.getContext('2d');
		ctx.translate(25, 25);
		ctx.rotate(angle * Math.PI / 180);
		ctx.fillStyle = 'rgb(' + Math.floor(red) + ',' + Math.floor(green) + ',' + 0 + ')';
		ctx.beginPath();
		ctx.moveTo(-15, -25);
		ctx.lineTo(0, -10);
		ctx.lineTo(15, -25);
		ctx.lineTo(0, 25);
		ctx.fill();

		// draw inner arrow for gust
		if (gust > 0 && gust != speed) {
			if (gust <= 10) {
				green = 10 * gust + 155;
				red = 255 * gust / 10.0;
			} else {
				red = 255;
				green = 255 - (255 * (Math.min(gust, 21) - 10) / 11.0);
			}
			canvas.title += ', gust ' + data.wind.gust + ' m/s';
			canvas.title += ', ' + owm._windMsToBft(data.wind.gust) + ' BFT';
			ctx.fillStyle = 'rgb(' + Math.floor(red) + ',' + Math.floor(green) + ',' + 0 + ')';
			ctx.beginPath();
			ctx.moveTo(-15, -25);
			ctx.lineTo(0, -10);
			//ctx.lineTo(15, -25);
			ctx.lineTo(0, 25);
			ctx.fill();
		}
	} else {
		canvas.innerHTML = '<div>'
			+ (typeof data.wind != 'undefined' && typeof data.wind.deg != 'undefined' ? data.wind.deg + '°' : '')
			+ '</div>';
	}
}

/**
 * Helper function for replacing leaflet-openweathermap's builtin marker by a wind rose symbol.
 * This function is called event-driven when the layer and its markers are added. Now we can draw all marker symbols.
 * The this-context has to be the windrose layer.
 */
function windroseAdded(e) {
	for (var i in this._markers) {
		var m = this._markers[i];
		var cv = document.getElementById('id_' + m.options.owmId);
		for (var j in this._cache._cachedData.list) {
			var station = this._cache._cachedData.list[j];
			if (station.id == m.options.owmId) {
				myWindroseDrawCanvas(station, this);
			}
		}
	}
}

/**
 * Example function to replace leaflet-openweathermap's builtin marker.
 */
function myOwmMarker(data) {
	// just a Leaflet default marker
	return L.marker([data.coord.lat, data.coord.lon]);
}

/**
 * Example function to replace leaflet-openweathermap's builtin popup.
 */
function myOwmPopup(data) {
	// just a Leaflet default popup
	return L.popup().setContent(typeof data.name != 'undefined' ? data.name : data.id);
}

/**
 * Initialize the map.
 */
var exp = (function () {
	return {
		func: function initMap() {

			var standard = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
				attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
			});

			var esri = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
				attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
			});

			var clouds = L.OWM.clouds({ opacity: 0.8, legendImagePath: 'files/NT2.png' });
			var cloudscls = L.OWM.cloudsClassic({ opacity: 0.5 });
			var precipitation = L.OWM.precipitation({ opacity: 0.5 });
			var precipitationcls = L.OWM.precipitationClassic({ opacity: 0.5 });
			var rain = L.OWM.rain({ opacity: 0.5 });
			var raincls = L.OWM.rainClassic({ opacity: 0.5 });
			var snow = L.OWM.snow({ opacity: 0.5 });
			var pressure = L.OWM.pressure({ opacity: 0.4 });
			var pressurecntr = L.OWM.pressureContour({ opacity: 0.5 });
			var temp = L.OWM.temperature({ opacity: 0.5 });
			var wind = L.OWM.wind({ opacity: 0.5 });

			var localLang = getLocalLanguage();

			// Get your own free OWM API key at http://www.openweathermap.org/appid - please do not re-use mine!
			// You don't need an API key for this to work at the moment, but this will change eventually.

			// stari API key
			//var OWM_API_KEY = '06aac0fd4ba239a20d824ef89602f311';
			var OWM_API_KEY = '9f94544566a949379c1067b25c4000de';
			var city = L.OWM.current({
				intervall: 15, imageLoadingUrl: 'leaflet/owmloading.gif', lang: localLang, minZoom: 2,
				appId: OWM_API_KEY
			});
			var station = L.OWM.current({
				type: 'station', intervall: 15, imageLoadingUrl: 'leaflet/owmloading.gif', lang: localLang,
				appId: OWM_API_KEY /* , markerFunction: myOwmMarker, popupFunction: myOwmPopup */
			});
			var windrose = L.OWM.current({
				intervall: 15, imageLoadingUrl: 'leaflet/owmloading.gif', lang: localLang, minZoom: 2,
				appId: OWM_API_KEY, markerFunction: myWindroseMarker, popup: false, clusterSize: 50,
				imageLoadingBgUrl: 'http://openweathermap.org/img/w0/iwind.png'
			});
			windrose.on('owmlayeradd', windroseAdded, windrose); // Add an event listener to get informed when windrose layer is ready

			var useGeolocation = true;
			var zoom = -5;
			var lat = 44.58;
			var lon = 21.1;
			var urlParams = getUrlParameters();
			if (typeof urlParams.zoom != "undefined" && typeof urlParams.lat != "undefined" && typeof urlParams.lon != "undefined") {
				zoom = urlParams.zoom;
				lat = urlParams.lat;
				lon = urlParams.lon;
				useGeolocation = false;
			}

			map = L.map('map', {
				center: new L.LatLng(lat, lon), zoom: zoom,
				layers: [standard]
			});
			map.attributionControl.setPrefix("");
			/*
				map.addControl(L.languageSelector({
					languages: new Array(
						L.langObject('en', 'English', 'mapicons/en.png')
					,	L.langObject('de', 'Deutsch', 'mapicons/de.png')
					,	L.langObject('fr', 'Français', 'mapicons/fr.png')
					,	L.langObject('es', 'Español', 'mapicons/es.png')
					,	L.langObject('ca', 'Català', 'mapicons/catalonia.png')
					,	L.langObject('ru', 'Русский', 'mapicons/ru.png')
					,	L.langObject('nl', 'Nederlands', 'mapicons/nl.png')
					,	L.langObject('pt_br', 'Português do Brasil', 'mapicons/br.png')
					),
					callback: changeLanguage,
					initialLanguage: localLang,
					hideSelected: false,
					vertical: false
				}));*/

			var baseMaps = {
				"OSM Standard": standard
				//, "ESRI Aerial": esri
			};

			var overlayMaps = {};
			overlayMaps[getI18n('clouds', localLang)] = clouds;
			overlayMaps[getI18n('cloudscls', localLang)] = cloudscls;
			overlayMaps[getI18n('precipitation', localLang)] = precipitation;
			overlayMaps[getI18n('precipitationcls', localLang)] = precipitationcls;
			overlayMaps[getI18n('rain', localLang)] = rain;
			overlayMaps[getI18n('raincls', localLang)] = raincls;
			overlayMaps[getI18n('snow', localLang)] = snow;
			overlayMaps[getI18n('temp', localLang)] = temp;
			overlayMaps[getI18n('windspeed', localLang)] = wind;
			overlayMaps[getI18n('pressure', localLang)] = pressure;
			overlayMaps[getI18n('presscont', localLang)] = pressurecntr;
			overlayMaps[getI18n('city', localLang) + " (min Zoom 5)"] = city;
			overlayMaps[getI18n('station', localLang) + " (min Zoom 7)"] = station;
			overlayMaps[getI18n('windrose', localLang)] = windrose;

			var layerControl = L.control.layers(baseMaps, overlayMaps, { collapsed: false }).addTo(map);
			map.addControl(new L.Control.Permalink({ layers: layerControl, useAnchor: false, position: 'bottomright' }));
			/*
				map.addControl(L.flattrButton({
					autosubmit: true,
					flattrUid: 'kranich',
					flattrUrl: 'https://github.com/buche/leaflet-openweathermap',
					buttonType: 'countercompact',
					popout: false
				}));
			*/
			// patch layerControl to add some titles
			var patch = L.DomUtil.create('div', 'owm-layercontrol-header');
			/*patch.innerHTML = getI18n('layers', localLang); // 'TileLayers';
			layerControl._form.children[2].parentNode.insertBefore(patch, layerControl._form.children[2]);
			patch = L.DomUtil.create('div', 'leaflet-control-layers-separator');
			layerControl._form.children[3].children[0].parentNode.insertBefore(patch, layerControl._form.children[3].children[layerControl._form.children[3].children.length-3]);
			patch = L.DomUtil.create('div', 'owm-layercontrol-header');
			patch.innerHTML = getI18n('current', localLang); // 'Current Weather';
			layerControl._form.children[3].children[0].parentNode.insertBefore(patch, layerControl._form.children[3].children[layerControl._form.children[3].children.length-3]);
			patch = L.DomUtil.create('div', 'owm-layercontrol-header');
			patch.innerHTML = getI18n('maps', localLang); // 'Maps';
			layerControl._form.children[0].parentNode.insertBefore(patch, layerControl._form.children[0]);
		*/
			if (useGeolocation && typeof navigator.geolocation != "undefined") {
				navigator.geolocation.getCurrentPosition(foundLocation);
			}
		}
	}
})(exp || {})

/***/ }),

/***/ 1063:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(538);


/***/ }),

/***/ 19:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PermService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PermService = (function () {
    function PermService(http) {
        this.http = http;
    }
    PermService.prototype.getPerms = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return this.http.get("permisions/permisions", { headers: headers })
            .map(function (res) { return res.json(); });
    };
    PermService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object])
    ], PermService);
    return PermService;
    var _a;
}());
//# sourceMappingURL=perm-service.service.js.map

/***/ }),

/***/ 230:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__plantation__ = __webpack_require__(349);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PlantationService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PlantationService = (function () {
    function PlantationService() {
    }
    PlantationService.prototype.getTypes = function () {
        return __WEBPACK_IMPORTED_MODULE_1__plantation__["a" /* tipovi */];
    };
    PlantationService.prototype.getSubTypes = function () {
        return __WEBPACK_IMPORTED_MODULE_1__plantation__["b" /* podtipovi */];
    };
    PlantationService.prototype.getProducers = function () {
        return __WEBPACK_IMPORTED_MODULE_1__plantation__["c" /* proizvodjaci */];
    };
    PlantationService.prototype.getSingleType = function (ID) {
        return __WEBPACK_IMPORTED_MODULE_1__plantation__["a" /* tipovi */].find(function (x) { return x.id == ID; });
    };
    PlantationService.prototype.getSingleSubtype = function (ID) {
        return __WEBPACK_IMPORTED_MODULE_1__plantation__["b" /* podtipovi */].find(function (x) { return x.id == ID; });
    };
    PlantationService.prototype.getSingleProducer = function (ID) {
        return __WEBPACK_IMPORTED_MODULE_1__plantation__["c" /* proizvodjaci */].find(function (x) { return x.id == ID; });
    };
    PlantationService.prototype.getSubtypesById = function (pid) {
        return __WEBPACK_IMPORTED_MODULE_1__plantation__["b" /* podtipovi */].filter(function (x) { return x.pid == pid; });
    };
    PlantationService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [])
    ], PlantationService);
    return PlantationService;
}());
//# sourceMappingURL=plantation.service.js.map

/***/ }),

/***/ 348:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__plantation__ = __webpack_require__(349);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_finally__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_finally___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_finally__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__plantation_service__ = __webpack_require__(230);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_perm_service_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddPlantation; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AddPlantation = (function () {
    function AddPlantation(permService, fb, plantationService, http) {
        this.permService = permService;
        this.fb = fb;
        this.plantationService = plantationService;
        this.http = http;
        this.imanjeVidljivo = false;
        this.plantazaVidljiva = true;
        this.idVlasnika = [];
        this.ddVisible = false;
        this.tipovi = [];
        this.podtipovi = [];
        this.proizvodjaci = [];
        this.sviPodtipovi = [];
        this.nizPoligona = [];
        this.nizOverlay = [];
        this.sviVlasnici = [];
        this.dozvoleKodGazde = [];
        this.isLoading = false;
        this.smeDaPise = false;
        this.dodatProizvodjac = false;
        this.dodatTip = false;
        this.dodatPodtip = false;
        this.dodataPlantaza = false;
        this.mapProp = null;
        this.map = null;
        this.imanjeIme = "";
        this.drawingManager = null;
        this.komeMozeDaDoda = [];
        this.perm = [];
        this.dodatoImanje = false;
        this.newCss = false;
        this.lang = "srb";
        this.unesiIme = false;
        this.unesiVlasnikaPlantaze = false;
        this.unesiImanje = false;
        this.unesiVrstu = false;
        this.unesiPodVrstu = false;
        this.unesiProizvodjaca = false;
        this.unesiPoligon = false;
        this.nijeDodato = false;
        this.meniMultiLang = {
            "srb": [
                { "num": "0", "text": "Dodaj plantažu" },
                { "num": "1", "text": " Dodaj imanje" },
                { "num": "2", "text": "Unos podataka o novoj plantaži" },
                { "num": "3", "text": " Ime plantaže" },
                { "num": "4", "text": " Izaberite vlasnika plantaže" },
                { "num": "5", "text": " Izaberite imanje" },
                { "num": "6", "text": "Izaberite vrstu" },
                { "num": "7", "text": "Izaberite podvrstu" },
                { "num": "8", "text": "Izaberite proizvodjača semena" },
                { "num": "9", "text": "Sačuvaj" },
                { "num": "10", "text": "Unos podataka o novom imanju" },
                { "num": "11", "text": "Ime imanja" },
                { "num": "12", "text": "Izaberite vlasnika imanja." },
                { "num": "13", "text": "Imanje dodato." },
                { "num": "14", "text": "Imanje sa zadatim imenom već postoji." },
                { "num": "15", "text": "Unesite ime." },
                { "num": "16", "text": "Morate izabrati vlasnika." },
                { "num": "17", "text": "Morate izabrati imanje." },
                { "num": "18", "text": "Morate uneti vrstu." },
                { "num": "19", "text": "	Morate uneti podvrstu." },
                { "num": "20", "text": "Morate uneti ime proizvodjača." },
                { "num": "21", "text": "	Morate da nacrtate poligon sa lokacijom Vaše plantaže." },
                { "num": "22", "text": "Uspesno ste dodali plantažu." }
            ],
            "eng": [
                { "num": "0", "text": " Add Plantation" },
                { "num": "1", "text": " Add property" },
                { "num": "2", "text": "Insert data about new plantation" },
                { "num": "3", "text": "Plantation name" },
                { "num": "4", "text": "Select owner of plantation" },
                { "num": "5", "text": "Select property" },
                { "num": "6", "text": "Select type" },
                { "num": "7", "text": "Select subtype" },
                { "num": "8", "text": "Select seed producers" },
                { "num": "9", "text": "Save" },
                { "num": "10", "text": "Insert data about new property" },
                { "num": "11", "text": "Property name" },
                { "num": "12", "text": "Select owner of property" },
                { "num": "13", "text": "Property added" },
                { "num": "14", "text": "Property with same name already exists" },
                { "num": "15", "text": "Enter name" },
                { "num": "16", "text": "Select owner" },
                { "num": "17", "text": "Select property" },
                { "num": "18", "text": "You have to select type" },
                { "num": "19", "text": "You have to select subtype" },
                { "num": "20", "text": "You have to select producer" },
                { "num": "21", "text": "You have to draw plantation on the map" },
                { "num": "22", "text": "You have successfully added plantation" }
            ],
            "ger": [
                { "Num": "0", "text": "Plantage hinzufügen" },
                { "Num": "1", "text": "Eigenschaft hinzufügen" },
                { "Num": "2", "text": "Daten über neue Plantage einfügen" },
                { "Num": "3", "text": "Plantagenname" },
                { "Num": "4", "text": "Besitzer der Plantage auswählen" },
                { "Num": "5", "text": "Eigenschaft auswählen" },
                { "Num": "6", "text": "Typ auswählen" },
                { "Num": "7", "text": "Untertyp auswählen" },
                { "Num": "8", "text": "Seed Produzenten auswählen" },
                { "Num": "9", "text": "Speichern" },
                { "Num": "10", "text": "Daten über neue Eigenschaft einfügen" },
                { "Num": "11", "text": "Eigenschaftsname" },
                { "Num": "12", "text": "Besitzer der Eigenschaft auswählen" },
                { "Num": "13", "text": "Eigenschaft hinzugefügt" }
            ],
            "spa": [
                { "Num": "0", "text": "Add Plantation" },
                { "Num": "1", "text": "Añadir propiedad" },
                { "Num": "2", "text": "Insertar datos sobre la nueva plantación" },
                { "Num": "3", "text": "Nombre de la plantación" },
                { "Num": "4", "text": "Select owner of plantation" },
                { "Num": "5", "text": "Seleccionar propiedad" },
                { "Num": "6", "text": "Seleccionar tipo" },
                { "Num": "7", "text": "Select subtype" },
                { "Num": "8", "text": "Seleccionar productores de semillas" },
                { "Num": "9", "text": "Guardar" },
                { "Num": "10", "text": "Insertar datos sobre nueva propiedad" },
                { "Num": "11", "text": "Nombre de la propiedad" },
                { "Num": "12", "text": "Seleccionar propietario de la propiedad" },
                { "Num": "13", "text": "Propiedad añadida" }
            ],
            "ita": [
                { "Num": "0", "text": "Aggiungi piantagione" },
                { "Num": "1", "text": "Aggiungi proprietà" },
                { "Num": "2", "text": "Inserisci dati sulla nuova piantagione" },
                { "Num": "3", "text": "nome piantagione" },
                { "Num": "4", "text": "Seleziona proprietario della piantagione" },
                { "Num": "5", "text": "Seleziona proprietà" },
                { "Num": "6", "text": "Seleziona tipo" },
                { "Num": "7", "text": "Seleziona sottotipo" },
                { "Num": "8", "text": "Seleziona i produttori di sementi" },
                { "Num": "9", "text": "Salva" },
                { "Num": "10", "text": "Inserisci dati sulla nuova proprietà" },
                { "Num": "11", "text": "Nome proprietà" },
                { "Num": "12", "text": "Seleziona proprietario di proprietà" },
                { "Num": "13", "text": "Proprietà aggiunta" }
            ],
            "gre": [
                { "Num": "0", "text": "Προσθήκη φυτείας" },
                { "Num": "1", "text": "Προσθήκη ιδιότητας" },
                { "Num": "2", "text": "Εισαγωγή δεδομένων για νέα φυτεία" },
                { "Num": "3", "text": "Όνομα φυτείας" },
                { "Num": "4", "text": "Επιλέξτε τον κάτοχο της φυτείας" },
                { "Num": "5", "text": "Επιλογή ιδιότητας" },
                { "Num": "6", "text": "Επιλογή τύπου" },
                { "Num": "7", "text": "Επιλογή υποτύπου" },
                { "Num": "8", "text": "Επιλογή παραγωγών σπόρων" },
                { "Num": "9", "text": "Αποθήκευση" },
                { "Num": "10", "text": "Εισαγωγή δεδομένων για νέα ιδιοκτησία" },
                { "Num": "11", "text": "Όνομα ιδιότητας" },
                { "Num": "12", "text": "Επιλογή ιδιοκτήτη ιδιοκτησίας" },
                { "Num": "13", "text": "Προστέθηκε η ιδιότητα" }
            ],
            "hun": [
                { "Num": "0", "text": "Plantation hozzáadása" },
                { "Num": "1", "text": "Tulajdonság hozzáadása" },
                { "Num": "2", "text": "Adja meg az új ültetvényről származó adatokat" },
                { "Num": "3", "text": "Ültetvénynév" },
                { "Num": "4", "text": "Válassza ki az ültetvény tulajdonosát" },
                { "Num": "5", "text": "Tulajdonság kiválasztása" },
                { "Num": "6", "text": "Válassz típust" },
                { "Num": "7", "text": "Válasszon altípust" },
                { "Szám": "8", "text": "Válasszon vetőmagtermelőket" },
                { "Num": "9", "text": "Mentés" },
                { "Num": "10", "text": "Adja meg az új tulajdonságok adatait" },
                { "Num": "11", "text": "Tulajdonnév" },
                { "Num": "12", "text": "Tulajdonos kiválasztása" },
                { "Num": "13", "text": "Tulajdonság hozzáadva" }
            ],
            "mac": [
                { "Бр": "0", "text": "Додај плантажа" },
                { "Бр": "1", "text": "Додај сопственост" },
                { "Бр": "2", "text": "Внесување податоци за нови насади" },
                { "Бр": "3", "text": "Име на плантажа" },
                { "Бр": "4", "text": "Изберете сопственик на плантажа" },
                { "Бр": "5", "text": "Избери сопственост" },
                { "Бр": "6", "text": "Изберете тип" },
                { "Бр": "7", "text": "Изберете подтип" },
                { "Бр": "8", "text": "Изберете производители на семе" },
                { "Бр": "9", "text": "Зачувај" },
                { "Бр": "10", "text": "Вметни податоци за нов имот" },
                { "Бр": "11", "text": "Име на сопственост" },
                { "Бр": "12", "text": "Изберете сопственик на имот" },
                { "Бр": "13", "text": "додаде сопственост" }
            ],
            "slo": [
                { "Num": "0", "text": "Dodaj Nasadi" },
                { "Num": "1", "text": "Dodaj premoženja" },
                { "Num": "2", "text": "Vnesite podatke o novem nasada" },
                { "Num": "3", "tekst": "ime nasadov" },
                { "Num": "4", "text": "Izberite lastnik nasada" },
                { "Num": "5", "tekst": "Izbira lastnina" },
                { "Num": "6", "tekst": "Izbira tipa" },
                { "Num": "7", "text": "Izberite podvrsto" },
                { "Num": "8", "text": "Izberite proizvajalci semen" },
                { "Num": "9", "text": "Shrani" },
                { "Num": "10", "text": "Vnesite podatke o novi premoženja" },
                { "Num": "11", "text": "Ime lastnosti" },
                { "Num": "12", "text": "Izberite lastnik premoženja" },
                { "Num": "13", "tekst": "lastnina doda" }
            ],
            "fra": [
                { "Num": "0", "text": "Ajouter plantation" },
                { "Num": "1", "text": "Ajouter une propriété" },
                { "Num": "2", "text": "Insérer des données sur la nouvelle plantation" },
                { "Num": "3", "text": "Nom de la plantation" },
                { "Num": "4", "text": "Choisir le propriétaire de la plantation" },
                { "Num": "5", "text": "Sélectionner la propriété" },
                { "Num": "6", "text": "Sélectionner le type" },
                { "Num": "7", "text": "Sélectionner un sous-type" },
                { "Num": "8", "text": "Sélectionner les producteurs de semences" },
                { "Num": "9", "text": "Enregistrer" },
                { "Num": "10", "text": "Insérer des données sur la nouvelle propriété" },
                { "Num": "11", "text": "Nom de la propriété" },
                { "Num": "12", "text": "Choisir propriétaire de propriété" },
                { "Num": "13", "text": "Propriété ajoutée" }
            ],
            "hav": [
                { "NUM": "0", "text": "E hui Plantation" },
                { "NUM": "1", "text": "Pākuʻi waiwai" },
                { "NUM": "2", "text": "hookomoʻikepili e pili ana hou māla" },
                { "NUM": "3", "text": "Plantation inoa" },
                { "NUM": "4", "text": "E koho i kanaka o ka māla" },
                { "NUM": "5", "text": "E koho i ka waiwai" },
                { "NUM": "6", "text": "E koho type" },
                { "NUM": "7", "text": "E koho i subtype" },
                { "NUM": "8", "text": "E koho i ka hua nā hoʻohua" },
                { "NUM": "9", "text": "Mālama i" },
                { "NUM": "10", "text": "hookomoʻikepili e pili ana hou waiwai" },
                { "NUM": "11", "text": "Property inoa" },
                { "NUM": "12", "text": "E koho i mea nāna ka waiwai" },
                { "NUM": "13", "text": "Property hou" }
            ]
        };
        this.createForm();
    }
    AddPlantation.prototype.promeniTab = function () {
        this.plantazaVidljiva = true;
        this.imanjeVidljivo = false;
    };
    AddPlantation.prototype.promeniTab1 = function () {
        this.plantazaVidljiva = false;
        this.imanjeVidljivo = true;
    };
    AddPlantation.prototype.uzmiImanja = function () {
        var _this = this;
        this.http.get("users/uzmiImanja")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.imanja = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.cleanInput = function () {
        for (var i = 0; i < this.nizPoligona.length; i++) {
            this.nizPoligona[i] = null;
            this.nizOverlay[i].setMap(null);
        }
        this.nizPoligona = [];
        this.nizOverlay = [];
    };
    AddPlantation.prototype.createForm = function () {
        this.plantForm = this.fb.group({
            name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["e" /* Validators */].required],
            vrsta: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["e" /* Validators */].required],
            podvrsta: [''],
            proizvodjacSemena: [''],
            vlasnikPlantaze: ['']
        });
    };
    AddPlantation.prototype.getUser = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            console.log(_this.user);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.dozvoleKodVlasnika = function () {
    };
    AddPlantation.prototype.dodajImanje = function () {
        var _this = this;
        var idvlasnika;
        idvlasnika = document.getElementById("vlasnik");
        idvlasnika = idvlasnika.options[idvlasnika.selectedIndex].value;
        if (idvlasnika == "" || idvlasnika === undefined || idvlasnika === null) {
            this.unesiVlasnikaPlantaze = true;
            return;
        }
        console.log("!");
        console.log(idvlasnika);
        this.http.get("users/dodajImanje/" + this.imanjeIme + "/" + idvlasnika)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.dodatoImanje = data;
            if (_this.dodatoImanje == true) {
                setTimeout(function () {
                    _this.dodatoImanje = false;
                }, 3000);
                _this.uzmiImanja();
            }
            else {
                _this.nijeDodato = true;
                setTimeout(function () {
                    _this.nijeDodato = false;
                }, 3000);
            }
            /*            this.dodatoImanje = data;
                         this.uzmiImanja();*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.close = function () {
        this.dodatoImanje = false;
    };
    AddPlantation.prototype.addPlantation = function (im) {
        var _this = this;
        var idOw;
        var model = this.plantForm.value;
        var e;
        e = document.getElementById("vlasnici");
        e = e.options[e.selectedIndex].value;
        idOw = e;
        this.http.get("types/addPlantation/" + idOw + "/" + model.name + "/" + model.vrsta + "/" + model.podvrsta + "/" + model.proizvodjacSemena + "/" + im + "/" + JSON.stringify(this.nizPoligona))
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.test = data;
            if (_this.test.success) {
                _this.dodataPlantaza = true;
            }
            else {
                _this.dodataPlantaza = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.plantForm.controls['name'].setValue('');
        this.cleanInput();
    };
    AddPlantation.prototype.onSubmit = function () {
        var im;
        im = document.getElementById("imanje");
        if (im == "" || im === null || im === undefined) {
            this.unesiImanje = true;
            return;
        }
        if (im.options == "" || im.options === null || im.options === undefined) {
            this.unesiImanje = true;
            return;
        }
        if (im.options[im.selectedIndex] == "" || im.options[im.selectedIndex] === null || im.options[im.selectedIndex] === undefined) {
            this.unesiImanje = true;
            return;
        }
        im = (im.options[im.selectedIndex]).value;
        if (im == "" || im === null || im === undefined) {
            this.unesiImanje = true;
            return;
        }
        var model = this.plantForm.value;
        if (this.nizPoligona[0] == null) {
            this.unesiPoligon = true;
        }
        else {
            if (this.plantForm.value.name == null || this.plantForm.value.name == "") {
                this.unesiIme = true;
            }
            else if (model.vrsta == null || model.podvrsta == null || model.proizvodjacSemena == null || model.vrsta == "" || model.podvrsta == "" || model.proizvodjacSemena == "") {
                this.unesiImanje = true;
            }
            else if (!this.isOwner && (model.vlasnikPlantaze == null || model.vlasnikPlantaze == '')) {
                this.unesiVlasnikaPlantaze = true;
            }
            else {
                this.addPlantation(im);
            }
        }
    };
    ;
    AddPlantation.prototype.userIsOwner = function () {
        var _this = this;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            _this.getOwners();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.getOwners = function () {
        var _this = this;
        this.http.get("users/getOwners")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviVlasnici = data;
            _this.getPerms();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.getPerms = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " " + data.dozvole);
            _this.perm = data;
            if (data.dozvole !== undefined && data.dozvole.length > 0) {
                console.log();
                _this.dozvoleKodGazde = data.dozvole.filter(function (x) { return x.vrednosti.plantCRUD == true; });
                if ((_this.dozvoleKodGazde !== undefined && _this.dozvoleKodGazde.length > 0) || _this.isOwner) {
                    //console.log("broj sa dozvolom kod gazde " + this.dozvoleKodGazde[0].vlasnik);
                    _this.spoji();
                    _this.smeDaPise = true;
                }
            }
            else if (_this.isOwner) {
                _this.spoji();
                _this.smeDaPise = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.spoji = function () {
        console.log(this.sviVlasnici.length + " broj svih vlasnika");
        for (var i = 0; this.sviVlasnici.length !== undefined && i < this.sviVlasnici.length; i++)
            for (var j = 0; this.dozvoleKodGazde !== undefined && j < this.dozvoleKodGazde.length; j++) {
                console.log(this.sviVlasnici[i].idOwner + " " + this.dozvoleKodGazde[j].vlasnik);
                if (this.sviVlasnici[i].idOwner == this.dozvoleKodGazde[j].vlasnik) {
                    var noviG = {
                        id: this.sviVlasnici[i].idOwner,
                        name: this.sviVlasnici[i].name,
                        surname: this.sviVlasnici[i].surname,
                        username: this.sviVlasnici[i].username,
                        email: this.sviVlasnici[i].email
                    };
                    this.komeMozeDaDoda.push(noviG);
                    this.idVlasnika.push(this.sviVlasnici[i].idOwner);
                }
            }
        if (this.isOwner) {
            var noviG = {
                id: this.user.id,
                name: this.user.name,
                surname: this.user.surname,
                username: this.user.username,
                email: this.user.email
            };
            this.komeMozeDaDoda.unshift(noviG);
            this.idVlasnika.unshift(this.user.id);
            this.plantForm.controls['vlasnikPlantaze'].setValue(this.user.id);
        }
        if (!this.isOwner)
            this.plantForm.controls['vlasnikPlantaze'].setValue(this.idVlasnika[0]);
        this.tipovi = this.getTypes(this.idVlasnika);
        this.proizvodjaci = this.getProducers(this.idVlasnika);
    };
    AddPlantation.prototype.ngOnInit = function () {
        var _this = this;
        this.selectedLang = this.meniMultiLang[this.lang];
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
            console.log(_this.dozvole);
        });
        var self = this;
        self.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            console.log(_this.user);
            if (_this.user.id) {
                _this.getArrays();
                _this.userIsOwner();
                _this.uzmiBoje();
                _this.uzmiLang();
            }
            _this.uzmiImanja();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        if (document.getElementById('googleMap') == undefined || document.getElementById('googleMap') == null)
            return;
        self.map = new google.maps.Map(document.getElementById('googleMap'), {
            center: { lat: 44.017813, lng: 20.907229 },
            zoom: 7,
            mapTypeId: 'hybrid'
        });
        self.drawingManager = new google.maps.drawing.DrawingManager({
            drawingControl: true,
            drawingControlOptions: {
                position: google.maps.ControlPosition.TOP_CENTER,
                drawingModes: ['polygon'],
            },
            polygonOptions: {
                clickable: true,
                editable: true,
                zIndex: 1
            }
        });
        google.maps.event.addListener(self.drawingManager, 'overlaycomplete', function (event) {
            var arrayLatLng = event.overlay.getPath().getArray();
            console.log("arrayLatLNg: " + arrayLatLng);
            if (self.nizOverlay == undefined) {
                self.nizOverlay = [];
            }
            self.nizOverlay.push(event.overlay);
            if (self.nizPoligona == undefined) {
                self.nizPoligona = [];
            }
            self.nizPoligona.push(arrayLatLng);
            console.log("nizPOli: " + self.nizPoligona);
        });
        self.drawingManager.setMap(self.map);
    };
    AddPlantation.prototype.getArrays = function () {
        console.log("get arrays");
        this.isLoading = true;
        this.sviPodtipovi = this.getSubtypesById();
    };
    AddPlantation.prototype.getTypes = function (id) {
        var _this = this;
        console.log(this.user.id + " get tajps");
        this.http.get("types/getTypes/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tipovi = data;
            _this.plantForm.controls['vrsta'].setValue(_this.tipovi.find(function (x) { return x.name == 'nepoznat'; }).id);
            console.log(data + " wa wa wa");
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.tipovi;
    };
    AddPlantation.prototype.getSubtypesById = function () {
        var _this = this;
        this.http.get("types/getSubtypes")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviPodtipovi = data;
            _this.podtipovi = (_this.sviPodtipovi.filter(function (x) { return x.name == 'nepoznat'; }));
            _this.plantForm.controls['podvrsta'].setValue(_this.podtipovi.find(function (x) { return x.name == 'nepoznat'; }).id);
            _this.ddVisible = true;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        console.log(" pa podtipovi" + this.sviPodtipovi);
        return this.sviPodtipovi;
    };
    AddPlantation.prototype.getProducers = function (id) {
        var _this = this;
        this.http.get("types/getProducers/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.proizvodjaci = data;
            var id = _this.proizvodjaci.find(function (x) { return x.name == 'nepoznat'; }).id;
            _this.plantForm.controls['proizvodjacSemena'].setValue(id);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.proizvodjaci;
    };
    AddPlantation.prototype.onSelect = function (typeID) {
        console.log(this.sviPodtipovi[0].idType);
        this.podtipovi = this.sviPodtipovi.filter(function (x) { return x.idType == typeID; });
        console.log("asd dda" + this.podtipovi);
        if (this.podtipovi.length > 0)
            this.ddVisible = true;
        else
            this.ddVisible = false;
    };
    AddPlantation.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            console.log(_this.lang);
            console.log(_this.lang[0]["lang"]);
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddPlantation.prototype.setLang = function () {
        this.uzmiLang();
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__plantation__["d" /* Plantation */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__plantation__["d" /* Plantation */]) === 'function' && _a) || Object)
    ], AddPlantation.prototype, "plantation", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__plantation__["e" /* Vrsta */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__plantation__["e" /* Vrsta */]) === 'function' && _b) || Object)
    ], AddPlantation.prototype, "Tip", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__plantation__["f" /* Proizvodjac */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__plantation__["f" /* Proizvodjac */]) === 'function' && _c) || Object)
    ], AddPlantation.prototype, "proizvodjac", void 0);
    AddPlantation = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'plantation-form',
            //templateUrl:'./plantation.form.component.html',
            template: __webpack_require__(765)
        }), 
        __metadata('design:paramtypes', [(typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_8__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_8__services_perm_service_service__["a" /* PermService */]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_2__angular_forms__["d" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_forms__["d" /* FormBuilder */]) === 'function' && _e) || Object, (typeof (_f = typeof __WEBPACK_IMPORTED_MODULE_7__plantation_service__["a" /* PlantationService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_7__plantation_service__["a" /* PlantationService */]) === 'function' && _f) || Object, (typeof (_g = typeof __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* Http */]) === 'function' && _g) || Object])
    ], AddPlantation);
    return AddPlantation;
    var _a, _b, _c, _d, _e, _f, _g;
}());
//# sourceMappingURL=addplantation-page.component.js.map

/***/ }),

/***/ 349:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return Plantation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Vrsta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return Proizvodjac; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return tipovi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return podtipovi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return proizvodjaci; });
var Plantation = (function () {
    function Plantation() {
        this.name = '';
    }
    return Plantation;
}());
var Vrsta = (function () {
    function Vrsta() {
        this.id = 0;
        this.name = '';
    }
    return Vrsta;
}());
var Proizvodjac = (function () {
    function Proizvodjac() {
        this.id = 0;
        this.name = '';
    }
    return Proizvodjac;
}());
var tipovi = [
    { id: 1, pid: -1, name: "jabuka" },
    { id: 2, pid: -1, name: "kruska" },
    { id: 3, pid: -1, name: "dunja" },
    { id: 4, pid: -1, name: "cvekla" }
];
var podtipovi = [
    { id: 1, pid: 1, name: "zlatni delises" },
    { id: 2, pid: 1, name: "sivi delises" },
    { id: 3, pid: 2, name: "Socna zelena" },
];
var proizvodjaci = [
    { id: 1, name: "ns seme" },
    { id: 2, name: "zemun polje" }
];
//# sourceMappingURL=plantation.js.map

/***/ }),

/***/ 350:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_finally__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_finally___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_finally__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_toPromise__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__AddPlantation_plantation_service__ = __webpack_require__(230);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddTypes; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var AddTypes = (function () {
    function AddTypes(permService, fb, plantationService, http) {
        this.permService = permService;
        this.fb = fb;
        this.plantationService = plantationService;
        this.http = http;
        this.unesiProizvodjaca = false;
        this.unesiKulturu = false;
        this.unesiPodkulturu = false;
        this.filter = false;
        this.smeDaDodaje = false;
        this.dodatProizvodjac = false;
        this.dodatTip = false;
        this.dodatPodtip = false;
        this.tipovi = [];
        this.podtipovi = [];
        this.proizvodjaci = [];
        this.komeMozeDaDoda = [];
        this.perm = [];
        this.dozvoleKodGazde = [];
        this.idVlasnika = [];
        this.proizvodjacVidljiv = true;
        this.dodajKulturuVidljiv = false;
        this.dodajPodkulturuVidljiv = false;
        this.spisakKulturaVidljiv = false;
        this.spisakPodkulturuVidljiv = false;
        this.spisakProizvodjacaVidljiv = false;
        this.sviVlasnici = [];
        this.newCss = false;
        this.lang = "srb";
        this.createProducerForm();
        this.createSubtypeForm();
        this.createTypeForm();
    }
    AddTypes.prototype.promeniTab = function () {
        this.proizvodjacVidljiv = true;
        this.dodajKulturuVidljiv = false;
        this.dodajPodkulturuVidljiv = false;
        this.spisakKulturaVidljiv = false;
        this.spisakPodkulturuVidljiv = false;
        this.spisakProizvodjacaVidljiv = false;
        this.filter = false;
    };
    AddTypes.prototype.promeniTab2 = function () {
        this.proizvodjacVidljiv = false;
        this.dodajKulturuVidljiv = true;
        this.dodajPodkulturuVidljiv = false;
        this.spisakKulturaVidljiv = false;
        this.spisakPodkulturuVidljiv = false;
        this.spisakProizvodjacaVidljiv = false;
        this.filter = false;
    };
    AddTypes.prototype.promeniTab3 = function () {
        this.proizvodjacVidljiv = false;
        this.dodajKulturuVidljiv = false;
        this.dodajPodkulturuVidljiv = true;
        this.spisakKulturaVidljiv = false;
        this.spisakPodkulturuVidljiv = false;
        this.spisakProizvodjacaVidljiv = false;
        this.filter = false;
    };
    AddTypes.prototype.promeniTab4 = function () {
        this.proizvodjacVidljiv = false;
        this.dodajKulturuVidljiv = false;
        this.dodajPodkulturuVidljiv = false;
        this.spisakKulturaVidljiv = true;
        this.spisakPodkulturuVidljiv = false;
        this.spisakProizvodjacaVidljiv = false;
        this.filter = false;
    };
    AddTypes.prototype.promeniTab5 = function () {
        this.proizvodjacVidljiv = false;
        this.dodajKulturuVidljiv = false;
        this.dodajPodkulturuVidljiv = false;
        this.spisakKulturaVidljiv = false;
        this.spisakPodkulturuVidljiv = true;
    };
    AddTypes.prototype.promeniTab6 = function () {
        this.proizvodjacVidljiv = false;
        this.dodajKulturuVidljiv = false;
        this.dodajPodkulturuVidljiv = false;
        this.spisakKulturaVidljiv = false;
        this.spisakPodkulturuVidljiv = false;
        this.spisakProizvodjacaVidljiv = true;
        this.filter = false;
    };
    AddTypes.prototype.ngOnInit = function () {
        var _this = this;
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        var self = this;
        self.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiBoje();
            _this.uzmiLang();
            console.log(_this.user);
            if (_this.user.id) {
                _this.userIsOwner();
            }
            _this.preuzmiStatistiku();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.preuzmiStatistiku = function () {
        var _this = this;
        this.http.get("stats/stats")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.stats = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.ObrisiTip = function () {
        var _this = this;
        this.http.get("types/obrisi/" + this.tipZaBrisanje)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.stats = data;
            _this.spoji();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.ObrisiPodtip = function () {
        var _this = this;
        this.http.get("types/obrisiPodtip/" + this.podtipZaBrisanje)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.stats = data;
            _this.spoji();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.ObrisiProizvodjaca = function () {
        var _this = this;
        this.http.get("types/obrisiProizvodjaca/" + this.proizvodjacZaBrisanje)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.stats = data;
            _this.spoji();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.postaviIzabranTip = function (value) {
        this.tipZaBrisanje = value;
    };
    AddTypes.prototype.postaviIzabranPodtip = function (value) {
        this.podtipZaBrisanje = value;
    };
    AddTypes.prototype.postaviIzabranogProizvodjaca = function (value) {
        this.proizvodjacZaBrisanje = value;
    };
    AddTypes.prototype.primeniFilter = function () {
        this.filter = !this.filter;
    };
    AddTypes.prototype.createTypeForm = function () {
        this.typeForm = this.fb.group({
            typeName: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required],
            vlasnikPlantaze: ['']
        });
    };
    ;
    AddTypes.prototype.createProducerForm = function () {
        this.producerForm = this.fb.group({
            producerName: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required],
            vlasnikPlantaze: ['']
        });
    };
    ;
    AddTypes.prototype.createSubtypeForm = function () {
        this.subtypeForm = this.fb.group({
            vrsta: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required],
            subtypeName: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required],
            vlasnikPlantaze: ['']
        });
    };
    AddTypes.prototype.addType = function () {
        var _this = this;
        this.unesiKulturu = false;
        var novaKultura = this.typeForm.value;
        var idOw;
        var vidljiv = 0;
        idOw = novaKultura.vlasnikPlantaze;
        console.log(idOw + " add types kad nije vlasnik");
        if ((novaKultura.vlasnikPlantaze == '' || novaKultura.vlasnikPlantaze == null) || (novaKultura.typeName == '' || novaKultura.typeName == null)) {
            this.unesiKulturu = true;
            setTimeout(function () {
                _this.unesiKulturu = false;
            }, 3000);
        }
        else {
            console.log("vidljiv: " + vidljiv + " od user-a " + this.user.id);
            this.http.get("types/addType/" + novaKultura.typeName + "/" + vidljiv + "/" + idOw)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.test = data;
                if (_this.test.success) {
                    _this.dodatTip = true;
                    setTimeout(function () {
                        _this.dodatTip = false;
                    }, 3000);
                    _this.spoji();
                }
                else {
                    _this.dodatTip = false;
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
        this.typeForm.reset();
        console.log(novaKultura.typeName);
    };
    AddTypes.prototype.addSubtype = function () {
        var _this = this;
        this.unesiPodkulturu = false;
        var novaPodKultura = this.subtypeForm.value;
        console.log(novaPodKultura);
        var idOw = novaPodKultura.vlasnikPlantaze;
        console.log(idOw + " add types kad nije vlasnik");
        if ((novaPodKultura.vlasnikPlantaze == '' || novaPodKultura.vlasnikPlantaze == null) || (novaPodKultura.subtypeName == '' || novaPodKultura.subtypeName == null) || (novaPodKultura.vrsta == '' || novaPodKultura.vrsta == null)) {
            this.unesiPodkulturu = true;
            setTimeout(function () {
                _this.unesiPodkulturu = false;
            }, 3000);
        }
        else {
            this.http.get("types/addSubtype/" + novaPodKultura.vrsta + "/" + novaPodKultura.subtypeName + "/" + idOw)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.test = data;
                if (_this.test.success) {
                    _this.dodatPodtip = true;
                    setTimeout(function () {
                        _this.dodatPodtip = false;
                    }, 3000);
                    _this.spoji();
                }
                else {
                    _this.dodatPodtip = false;
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            this.subtypeForm.reset();
            console.log(novaPodKultura.typeName);
        }
    };
    AddTypes.prototype.addProducer = function () {
        var _this = this;
        this.unesiProizvodjaca = false;
        var noviProizvodjac = this.producerForm.value;
        var idOw = noviProizvodjac.vlasnikPlantaze;
        console.log(idOw + " add producer kad nije vlasnik");
        if ((noviProizvodjac.vlasnikPlantaze == '' || noviProizvodjac.vlasnikPlantaze == null) || (noviProizvodjac.producerName == '' || noviProizvodjac.producerName == null)) {
            this.unesiProizvodjaca = true;
            setTimeout(function () {
                _this.unesiProizvodjaca = false;
            }, 3000);
        }
        else {
            this.http.get("types/addProducer/" + noviProizvodjac.producerName + "/" + idOw)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.test = data;
                if (_this.test.success) {
                    _this.dodatProizvodjac = true;
                    setTimeout(function () {
                        _this.dodatProizvodjac = false;
                    }, 3000);
                    var novPr = ({
                        id: _this.test.id,
                        name: noviProizvodjac.producerName
                    });
                    _this.spoji();
                }
                else {
                    _this.dodatProizvodjac = false;
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            this.producerForm.reset();
            console.log(noviProizvodjac.producerName);
        }
    };
    AddTypes.prototype.getTypes = function (id) {
        var _this = this;
        console.log(this.user.id + " get tajps");
        this.http.get("types/getTypes/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tipovi = data;
            for (var i = 0; i < _this.tipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.tipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.tipovi[i].idUser))
                    _this.tipovi[i].smeDaBrise = true;
                else
                    _this.tipovi[i].smeDaBrise = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.tipovi;
    };
    AddTypes.prototype.getSubtypesById = function (id) {
        var _this = this;
        this.http.get("types/getSubtypes/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.podtipovi = data;
            for (var i = 0; i < _this.podtipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.podtipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.podtipovi[i].idUser))
                    _this.podtipovi[i].smeDaBrise = true;
                else
                    _this.podtipovi[i].smeDaBrise = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        console.log(" pa podtipovi" + this.podtipovi);
        return this.podtipovi;
    };
    AddTypes.prototype.getProducers = function (id) {
        var _this = this;
        this.http.get("types/getProducers/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.proizvodjaci = data;
            for (var i = 0; i < _this.proizvodjaci.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.proizvodjaci[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.proizvodjaci[i].idUser))
                    _this.proizvodjaci[i].smeDaBrise = true;
                else
                    _this.proizvodjaci[i].smeDaBrise = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.proizvodjaci;
    };
    AddTypes.prototype.userIsOwner = function () {
        var _this = this;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            console.log(_this.isOwner + " u ng on init add types");
            _this.getOwners();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.getOwners = function () {
        var _this = this;
        this.http.get("users/getOwners")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviVlasnici = data;
            _this.getPerms();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.getPerms = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " " + data.dozvole);
            _this.perm = data;
            if (data.dozvole !== undefined && data.dozvole.length > 0) {
                _this.dozvoleKodGazde = data.dozvole.filter(function (x) { return x.vrednosti.tipDodavanje == true; });
                if (_this.dozvoleKodGazde.length > 0 || _this.isOwner) {
                    _this.smeDaDodaje = true;
                    _this.spoji();
                }
            }
            else if (_this.isOwner) {
                _this.smeDaDodaje = true;
                _this.spoji();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.spoji = function () {
        console.log("SPOJI");
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        for (var i = 0; this.sviVlasnici !== undefined && i < this.sviVlasnici.length; i++)
            for (var j = 0; this.dozvoleKodGazde !== undefined && j < this.dozvoleKodGazde.length; j++) {
                console.log(this.sviVlasnici[i].idOwner + " " + this.dozvoleKodGazde[j].vlasnik);
                if (this.sviVlasnici[i].idOwner == this.dozvoleKodGazde[j].vlasnik) {
                    console.log(this.sviVlasnici[i]);
                    // var noviID = {id:this.sviVlasnici[i].idOwner};
                    var noviG = {
                        id: this.sviVlasnici[i].idOwner,
                        name: this.sviVlasnici[i].name,
                        surname: this.sviVlasnici[i].surname,
                        username: this.sviVlasnici[i].username,
                        email: this.sviVlasnici[i].email
                    };
                    this.komeMozeDaDoda.push(noviG);
                    this.idVlasnika.push(this.sviVlasnici[i].idOwner);
                    console.log(this.komeMozeDaDoda[0]);
                }
            }
        if (this.isOwner) {
            var noviG = {
                id: this.user.id,
                name: this.user.name,
                surname: this.user.surname,
                username: this.user.username,
                email: this.user.email
            };
            this.komeMozeDaDoda.unshift(noviG);
            this.idVlasnika.unshift(this.user.id);
        }
        this.tipovi = this.getTypes(this.idVlasnika);
        this.podtipovi = this.getSubtypesById(this.idVlasnika);
        this.proizvodjaci = this.getProducers(this.idVlasnika);
    };
    AddTypes.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddTypes = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "types-form",
            template: __webpack_require__(766)
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_6__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_6__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_7__AddPlantation_plantation_service__["a" /* PlantationService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_7__AddPlantation_plantation_service__["a" /* PlantationService */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */]) === 'function' && _d) || Object])
    ], AddTypes);
    return AddTypes;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=addTypes.js.map

/***/ }),

/***/ 351:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Tab; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var Tab = (function () {
    function Tab() {
        this.active = false;
    }
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('tabTitle'), 
        __metadata('design:type', String)
    ], Tab.prototype, "title", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], Tab.prototype, "active", void 0);
    Tab = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'tab',
            styles: ["\n    .pane{\n      padding: 1em;\n    }\n  "],
            template: "\n    <div [hidden]=\"!active\" class=\"pane\">\n      <ng-content></ng-content>\n    </div>\n  "
        }), 
        __metadata('design:paramtypes', [])
    ], Tab);
    return Tab;
}());
//# sourceMappingURL=tab.js.map

/***/ }),

/***/ 352:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddWorker; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AddWorker = (function () {
    function AddWorker(myElement, permService, http, localStorageService) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.ovlascenja = ["Pregled plantaza", "Upravljanje plantazama", "Upravljanje kulturama", "Upravljanje zaposlenima", "Promena uloga zaposlenih", "Prikaz statistike"];
        this.sortBy = "name";
        this.vidljivost = false;
        this.meniVidljiv = false;
        this.filter = false;
        this.Vlasnici = [];
        this.vecPovezani = false;
        this.updatedRole = false;
        this.pokusajDodavanjaSamogSebe = false;
        this.vecPoslatZahtev = false;
        this.uspesnoDodatRadnik = false;
        this.uspesnoIzbrisanRadnik = false;
        this.usernameExists = false;
        this.radnikVecZaposlen = false;
        this.radnikNepostoji = false;
        this.radnikJeVlasnik = false;
        this.isOwner = false;
        this.brojacDozvolaZaDodavanje = 0;
        this.brojacDozvolaZaAzuriranje = 0;
        this.pokusajDodavanjaAdmina = false;
        this.listaVidljiva = true;
        this.dodavanjeVidljiva = false;
        this.listanjeUloga = false;
        this.ulogaSeKoristi = false;
        this.uspesnObrisanRole = false;
        this.newCss = false;
        this.lang = "srb";
        this.koJeTu = this.localStorageService.get("username1");
        this.username = '';
        this.useri = [];
        this.filteredList = [];
        this.meniMultiLang = {
            "srb": [
                /*0*/ { "Lista radnika": " Lista radnika" },
                /*1*/ { "Dodaj radnika": " Dodaj radnika" },
                /*2*/ { "Lista uloga": " Lista uloga" },
                /*3*/ { "Odabir gazde": "Odabir gazde" },
                /*4*/ { "Lista mojih ljudi": "Lista mojih ljudi" },
                /*5*/ { "Pretraga zaposlenih": "Pretraga zaposlenih" },
                /*6*/ { "Ime": "Ime" },
                /*7*/ { "Prezime": "Prezime" },
                /*8*/ { "Uloga/Promena uloge": "Uloga/Promena uloge" },
                /*9*/ { "Ukloni": "Ukloni" },
                /*10*/ { "Prethodna": "Prethodna" },
                /*11*/ { "Sledeca": "Sledeća" },
                /*12*/ { "Uspesno ste izbrisali radnika": "Uspešno ste izbrisali radnika" },
                /*13*/ { "Radniku ste vec poslali zahtev.": "Radniku ste već poslali zahtev." },
                /*14*/ { "Izabrani radnik je vec zaposlen kod Vas.": "Izabrani radnik je već zaposlen kod Vas." },
                /*15*/ { "Uspesno ste izabrali novu ulogu": "Uspešno ste izabrali novu ulogu" },
                /*16*/ { "Brisanje radnika": "Brisanje radnika" },
                /*17*/ { "Da li ste sigurni da zelite da obrisete radnika?": "Da li ste sigurni da želite da obrišete radnika?" },
                /*18*/ { "Potvrdi": " Potvrdi" },
                /*19*/ { "Odabir novih radnika": "Odabir novih radnika" },
                /*20*/ { "Poslat je zahtev radniku": "Poslat je zahtev radniku" },
                /*21*/ { "Izabrani radnik je vec zaposlen kod Vas": "Izabrani radnik je već zaposlen kod Vas." },
                /*22*/ { "Nije moguce dodati administratora kao radnika.": "Nije moguce dodati administratora kao radnika." },
                /*23*/ { "	Nije moguce dodati samog sebe.": "Nije moguce dodati samog sebe." },
                /*24*/ { "Nije moguce dodati izabranog radnika.": "Nije moguce dodati izabranog radnika." },
                /*25*/ { "Nije moguce dodati izabranog radnika.": "Nije moguce dodati izabranog radnika." },
                /*26*/ { "Izabrani radnik je vlasnik neke druge parcele": "	Izabrani radnik je vlasnik neke druge parcele" },
                /*27*/ { "Uspesno ste dodali role": "Uspešno ste dodali ulogu." },
                /*28*/ { "Uloga": "Uloga" },
                /*29*/ { "Username radnika": "Username radnika" },
                /*30*/ { "Omogucena prava:": "Omogucena prava:" },
                /*31*/ { "Gledanje plantaza": "Pregled plantaža" },
                /*32*/ { "Plantaza CRUD": "Upravljanje plantažama" },
                /*33*/ { "Tip CRUD": "Upravljanje kulturama" },
                /*34*/ { "Dodavanje i brisanje radnika": "Upravljanje zaposlenima" },
                /*35*/ { "Promena rola radnika": "Promena uloga zaposlenih" },
                /*36*/ { "Prikaz statistike": "Prikaz statistike" },
                /*37*/ { "Sacuvaj": "Sacuvaj" },
                /*38*/ { "Prikazi samo moje uloge": "Prikaži samo moje uloge" },
                /*39*/ { "Naziv uloge": "Naziv uloge" },
                /*40*/ { "Brisanje": "Brisanje" },
                /*41*/ { "Dodaj novu ulogu": "Dodaj novu ulogu" },
                /*42*/ { "Naziv uloge": "Naziv uloge" },
                /*43*/ { "Izadji": "Izadji" },
                /*44*/ { "Brisanje uloge": "Brisanje uloge" },
                /*45*/ { "Da li ste sigurni da zelite da obrisete ulogu?": "Da li ste sigurni da zelite da obrišete ulogu?" },
                /*46*/ { "Nekome od vasih radnika je dodeljena ova uloga. Promenite ulogu ili uklonite radnika": "Nekome od Vaših radnika je dodeljena ova uloga. Promenite ulogu ili uklonite radnika" },
            ],
            "eng": [
                /*0*/ { "Lista radnika": "List of workers" },
                /*1*/ { "Dodaj radnika": "Add workers" },
                /*2*/ { "Lista uloga": "Role list" },
                /*3*/ { "Odabir gazde": "Choose owner" },
                /*4*/ { "Lista mojih ljudi": "List of my workers" },
                /*5*/ { "Pretraga zaposlenih": "Pretraga zaposlenih" },
                /*6*/ { "Ime": "Name" },
                /*7*/ { "Prezime": "Surname" },
                /*8*/ { "Uloga/Promena uloge": "The Role / change role" },
                /*9*/ { "Ukloni": "Remove" },
                /*10*/ { "Prethodna": "Prethodna" },
                /*11*/ { "Sledeca": "Sledeca" },
                /*12*/ { "Uspesno ste izbrisali radnika": "You have successfully deleted the workers" },
                /*13*/ { "Radniku ste vec poslali zahtev.": "You have already sent the request to this worker" },
                /*14*/ { "Izabrani radnik je vec zaposlen kod Vas.": "The chosen worker already belongs to you" },
                /*15*/ { "Uspesno ste izabrali novu ulogu": "You have successfully chosen a new role" },
                /*16*/ { "Brisanje radnika": "Delete workers" },
                /*17*/ { "Da li ste sigurni da zelite da obrisete radnika?": "Are you sure you want to delete the worker?" },
                /*18*/ { "Potvrdi": " Verify" },
                /*19*/ { "Odabir novih radnika": "Selecting a new workers" },
                /*20*/ { "Poslat je zahtev radniku": "Request has been sent" },
                /*21*/ { "Izabrani radnik je vec zaposlen kod Vas": "The chosen worker already works for you" },
                /*22*/ { "Nije moguce dodati administratora kao radnika.": "It is not possible to add an administrator as an employee" },
                /*23*/ { "	Nije moguce dodati samog sebe.": "You can not add yourself." },
                /*24*/ { "Nije moguce dodati izabranog radnika.": "It is not possible to add the selected employee." },
                /*25*/ { "Nije moguce dodati izabranog radnika.": "It is not possible to add the selected employee." },
                /*26*/ { "Izabrani radnik je vlasnik neke druge parcele": "The selected employee owns other plots" },
                /*27*/ { "Uspesno ste dodali role": "You have successfully added role" },
                /*28*/ { "Uloga": "Role" },
                /*29*/ { "Username radnika": "Worker username" },
                /*30*/ { "Omogucena prava:": "provided rights:" },
                /*31*/ { "Gledanje plantaza": "Viewing plantations" },
                /*32*/ { "Plantaza CRUD": "Manage Plantations" },
                /*33*/ { "Tip CRUD": "Manage types" },
                /*34*/ { "Dodavanje i brisanje radnika": "Manage employees" },
                /*35*/ { "Promena rola radnika": "Changing worker roles " },
                /*36*/ { "Prikaz statistike": "View Statistics" },
                /*37*/ { "Sacuvaj": "Save" },
                /*38*/ { "Prikazi samo moje uloge": "Show only my role" },
                /*39*/ { "Naziv uloge": "Role name" },
                /*40*/ { "Brisanje": "Delete" },
                /*41*/ { "Dodaj novu ulogu": "Add a new role" },
                /*42*/ { "Naziv uloge": "Role name" },
                /*43*/ { "Izadji": "Exit" },
                /*44*/ { "Brisanje uloge": "Deleting a role" },
                /*45*/ { "Da li ste sigurni da zelite da obrisete ulogu?": "Are you sure you want to delete this role?" },
                /*46*/ { "Nekome od vasih radnika je dodeljena ova uloga. Promenite ulogu ili uklonite radnika": " one of your employees is assigned to this role. Change or remove the role of worker" },
            ],
        };
        this.filtriraniUseri = [];
        this.userConnect = [];
        this.elementRef = myElement;
    }
    AddWorker.prototype.postaviZaBrisanje = function (value) {
        this.radnikZaBrisanje = value;
    };
    AddWorker.prototype.filter1 = function () {
        if (this.username !== "") {
            this.filteredList = this.useri.filter(function (el) {
                return el.toLowerCase().indexOf(this.username.toLowerCase()) > -1;
            }.bind(this));
        }
        else {
            this.filteredList = [];
        }
    };
    AddWorker.prototype.select = function (item) {
        this.username = item;
        this.filteredList = [];
    };
    AddWorker.prototype.handleClick = function (event) {
        var clickedComponent = event.target;
        var inside = false;
        do {
            if (clickedComponent === this.elementRef.nativeElement) {
                inside = true;
            }
            clickedComponent = clickedComponent.parentNode;
        } while (clickedComponent);
        if (!inside) {
            this.filteredList = [];
        }
    };
    AddWorker.prototype.onChangeRoleUpdate = function (roleID, workerID) {
        var _this = this;
        this.updateRole = roleID;
        this.updatedRole = true;
        setTimeout(function () {
            _this.updatedRole = false;
        }, 3000);
        this.workerID = workerID;
        this.update();
        console.log(this.updateRole);
    };
    AddWorker.prototype.resetuj = function () {
        this.radnikJeVlasnik = false;
        this.radnikVecZaposlen = false;
        this.pokusajDodavanjaSamogSebe = false;
        this.pokusajDodavanjaAdmina = false;
        this.vecPoslatZahtev = false;
    };
    AddWorker.prototype.onChangeW = function (newValue) {
        this.selectedWorker = newValue;
        console.log(this.selectedWorker);
        // console.log(this.user.id);
    };
    AddWorker.prototype.onChangeV = function (newValue) {
        var _this = this;
        var e;
        e = document.getElementById("vlasniciZaAdd");
        if (e === undefined || e === null || e === "")
            this.selectedOwner = e.options[0].value;
        this.selectedOwner = e.options[e.selectedIndex].value;
        var pom = this.filtriraniUseri;
        this.useri = [];
        for (var i = 0; i < pom.length; i++) {
            if (this.userConnect.find(function (x) { return x.idOwner == _this.selectedOwner && pom[i].id == x.idWorker; }) == undefined)
                this.useri.push(pom[i].username);
        }
        console.log(this.selectedOwner);
    };
    AddWorker.prototype.onChangeVV = function (newValue) {
        var e;
        e = document.getElementById("vlasniciZaAddRole");
        if (e === undefined || e === null || e === "")
            return;
        this.selectedOwnerForRole = e.options[e.selectedIndex].value;
        console.log(this.selectedOwnerForRole);
    };
    AddWorker.prototype.onChangeLL = function (newValue) {
        var _this = this;
        var e;
        e = document.getElementById("vlasniciZaPrikaz");
        if (e === undefined || e === null || e === "")
            return;
        e = e.options[e.selectedIndex].value;
        if (e === undefined || e === null || e === "")
            return;
        this.trenutneDozvole = undefined;
        this.selectedOwnerForList = e;
        console.log("~~");
        console.log(this.selectedOwnerForList);
        if (this.user && this.dozvoleKodVlasnika !== undefined && this.dozvoleKodVlasnika.dozvole !== undefined)
            this.trenutneDozvole = this.dozvoleKodVlasnika.dozvole.find(function (x) { return x.vlasnik == newValue && x.radnik == _this.user.id; });
        console.log(this.trenutneDozvole);
        this.getUsersWorkersForOwner(this.selectedOwnerForList);
    };
    AddWorker.prototype.onChangeR = function (newValue) {
        var e;
        e = document.getElementById("roleDodavanje");
        if (e === undefined || e === null || e === "")
            return;
        e = e.options[e.selectedIndex].value;
        if (e === undefined || e === null || e === "")
            return;
        console.log("~ " + e);
        this.selektovan = true;
        this.binary = {};
        this.i = 0;
        this.selectedRole = e;
        var n = this.selectedRole;
        var roleValue;
        // foreach petlja za uloge    
        this.roles.forEach(function (data) {
            if (data && data.id == n)
                roleValue = data.permission;
        });
        // uzmi binarne vrednosti dozvola
        for (this.c = 5; this.c >= 0; this.c--) {
            this.k = roleValue >> this.c;
            if (this.k & 1)
                this.binary[this.i] = 1;
            else
                this.binary[this.i] = 0;
            this.i = this.i + 1;
        }
        console.log(this.binary);
        this.localStorageService.set("binary", this.binary);
        var pom = this.localStorageService.get("binary");
    };
    AddWorker.prototype.uzmiPrvi = function () {
        var e = this.roles.filter(function (x) { return x.name == "Menadzer"; });
        e = e[0].id;
        this.selektovan = true;
        this.binary = {};
        this.i = 0;
        this.selectedRole = e;
        var n = this.selectedRole;
        var roleValue;
        // foreach petlja za uloge    
        this.roles.forEach(function (data) {
            if (data && data.id == n)
                roleValue = data.permission;
        });
        // uzmi binarne vrednosti dozvola
        for (this.c = 5; this.c >= 0; this.c--) {
            this.k = roleValue >> this.c;
            if (this.k & 1)
                this.binary[this.i] = 1;
            else
                this.binary[this.i] = 0;
            this.i = this.i + 1;
        }
    };
    AddWorker.prototype.promeniTab = function () {
        this.listaVidljiva = true;
        this.dodavanjeVidljiva = false;
        this.listanjeUloga = false;
        var e;
        e = document.getElementById("vlasniciZaPrikaz");
        if (e === undefined || e === null || e === "")
            return;
        e.options[0].selected = "selected";
        this.onChangeLL("false");
    };
    AddWorker.prototype.promeniTab1 = function () {
        this.listaVidljiva = false;
        this.dodavanjeVidljiva = true;
        this.listanjeUloga = false;
        this.uzmiPrvi();
        this.onChangeLL("false");
        var e;
        e = document.getElementById("vlasniciZaPrikaz");
        if (e === undefined || e === null || e === "")
            return;
        e.options[0].selected = "selected";
        this.onChangeLL("false");
    };
    AddWorker.prototype.promeniTab2 = function () {
        this.listanjeUloga = true;
        this.listaVidljiva = false;
        this.dodavanjeVidljiva = false;
        this.filter = false;
    };
    AddWorker.prototype.obrisiUlogu = function () {
        var _this = this;
        this.http.get("roles/deleteRole/" + this.ulogaZaBrisanje)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (_this.data) {
                _this.uspesnObrisanRole = true;
                _this.getRoles();
                setTimeout(function () {
                    _this.uspesnObrisanRole = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.primeniFilter = function () {
        this.filter = !this.filter;
    };
    AddWorker.prototype.postaviIzabranuUlogu = function (id) {
        this.ulogaSeKoristi = false;
        var korSaUlogom = this.usersWorkers.filter(function (x) { return x.roleID == id; });
        if (korSaUlogom.length > 0)
            this.ulogaSeKoristi = true;
        else
            this.ulogaZaBrisanje = id;
    };
    AddWorker.prototype.dodajUlogu = function () {
        var _this = this;
        var naziv = document.getElementById("novirole").value;
        if (naziv == "" || naziv === undefined || naziv === null) {
            alert("naziv rola obavezan");
            return;
        }
        var string = "";
        var elem;
        for (var i = 0; this.ovlascenja && i < this.ovlascenja.length; i++) {
            elem = document.getElementById("dozvola" + i);
            if (elem.checked)
                string += "1";
            else
                string += "0";
        }
        var digit = parseInt(string, 2);
        if (this.selectedOwnerForRole !== undefined)
            this.userIDForAddRole = this.selectedOwnerForRole;
        console.log("user za dodavanje " + this.selectedOwnerForRole + " " + naziv + " " + digit);
        this.http.get("roles/addRole/" + naziv + "/" + digit + "/" + this.userIDForAddRole)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (_this.data) {
                _this.uspesnoDodatRole = true;
                _this.getRoles();
                setTimeout(function () {
                    _this.uspesnoDodatRadnik = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.meniToggle = function () {
        this.meniVidljiv = !this.meniVidljiv;
    };
    AddWorker.prototype.ngOnInit = function () {
        var _this = this;
        this.selectedLang = this.meniMultiLang[this.lang];
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        console.log("log");
        console.log("userrr");
        this.http.get("users/getUsers")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.data = data;
            console.log(_this.data[1]);
            console.log(_this.data);
            _this.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                _this.uzmiLang();
                _this.isOWnerCheck();
                console.log(_this.user);
                if (_this.user.success === undefined) {
                    _this.vidljivost = true;
                    _this.popuniTabelu();
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            var pom;
            var i;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.getAutoCompleteData = function () {
        var _this = this;
        var pom, i;
        this.http.get("users/getUserConnect").map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.userConnect = data;
            _this.http.get("users/getUsers")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                pom = data;
                _this.useri = [];
                for (i = 0; i < pom.length; i++) {
                    if (pom[i].username != 'admin' && pom[i].username != _this.user.username) {
                        if (_this.userConnect.find(function (x) { return x.idOwner == _this.selectedOwner && pom[i].id == x.idWorker; }) == undefined)
                            _this.useri.push(pom[i].username);
                        _this.filtriraniUseri.push(pom[i]);
                    }
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.getUsers = function () {
        var _this = this;
        console.log("userrr");
        this.http.get("users/getUsers")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.data = data;
            console.log(_this.data[1]);
            console.log(_this.data);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.getUsersWorkers = function () {
        var _this = this;
        console.log("userrr worker");
        if (this.user)
            this.http.get("users/getUsersWorkers/" + this.user.id)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.usersWorkers = data;
                console.log("worker user " + _this.usersWorkers);
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.getUsersWorkersForOwner = function (idO) {
        var _this = this;
        console.log("userrr worker");
        this.http.get("users/getUsersWorkers/" + idO)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.usersWorkers = data;
            console.log("worker user " + _this.usersWorkers);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.getRoles = function () {
        var _this = this;
        var idVlasnika = [];
        for (var i = 0; i < this.Vlasnici.length; i++)
            idVlasnika.push(this.Vlasnici[i].id);
        console.log("userrr " + idVlasnika);
        this.binary = "";
        this.http.get("users/getRoles/" + idVlasnika)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.roles = data;
            console.log("roles", _this.roles);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.popuniTabelu = function () {
        var _this = this;
        if (this.user)
            this.http.get("users/prikaziPlantaze/" + this.user.id)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.vrste = data;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.getUsersWorkers();
    };
    AddWorker.prototype.dodajRadnika = function () {
        var _this = this;
        this.onChangeV("false");
        this.onChangeR("false");
        if (this.username == "admin") {
            this.pokusajDodavanjaAdmina = true;
            setTimeout(function () {
                _this.pokusajDodavanjaAdmina = false;
            }, 3000);
            return;
        }
        if (this.username == this.koJeTu) {
            this.pokusajDodavanjaSamogSebe = true;
            setTimeout(function () {
                _this.pokusajDodavanjaSamogSebe = false;
            }, 3000);
            return;
        }
        if (this.selectedOwner !== undefined)
            this.userIDForAdd = this.selectedOwner;
        var vrste1;
        var pom = false;
        console.log(this.userIDForAdd + " " + this.username + " " + this.selectedRole);
        /*      this.http.get(`users/proveriPreDodavanjaRadnika/${this.userIDForAdd}/${this.username}/${this.selectedRole}`)
                  .map(res => res.json())
                  .subscribe(data => {
                      vrste1 = data;
                      if (vrste1.success == false)
                          pom = true;
                  },
                  err => console.log(err),
                  () => console.log('Completed'));*/
        var pomm;
        var pom3 = true;
        var pom4 = true;
        var pom2;
        /*    this.http.get(`users/proveriObavestenja/${this.userIDForAdd}/${this.username}`)
                .map(res => res.json())
                .subscribe(data => {
                    pomm = data;
                    if (pomm.success == true) {
                        this.vecPovezani = false;
                        this.vecPoslatZahtev = true;
                        pom3 = false;
                            window.alert("Vec je poslat zahtev!");
    
                                    /*  return;*/
        /*            }
                },
                err => console.log(err),
                () => console.log('Completed'));*/
        this.http.get("users/proveriObavestenja/" + this.userIDForAdd + "/" + this.username)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pomm = data;
            if (pomm.success == true) {
                _this.vecPovezani = false;
                _this.vecPoslatZahtev = true;
                setTimeout(function () {
                    _this.vecPoslatZahtev = false;
                }, 3000);
            }
            else {
                _this.http.get("users/proveriConnect/" + _this.userIDForAdd + "/" + _this.username)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom2 = data;
                    if (pom2.success == true) {
                        _this.vecPovezani = true;
                        _this.vecPoslatZahtev = false;
                        pom4 = false;
                        setTimeout(function () {
                            _this.vecPovezani = false;
                        }, 3000);
                    }
                    else {
                        _this.http.get("users/dodajRadnika2/" + _this.userIDForAdd + "/" + _this.username + "/" + _this.selectedRole)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            _this.dataa = data;
                            console.log(_this.dataa);
                            if (_this.dataa.success) {
                                _this.uspesnoDodatRadnik = true;
                                setTimeout(function () {
                                    _this.uspesnoDodatRadnik = false;
                                }, 3000);
                                _this.vecPoslatZahtev = false;
                                _this.vecPovezani = false;
                                if (_this.dataa[0] == "ima") {
                                    _this.radnikVecZaposlen = true;
                                    setTimeout(function () {
                                        _this.radnikVecZaposlen = false;
                                    }, 3000);
                                }
                                else if (_this.dataa[0] == "nema") {
                                    _this.radnikNepostoji = true;
                                    setTimeout(function () {
                                        _this.radnikNepostoji = false;
                                    }, 3000);
                                }
                                else if (_this.dataa[0] == "vlasnik") {
                                    _this.radnikJeVlasnik = true;
                                    setTimeout(function () {
                                        _this.radnikJeVlasnik = false;
                                    }, 3000);
                                }
                            }
                            else {
                                _this.uspesnoDodatRadnik = false;
                            }
                        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                    }
                    /*           if (this.dataa[0] == "ima") {
                                   this.radnikVecZaposlen = true;
                                   setTimeout(() => {
                                       this.radnikVecZaposlen = false;
                                   }, 3000);
                               }
                               else if (this.dataa[0] == "nema") {
                                   this.radnikNepostoji = true;
                                   setTimeout(() => {
                                       this.radnikNepostoji = false;
                                   }, 3000);
                               }
                               else if (this.dataa[0] == "vlasnik") {
                                   this.radnikJeVlasnik = true;
                                   setTimeout(() => {
                                       this.radnikJeVlasnik = false;
                                   }, 3000);
                               }
               }
            },
            err => console.log(err),
            () => console.log('Completed'));
        this.getUsersWorkers();
       if (this.vecPoslatZahtev == true) {
            setTimeout(() => {
                this.vecPoslatZahtev = false;
            }, 3000);
        }
          if (this.vecPovezani == true) {
            setTimeout(() => {
                this.vecPovezani = false;
            }, 3000);
        }
           }
        },
        err => console.log(err),
        () => console.log('Completed'));

            }
        },
        err => console.log(err),
        () => console.log('Completed'));


 /*   this.http.get(`users/proveriConnect/${this.userIDForAdd}/${this.username}`)
        .map(res => res.json())
        .subscribe(data => {
            pom2 = data;
            if (pom2.success == true) {
                this.vecPovezani = true;
                this.vecPoslatZahtev = false;
                pom4 = false;
                /*     setTimeout(() => {
                              this.vecPovezani = false;
                          }, 3000);*/
                    /*    return;*/
                    /*         }
                         },
                         err => console.log(err),
                         () => console.log('Completed'));
                     var nijeMoguceDodatiRadnika: any = false;
                /*  window.alert(pom3+ " aaaaa "+pom4);*/
                    /*    if (pom3 == true && pom4 == true) {
                            this.http.get(`users/dodajRadnika2/${this.userIDForAdd}/${this.username}/${this.selectedRole}`)
                                .map(res => res.json())
                                .subscribe(data => {
                                    this.dataa = data
                                    console.log(this.dataa);
                                    if (this.dataa.success) {
                                        this.uspesnoDodatRadnik = true;
                                        this.vecPoslatZahtev = false;
                                        this.vecPovezani = false;
                                        if (this.dataa[0] == "ima") {
                                            /*        this.radnikVecZaposlen = true;
                                                    setTimeout(() => {
                                                        this.radnikVecZaposlen = false;
                                                    }, 3000);*/
                    /*              }
                                  else if (this.dataa[0] == "nema") {
                                      this.radnikNepostoji = true;
                                      setTimeout(() => {
                                          this.radnikNepostoji = false;
                                      }, 3000);
                                  }
                                  else if (this.dataa[0] == "vlasnik") {
                                      this.radnikJeVlasnik = true;
                                      setTimeout(() => {
                                          this.radnikJeVlasnik = false;
                                      }, 3000);
                                  }
                              }
                              else {
                                  this.uspesnoDodatRadnik = false;
                                  nijeMoguceDodatiRadnika = true;
                                  setTimeout(() => {
                                      nijeMoguceDodatiRadnika = false;
                                  }, 3000);
                                  /*           if (this.dataa[0] == "ima") {
                                                 this.radnikVecZaposlen = true;
                                                 setTimeout(() => {
                                                     this.radnikVecZaposlen = false;
                                                 }, 3000);
                                             }
                                             else if (this.dataa[0] == "nema") {
                                                 this.radnikNepostoji = true;
                                                 setTimeout(() => {
                                                     this.radnikNepostoji = false;
                                                 }, 3000);
                                             }
                                             else if (this.dataa[0] == "vlasnik") {
                                                 this.radnikJeVlasnik = true;
                                                 setTimeout(() => {
                                                     this.radnikJeVlasnik = false;
                                                 }, 3000);
                                             }*/
                    /*         }
                         },
                         err => console.log(err),
                         () => console.log('Completed'));
                     this.getUsersWorkers();
              /*       if (this.vecPoslatZahtev == true) {
                         setTimeout(() => {
                             this.vecPoslatZahtev = false;
                         }, 3000);
                     }
                       if (this.vecPovezani == true) {
                         setTimeout(() => {
                             this.vecPovezani = false;
                         }, 3000);
                     }*/
                    /*     }*/
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                _this.getUsersWorkers();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.getUsersWorkers();
    };
    AddWorker.prototype.delete = function () {
        var _this = this;
        var id = this.radnikZaBrisanje;
        this.http.get("users/deleteWorkers/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.dataa = data;
            _this.getUsers();
            _this.uspesnoIzbrisanRadnik = true;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.getUsersWorkers();
    };
    AddWorker.prototype.update = function () {
        var _this = this;
        this.http.get("users/updateWorkers/" + this.workerID + "/" + this.updateRole)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.dataa = data;
            _this.getUsersWorkers();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.isOWnerCheck = function () {
        var _this = this;
        this.j = 0;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            if (_this.isOwner)
                _this.Vlasnici.push(_this.user);
            console.log("@#@#");
            console.log(_this.Vlasnici);
            _this.http.get("permisions/dozvoleKodVlasnika")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.dozvoleKodVlasnika = data;
                console.log(_this.dozvoleKodVlasnika);
                for (_this.j = 0; _this.dozvoleKodVlasnika !== undefined && _this.dozvoleKodVlasnika['dozvole'] !== undefined && _this.j < _this.dozvoleKodVlasnika['dozvole'].length; _this.j++) {
                    console.log(_this.dozvoleKodVlasnika['dozvole'][_this.j].vrednosti.radnikDodajBrisi);
                    if (_this.dozvoleKodVlasnika['dozvole'][_this.j].vrednosti.radnikDodajBrisi) {
                        _this.brojacDozvolaZaDodavanje++;
                    }
                    if (_this.dozvoleKodVlasnika['dozvole'][_this.j].vrednosti.radnikAzuriraj) {
                        _this.brojacDozvolaZaAzuriranje++;
                        console.log(_this.brojacDozvolaZaAzuriranje);
                    }
                    if (_this.user && _this.dozvoleKodVlasnika !== undefined && _this.dozvoleKodVlasnika.dozvole !== undefined)
                        var daLiImaDozvolu = _this.dozvoleKodVlasnika.dozvole.find(function (x) { return x.vlasnik == _this.dozvoleKodVlasnika['dozvole'][_this.j].vlasnik && x.radnik == _this.user.id && x.vrednosti.radnikDodajBrisi; });
                    if (daLiImaDozvolu !== null && daLiImaDozvolu !== undefined)
                        _this.Vlasnici.push(_this.data.find(function (x) { return x.id == _this.dozvoleKodVlasnika['dozvole'][_this.j].vlasnik; }));
                    console.log(_this.Vlasnici);
                }
                _this.getRoles();
                //console.log(this.dozvoleKodVlasnika);
                //console.log(this.dozvoleKodVlasnika['dozvole'].length);
                if (_this.Vlasnici[0] != undefined) {
                    _this.selectedOwner = _this.Vlasnici[0].id;
                    _this.getAutoCompleteData();
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            console.log(_this.isOwner);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddWorker = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(767),
            host: { '(document:click)': 'handleClick($event)' },
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__["a" /* PermService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _d) || Object])
    ], AddWorker);
    return AddWorker;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=addworker-page.component.js.map

/***/ }),

/***/ 353:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__plantation__ = __webpack_require__(659);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_perm_service_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UpdatePlantation; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var UpdatePlantation = (function () {
    function UpdatePlantation(permService, fb, http, localStorageService, router) {
        this.permService = permService;
        this.fb = fb;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.vidljivost = false;
        this.uspesnoPromenjeniPodaci = false;
        this.mapProp = null;
        this.map = null;
        this.drawingManager = null;
        this.isLoading = false;
        this.ddVisible = false;
        this.tipovi = [];
        this.podtipovi = [];
        this.proizvodjaci = [];
        this.nizOverley = [];
        this.nizPoligona = []; //!!!
        this.sviPodtipovi = [];
        this.sviVlasnici = [];
        this.perm = [];
        this.dozvoleKodGazde = [];
        this.smeDaPise = false;
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        this.nemaPoligona = false;
        this.imePrazno = false;
        this.polygons = [];
        this.novPoligon = [];
        this.obrisiPol = false;
        this.newCss = false;
        this.lang = "srb";
        this.createForm();
    }
    UpdatePlantation.prototype.getRandomColor = function () {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    };
    UpdatePlantation.prototype.ubaciUBounds = function (niz) {
        var bounds = new google.maps.LatLngBounds();
        for (var j = 0; j < niz.length; j++)
            for (var i = 0; i < niz[j].length; i++) {
                var marker = new google.maps.LatLng(niz[j][i][1], niz[j][i][0]);
                bounds.extend(marker);
            }
        return bounds;
    };
    UpdatePlantation.prototype.obrisiPoligone = function () {
        var self = this;
        for (var i = 0; i < this.polygons.length; i++) {
            this.polygons[i].setMap(null);
        }
        for (var i = 0; i < this.nizOverley.length; i++) {
            this.nizOverley[i].setMap(null);
        }
        ///   this.obrisiPol = true;
        this.nizOverley = [];
        this.novPoligon = [];
        this.nizPoligona = [];
        this.polygons = [];
        console.log(this.nizPoligona);
        console.log(this.nizOverley);
        this;
        google.maps.event.trigger(self.map, 'resize');
    };
    UpdatePlantation.prototype.initMap = function (coords) {
        var self = this;
        var poligon = [];
        var zoom = 2;
        var centar;
        var povrsina = 0;
        this.nizPoligona = []; //!!!!!!!!!
        document.getElementById('mapID').innerHTML = "<div id='googleMap' style='width: 100%; height: 700px'></div>";
        // console.log("coords[0].coordinates.length: " + coords[0].coordinates.length);
        for (var i = 0; i < coords[0].coordinates.length; i++) {
            for (var j = 0; j < coords[0].coordinates[i].length; j++) {
                poligon[poligon.length] = new google.maps.LatLng(coords[0].coordinates[i][j][1], coords[0].coordinates[i][j][0]);
            }
            this.nizPoligona.push(poligon);
            poligon = [];
        }
        var bounds = this.ubaciUBounds(coords[0].coordinates);
        self.map = new google.maps.Map(document.getElementById('googleMap'), {
            mapTypeId: 'hybrid',
            drawingControl: true,
        });
        self.drawingManager = new google.maps.drawing.DrawingManager({
            drawingControl: true,
            drawingControlOptions: {
                position: google.maps.ControlPosition.TOP_CENTER,
                drawingModes: ['polygon'],
            },
            polygonOptions: {
                editable: true,
                strokeColor: '#FFFFFF',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: this.getRandomColor(),
                fillOpacity: 0.35
            }
        });
        self.drawingManager.setMap(self.map);
        self.map.fitBounds(bounds);
        for (var i = 0; i < this.nizPoligona.length; i++) {
            this.polygons.push(new google.maps.Polygon({
                editable: true,
                paths: this.nizPoligona[i],
                strokeColor: '#FFFFFF',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: this.getRandomColor(),
                fillOpacity: 0.35
            }));
        }
        /*
        google.maps.event.addListener(self.drawingManager, 'polygoncomplete', function (event) {
          console.log("zove Poligon komplit!");
    
        });*/
        //  google.maps.event.addListener(this.polygons, "dragend", this.getPolygonCoords());
        //   google.maps.event.addListener(this.polygons.getPath(), "remove_at", this.getPolygonCoords());
        google.maps.event.addListener(self.drawingManager, 'overlaycomplete', function (event) {
            var arrayLatLng = event.overlay.getPath().getArray();
            self.nizOverley.push(event.overlay);
            self.novPoligon.push(arrayLatLng);
            console.log("zove overlej komplit!");
        });
        for (var i = 0; i < this.polygons.length; i++) {
            this.polygons[i].setMap(self.map);
        }
        /* var novPom = this.polygons.getPath().getArray();
         for (var i = 0; i < novPom.length; i++) {
           google.maps.event.addListener(novPom[i], "insert_at", self.getPolygonCoords(i));
           google.maps.event.addListener(novPom[i], "set_at", self.getPolygonCoords(i));
         }*/
        setTimeout(function () {
            google.maps.event.trigger(self.map, 'resize');
        }, 100);
    };
    /*
      getPolygonCoords(j) {
    
        console.log("PRE ");
        console.log(this.nizPoligona);
    
        this.nizPoligona[j] = this.polygons.getPath().getAt(j);
        console.log("POSLE");
        console.log(this.nizPoligona);
    
      }*/
    UpdatePlantation.prototype.prikaziMapu = function (value) {
        var _this = this;
        var coords;
        this.http.get("/plantations/userPlantation/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            coords = data;
            _this.initMap(coords);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.ngOnInit = function () {
        var _this = this;
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.idPlant = this.localStorageService.get("idPlantaze");
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
            _this.uzmiBoje();
            console.log("init " + data);
            if (_this.user.success === undefined) {
                _this.vidljivost = true;
                _this.getArrays();
                _this.userIsOwner();
                _this.prikaziMapu(_this.idPlant);
                _this.getPlantationData(_this.idPlant);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.nazad = function () {
        this.router.navigate(['/user']);
    };
    UpdatePlantation.prototype.promeniPodatke = function () {
        var _this = this;
        var aloo = [];
        console.log("PROIMENI!");
        for (var i = 0; i < this.polygons.length; i++) {
            aloo.push(this.polygons[i].getPath().getArray());
        }
        for (var i = 0; i < this.novPoligon.length; i++) {
            aloo.push(this.novPoligon[i]);
        }
        /*
        if (this.obrisiPol) {
          aloo = [];
          this.obrisiPol = false;
        }*/
        var novo;
        var proba = JSON.stringify(aloo);
        console.log(proba);
        this.http.get("users/promeniPlantaze/" + this.idPlant + "/" + this.user.id + "/" + this.imePlant + "/" + this.nazivTip + "/" + this.imePodT + "/" + this.imePS + "/" + proba)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            novo = data;
            if (novo.success) {
                _this.uspesnoPromenjeniPodaci = true;
                setTimeout(function () {
                    _this.uspesnoPromenjeniPodaci = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.getArrays = function () {
        console.log("get arrays");
        this.isLoading = true;
        this.sviPodtipovi = this.getSubtypesById();
    };
    UpdatePlantation.prototype.getSubtypesById = function () {
        var _this = this;
        this.http.get("types/getSubtypes")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviPodtipovi = data;
            console.log(" pa podtipovi" + _this.sviPodtipovi);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.sviPodtipovi;
    };
    UpdatePlantation.prototype.getTypes = function (id) {
        var _this = this;
        console.log(this.user.id + " get tajps");
        this.http.get("types/getTypes/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tipovi = data;
            console.log(data + " wa wa wa");
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.tipovi;
    };
    UpdatePlantation.prototype.getProducers = function (id) {
        var _this = this;
        this.http.get("types/getProducers/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.proizvodjaci = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.proizvodjaci;
    };
    UpdatePlantation.prototype.onSelect = function (typeID) {
        console.log(this.sviPodtipovi[0].idType);
        this.podtipovi = this.sviPodtipovi.filter(function (x) { return x.idType == typeID; });
        console.log("asd dda" + this.podtipovi);
        if (this.podtipovi.length > 0)
            this.ddVisible = true;
        else
            this.ddVisible = false;
    };
    UpdatePlantation.prototype.createForm = function () {
        this.plantForm = this.fb.group({
            name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["e" /* Validators */].required],
            vrsta: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["e" /* Validators */].required],
            podvrsta: [''],
            proizvodjacSemena: [''],
            vlasnikPlantaze: ['']
        });
    };
    UpdatePlantation.prototype.onSubmit = function () {
        var _this = this;
        var model = this.plantForm.value;
        if (this.nizPoligona[0] == null && this.novPoligon[0] == null) {
            this.nemaPoligona = true;
            setTimeout(function () {
                _this.nemaPoligona = false;
            }, 3000);
        }
        else {
            if (this.plantForm.value.name == null || this.plantForm.value.name == "") {
                this.imePrazno = true;
                setTimeout(function () {
                    _this.imePrazno = false;
                }, 3000);
            }
            else {
                this.imePlant = this.plantForm.value.name;
                this.nazivTip = model.vrsta;
                this.imePodT = model.podvrsta;
                this.imePS = model.proizvodjacSemena;
                // this.imePlant,this.nazivTip,this.imePodT,this.imePS
                this.promeniPodatke();
            }
        }
    };
    ;
    UpdatePlantation.prototype.userIsOwner = function () {
        var _this = this;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            _this.getOwners();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.getOwners = function () {
        var _this = this;
        this.http.get("users/getOwners")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviVlasnici = data;
            _this.getPerms();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.getPerms = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " " + data.dozvole);
            _this.perm = data;
            if (data.dozvole !== undefined && data.dozvole.length > 0) {
                console.log();
                _this.dozvoleKodGazde = data.dozvole.filter(function (x) { return x.vrednosti.plantCRUD == true; });
                if ((_this.dozvoleKodGazde !== undefined && _this.dozvoleKodGazde.length > 0) || _this.isOwner) {
                    //console.log("broj sa dozvolom kod gazde " + this.dozvoleKodGazde[0].vlasnik);
                    _this.spoji();
                    _this.smeDaPise = true;
                }
            }
            else if (_this.isOwner) {
                _this.spoji();
                _this.smeDaPise = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.spoji = function () {
        console.log(this.sviVlasnici.length + " broj svih vlasnika");
        for (var i = 0; this.sviVlasnici.length !== undefined && i < this.sviVlasnici.length; i++)
            for (var j = 0; this.dozvoleKodGazde !== undefined && j < this.dozvoleKodGazde.length; j++) {
                console.log(this.sviVlasnici[i].idOwner + " " + this.dozvoleKodGazde[j].vlasnik);
                if (this.sviVlasnici[i].idOwner == this.dozvoleKodGazde[j].vlasnik) {
                    var noviG = {
                        id: this.sviVlasnici[i].idOwner,
                        name: this.sviVlasnici[i].name,
                        surname: this.sviVlasnici[i].surname,
                        username: this.sviVlasnici[i].username,
                        email: this.sviVlasnici[i].email
                    };
                    this.komeMozeDaDoda.push(noviG);
                    this.idVlasnika.push(this.sviVlasnici[i].idOwner);
                }
            }
        if (this.isOwner) {
            var noviG = {
                id: this.user.id,
                name: this.user.name,
                surname: this.user.surname,
                username: this.user.username,
                email: this.user.email
            };
            this.komeMozeDaDoda.unshift(noviG);
            this.idVlasnika.unshift(this.user.id);
        }
        this.tipovi = this.getTypes(this.idVlasnika);
        this.proizvodjaci = this.getProducers(this.idVlasnika);
    };
    UpdatePlantation.prototype.getPlantationData = function (id) {
        var _this = this;
        console.log("uzmi podatke o plantazi");
        this.http.get("users/podaciOPlantazi/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " i data plant " + data.plant);
            if (data.success) {
                _this.podaciOPlant = data.plant;
                console.log(_this.podaciOPlant);
                _this.imePlantaze = _this.podaciOPlant.name;
                _this.typeId = _this.podaciOPlant.idType;
                _this.podtipovi = _this.sviPodtipovi.filter(function (x) { return x.idType == _this.typeId; });
                _this.subtypeId = _this.podaciOPlant.idSubType;
                _this.producerId = _this.podaciOPlant.idProducer;
                _this.plantForm.controls['name'].setValue(_this.imePlantaze);
                _this.plantForm.controls['vrsta'].setValue(_this.typeId);
                _this.plantForm.controls['podvrsta'].setValue(_this.subtypeId);
                _this.plantForm.controls['proizvodjacSemena'].setValue(_this.producerId);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdatePlantation.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__plantation__["a" /* Plantation */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__plantation__["a" /* Plantation */]) === 'function' && _a) || Object)
    ], UpdatePlantation.prototype, "plantation", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__plantation__["b" /* Vrsta */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__plantation__["b" /* Vrsta */]) === 'function' && _b) || Object)
    ], UpdatePlantation.prototype, "Tip", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__plantation__["c" /* Proizvodjac */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__plantation__["c" /* Proizvodjac */]) === 'function' && _c) || Object)
    ], UpdatePlantation.prototype, "proizvodjac", void 0);
    UpdatePlantation = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-update-plantation',
            template: __webpack_require__(769),
            styles: [__webpack_require__(735)]
        }), 
        __metadata('design:paramtypes', [(typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_7__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_7__services_perm_service_service__["a" /* PermService */]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_2__angular_forms__["d" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_forms__["d" /* FormBuilder */]) === 'function' && _e) || Object, (typeof (_f = typeof __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */]) === 'function' && _f) || Object, (typeof (_g = typeof __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__["LocalStorageService"]) === 'function' && _g) || Object, (typeof (_h = typeof __WEBPACK_IMPORTED_MODULE_6__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_6__angular_router__["b" /* Router */]) === 'function' && _h) || Object])
    ], UpdatePlantation);
    return UpdatePlantation;
    var _a, _b, _c, _d, _e, _f, _g, _h;
}());
//# sourceMappingURL=update-plantation.component.js.map

/***/ }),

/***/ 354:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UpdateUser; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UpdateUser = (function () {
    function UpdateUser(http, localStorageService, router) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.vidljivost = false;
        this.meniVidljiv = false;
        this.promeniSifruVidljivo = true;
        this.promeniOstalePodatkeVidljivo = false;
        this.promeniSlikuVidljivo = false;
        this.imaNeko = false;
        this.pogresnaSifra = false;
        this.country_array = new Array("Afghanistan", "Aland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Barbuda", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Trty.", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Caicos Islands", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Congo, Democratic Republic of the", "Cook Islands", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern Territories", "Futuna Islands", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard", "Herzegovina", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran (Islamic Republic of)", "Iraq", "Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Jan Mayen Islands", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea", "Korea (Democratic)", "Kuwait", "Kyrgyzstan", "Lao", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libyan Arab Jamahiriya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "McDonald Islands", "Mexico", "Micronesia", "Miquelon", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "Nevis", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territory, Occupied", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Principe", "Puerto Rico", "Qatar", "Reunion", "Romania", "Russian Federation", "Rwanda", "Saint Barthelemy", "Saint Helena", "Saint Kitts", "Saint Lucia", "Saint Martin (French part)", "Saint Pierre", "Saint Vincent", "Samoa", "San Marino", "Sao Tome", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Sandwich Islands", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "The Grenadines", "Timor-Leste", "Tobago", "Togo", "Tokelau", "Tonga", "Trinidad", "Tunisia", "Turkey", "Turkmenistan", "Turks Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "US Minor Outlying Islands", "Uzbekistan", "Vanuatu", "Vatican City State", "Venezuela", "Vietnam", "Virgin Islands (British)", "Virgin Islands (US)", "Wallis", "Western Sahara", "Yemen", "Zambia", "Zimbabwe");
        this.uspesno = false;
        this.uspesnoPromenjenaSifra = false;
        this.neuspesno = false;
        this.newCss = false;
        this.lang = "srb";
    }
    UpdateUser.prototype.promeniTab = function (vidljivo) {
        switch (vidljivo) {
            case 'sifra':
                this.promeniSifruVidljivo = true;
                this.promeniOstalePodatkeVidljivo = this.promeniSlikuVidljivo = false;
                break;
            case 'podaci':
                this.promeniOstalePodatkeVidljivo = true;
                this.promeniSifruVidljivo = this.promeniSlikuVidljivo = false;
                break;
            default:
                this.promeniSlikuVidljivo = true;
                this.promeniOstalePodatkeVidljivo = this.promeniSifruVidljivo = false;
                break;
        }
    };
    UpdateUser.prototype.logout = function () {
        var _this = this;
        this.http.get("sessions/logout")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.localStorageService.set("logged", false);
            _this.router.navigate(['./login']);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateUser.prototype.meniToggle = function () {
        this.meniVidljiv = !this.meniVidljiv;
    };
    UpdateUser.prototype.callType = function (value) {
        this.drzava = value;
    };
    UpdateUser.prototype.ngOnInit = function () {
        this.ucitajPodatkeOKorisniku();
    };
    UpdateUser.prototype.ucitajPodatkeOKorisniku = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
            _this.uzmiBoje();
            if (_this.user.success === undefined) {
                _this.vidljivost = true;
                _this.id = _this.user.id;
                _this.ime = _this.user.name;
                _this.prezime = _this.user.surname;
                _this.drzava = _this.user.country;
                _this.sifraa = _this.localStorageService.get("password");
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateUser.prototype.promeniPodatke = function () {
        var _this = this;
        var pom2;
        this.http.get("users/promenipodatke/" + this.ime + "/" + this.prezime + "/" + this.drzava + "/" + this.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom2 = data;
            if (pom2.success) {
                _this.http.get("users/osveziPodatke")
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.ucitajPodatkeOKorisniku();
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                _this.uspesno = true;
                setTimeout(function () {
                    _this.uspesno = false;
                }, 3000);
                _this.pogresnaSifra = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateUser.prototype.osvezi = function () {
        this.ucitajPodatkeOKorisniku();
        this.meni.ucitajPodatkeOKorisniku();
    };
    UpdateUser.prototype.promeniSifru = function () {
        var _this = this;
        if (this.pass1 != this.pass2 || this.pass1 == null || this.pass2 == null) {
            this.neuspesno = true;
            setTimeout(function () {
                _this.neuspesno = false;
            }, 3000);
        }
        else {
            var pom;
            this.http.get("users/proveriSifru2/" + this.staraSifra + "/" + this.id)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                pom = data;
                if (pom.success) {
                    _this.http.get("users/proveriSifru/" + _this.pass1)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        pom = data;
                        if (pom.success) {
                            _this.http.get("users/promeniSifru/" + _this.pass1 + "/" + _this.id)
                                .map(function (res) { return res.json(); })
                                .subscribe(function (data) {
                                _this.userSifra = data;
                                if (_this.userSifra.success) {
                                    _this.uspesnoPromenjenaSifra = true;
                                    setTimeout(function () {
                                        _this.uspesnoPromenjenaSifra = false;
                                    }, 3000);
                                    _this.neuspesno = false;
                                    _this.imaNeko = false;
                                    _this.pogresnaSifra = false;
                                }
                            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                        }
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                }
                else {
                    window.alert("tu sam!");
                    _this.imaNeko = false;
                    _this.uspesnoPromenjenaSifra = false;
                    _this.neuspesno = false;
                    _this.pogresnaSifra = true;
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
    };
    UpdateUser.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateUser.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('meni'), 
        __metadata('design:type', Object)
    ], UpdateUser.prototype, "meni", void 0);
    UpdateUser = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-update-user',
            template: __webpack_require__(770),
            styles: [__webpack_require__(736)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */]) === 'function' && _c) || Object])
    ], UpdateUser);
    return UpdateUser;
    var _a, _b, _c;
}());
//# sourceMappingURL=update-user.component.js.map

/***/ }),

/***/ 355:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Rx__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Rx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserPage; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var UserPage = (function () {
    function UserPage(cdr, http, localStorageService, router, permService) {
        this.cdr = cdr;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.permService = permService;
        this.sortBy = "name";
        this.month = ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Jun', 'Jul', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'];
        this.imaPodataka = false;
        this.isOwner = false;
        this.podaciTrazeni = false;
        this.statistika = false;
        this.uniquePlantsExp = [];
        this.vidljivost = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.pieChartType = 'pie';
        this.parcelaVidljiva = false;
        this.plantazaVidljiva = true;
        this.INF = 99999;
        this.gleda = false;
        this.sideBarVidljiv = false;
        this.sideBarImanje = false;
        this.prikazImanja = false;
        this.mojePlantazeVidljiv = true;
        this.mojaImanjaVidljiv = false;
        this.prognozaVidljiva = false;
        this.meniVidljiv = false;
        //stats: any;
        this.bojePoligona = [];
        this.postojiUBazi = false;
        this.poslatZahtev = false;
        /*private options: any = {
          legend: { position: 'left' , labels: {boxWidth: 10, fontSize: 10}}
        };*/
        this.mapProp = null;
        this.map = null;
        this.drawingManager = null;
        this.prikaz = true;
        this.trenutni = -1;
        this.trenutnoImanje = -1;
        this.obavestenjaStigla = false;
        this.brojCrvenih = [];
        this.brojZutih = [];
        this.newCss = false;
        this.lang = "srb";
        this.meniMultiLang = {
            "srb": [
                { "num": "0", "text": "Moje Plantaže" },
                { "num": "1", "text": " Moja imanja" },
                { "num": "2", "text": "Lista mojih plantaža" },
                { "num": "3", "text": "Naziv plantaže" },
                { "num": "4", "text": "Vlasnik" },
                { "num": "5", "text": "Opcije" },
                { "num": "6", "text": "Lista mojih imanja" },
                { "num": "7", "text": "Naziv imanja" },
                { "num": "8", "text": "Opcije" },
                { "num": "9", "text": "Statistika" },
                { "num": "10", "text": "Ažuriranje" },
                { "num": "11", "text": "Brisanje plantaže" },
                { "num": "12", "text": "Prethodna" },
                { "num": "13", "text": "Sledeća" },
                { "num": "14", "text": "Prikaz imanja" },
                { "num": "15", "text": "Ažuriranje imanja" },
                { "num": "16", "text": "Brisanje imanja" },
                { "num": "17", "text": "Nazad na spisak imanja" },
                { "num": "18", "text": "Nazad na spisak plantaža" },
                { "num": "19", "text": "Grafik nutricionistickih vrednosti" },
                { "num": "20", "text": "Grafik vlažnosti zemljista" },
                { "num": "21", "text": "Grafik temperature" },
                { "num": "22", "text": "Traženoj parceli trenutno nema statističkih podataka. Podaci se dobijaju svakog dana u 23:30  i 11:30. Da bi dobili podatke morate povezati Vašu plantažu sa meracem." },
                { "num": "23", "text": "Da li ste sigurni da želite da obrišete plantažu?" },
                { "num": "24", "text": "Potvrdi" },
                { "num": "25", "text": "Da li ste sigurni da želite da obrišete imanje?" },
                { "num": "26", "text": " Trenutno pristupate kao gost." },
                { "num": "27", "text": " Veliki deo aplikacije Vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti." },
                { "num": "28", "text": "kao vlasnik ili kontaktirati Vašeg vlasnika. Za više informacija obratite se administratoru sistema." },
                { "num": "29", "text": " Vaš zahtev je poslat adminu." },
                { "num": "30", "text": " Vaš zahtev je već poslat adminu." },
                { "num": "31", "text": "Pošalji zahtev" },
                { "num": "32", "text": "Vlažnost vazduha" },
                { "num": "33", "text": "Posejana vrsta" },
                { "num": "34", "text": "Podvrsta" },
                { "num": "35", "text": "Proizvodjac" },
                { "num": "36", "text": "Pretraga Imanja" },
                { "num": "37", "text": "Plantaže na imanju:" },
                { "num": "38", "text": "Naziv plantaže" },
                { "num": "39", "text": "Boja" },
                { "num": "40", "text": "Vreme" },
                { "num": "41", "text": "Vlažnost vazduha" },
                { "num": "42", "text": "Vlažnost zemljišta" },
                { "num": "43", "text": "Pošalji zahtev za vlasništvo" },
                { "num": "44", "text": "Imanja" },
                { "num": "45", "text": "Vlasnik imanja" },
                { "num": "46", "text": "Poslat zahtev!" },
                { "num": "47", "text": "Zahtev je vec poslat!" },
            ],
            "eng": [
                { "num": "0", "text": "My plantation" },
                { "num": "1", "text": "My Properties" },
                { "num": "2", "text": "List of my plantations" },
                { "num": "3", "text": "Plantation name" },
                { "num": "4", "text": "Username of plantation owner" },
                { "num": "5", "text": "Options" },
                { "num": "6", "text": "List of my properties" },
                { "num": "7", "text": "Property name" },
                { "num": "8", "text": "Options" },
                { "num": "9", "text": "Statistics" },
                { "num": "10", "text": "Update plantation" },
                { "num": "11", "text": "Delete plantation" },
                { "num": "12", "text": "Back" },
                { "num": "13", "text": "Next" },
                { "num": "14", "text": "Show property" },
                { "num": "15", "text": "Update property" },
                { "num": "16", "text": "Delete property" },
                { "num": "17", "text": "Back to list of my properties" },
                { "num": "18", "text": "Back to list of my plantations" },
                { "num": "19", "text": "Chart of nutritional values" },
                { "num": "20", "text": "Chart of soil moisture" },
                { "num": "21", "text": "Temperature chart" },
                { "num": "22", "text": "Required plantation currently has no statistical data. Data is received each day between 23:30 and 11:30. To get the information you need to connect your plantation to a sensor." },
                { "num": "23", "text": "Are you sure you want to delete plantation?" },
                { "num": "24", "text": "Confirm" },
                { "num": "25", "text": "Are you sure you want to delete property?" },
                { "num": "26", "text": "You are currently logged as guest." },
                { "num": "27", "text": "Much of the applications is disabled to you. To get access to all functionalities you must subscribe" },
                { "num": "28", "text": "As the owner or contact another owner. For more information, contact your system administrator." },
                { "num": "29", "text": "Your request has been sent" },
                { "num": "30", "text": "Your request has already been sent" },
                { "num": "31", "text": "Send request" },
                { "num": "32", "text": "Air humidity" },
                { "num": "33", "text": "Type" },
                { "num": "34", "text": "Subtype" },
                { "num": "35", "text": "Manufacturer" },
                { "num": "36", "text": "Search properties" },
                { "num": "37", "text": "Plantations on property" },
                { "num": "38", "text": "Plantation name" },
                { "num": "39", "text": "Color" },
                { "num": "40", "text": "Weather" },
                { "num": "41", "text": "Air humidity" },
                { "num": "42", "text": "soil moisture" },
                { "num": "43", "text": "Send request for ownership" },
                { "num": "44", "text": "Parcel" },
                { "num": "45", "text": "Property owner" },
                { "num": "46", "text": "Request sent!" },
                { "num": "47", "text": "Request is already sent!" },
            ]
        };
        this.infoOPlantazi = [];
        this.nizPoligona1 = [];
        this.plantazeSaImanja = [];
        this.lineChartOptions = {
            responsive: true
        };
        this.lineChartColors = [
            {
                backgroundColor: 'rgba(12, 16, 127,0.2)',
                borderColor: 'rgba(12, 16, 127,1)',
                pointBackgroundColor: 'rgba(12, 16, 127,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(12, 16, 127,1)'
            },
            {
                backgroundColor: 'rgba(148,159,177,0.2)',
                borderColor: 'rgba(148,159,177,1)',
                pointBackgroundColor: 'rgba(148,159,177,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(148,159,177,0.8)'
            },
            {
                backgroundColor: 'rgba(77,83,96,0.2)',
                borderColor: 'rgba(77,83,96,1)',
                pointBackgroundColor: 'rgba(77,83,96,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(77,83,96,1)'
            },
            {
                backgroundColor: 'rgba(35,42,50,0.2)',
                borderColor: 'rgba(35,42,50,1)',
                pointBackgroundColor: 'rgba(35,42,50,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(35,42,50,0.8)'
            },
            {
                backgroundColor: 'rgba(158, 0, 0,0.2)',
                borderColor: 'rgba(158, 0, 0,1)',
                pointBackgroundColor: 'rgba(158, 0, 0,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(158, 0, 0,1)'
            },
            {
                backgroundColor: 'rgba(224, 15, 15,0.2)',
                borderColor: 'rgba(224, 15, 15,1)',
                pointBackgroundColor: 'rgba(224, 15, 15,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(224, 15, 15,1)'
            },
            {
                backgroundColor: 'rgba(247, 91, 91,0.2)',
                borderColor: 'rgba(247, 91, 91,1)',
                pointBackgroundColor: 'rgba(247, 91, 91,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(247, 91, 91,1)'
            },
            {
                backgroundColor: 'rgba(12, 16, 127,0.2)',
                borderColor: 'rgba(12, 16, 127,1)',
                pointBackgroundColor: 'rgba(12, 16, 127,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(12, 16, 127,1)'
            },
            {
                backgroundColor: 'rgba(98, 178, 247,0.2)',
                borderColor: 'rgba(98, 178, 247,1)',
                pointBackgroundColor: 'rgba(98, 178, 247,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(98, 178, 247,1)'
            },
            {
                backgroundColor: 'rgba((3, 61, 155,0.2)',
                borderColor: 'rgba((3, 61, 155,1)',
                pointBackgroundColor: 'rgba(3, 61, 155,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(3, 61, 155,1)'
            },
            {
                backgroundColor: 'rgba(67, 153, 168,0.2)',
                borderColor: 'rgba(67, 153, 168,1)',
                pointBackgroundColor: 'rgba(67, 153, 168,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(67, 153, 168,1)'
            },
            {
                backgroundColor: 'rgba(1, 33, 86,0.2)',
                borderColor: 'rgba(1, 33, 86,1)',
                pointBackgroundColor: 'rgba(1, 33, 86,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(1, 33, 86,1)'
            },
            {
                backgroundColor: 'rgba(1, 9, 22,0.2)',
                borderColor: 'rgba(1, 9, 22,1)',
                pointBackgroundColor: 'rgba(1, 9, 22,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(1, 9, 22,1)'
            }
        ];
        this.lineChartLegend = true;
        this.lineChartType = 'line';
        this.barChartOptions = {
            scaleShowVerticalLines: true,
            responsive: true
        };
        this.barChartType = 'bar';
        this.barChartLegend = true;
        ///////////////////////////////////////////////////////////////
        this.radarChartLabels = [];
        this.radarChartData = [];
        this.radarChartType = 'bar';
    }
    UserPage.prototype.logout = function () {
        var _this = this;
        this.http.get("sessions/logout")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.localStorageService.set("logged", false);
            _this.router.navigate(['./login']);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.postaviIzabranuPlant = function (value) {
        this.plantazaZaBrisanje = value;
    };
    UserPage.prototype.postaviIzabranoImanje = function (value) {
        this.imanjeZaBrisanje = value;
    };
    UserPage.prototype.posaljiZahtev = function () {
        this.router.navigate(['./reqownership']);
        this.http.get("sessions/LogovaniKorisnik");
    };
    UserPage.prototype.idiNaTimeline = function (id) {
        this.localStorageService.set("plantazaZaTimeline", id);
        this.router.navigate(['./timeline']);
    };
    UserPage.prototype.upozorenje = function (id) {
        var upozori;
        upozori = this.expObavestenja.filter(function (x) { return x.id == id; });
        console.log(upozori);
    };
    UserPage.prototype.uzmiExpObavestenja = function () {
        var _this = this;
        this.http.get("users/expNotifications")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.expObavestenja = data.not;
                if (_this.expObavestenja.length > 0) {
                    _this.brojCrvenih = _this.expObavestenja.filter(function (x) { return x.severity == 2; });
                    _this.brojZutih = _this.expObavestenja.filter(function (x) { return x.severity == 1; });
                    for (var i = 0; i < _this.brojCrvenih.length; i++) {
                        if (_this.uniquePlantsExp.indexOf(_this.brojCrvenih[i].id) == -1)
                            _this.uniquePlantsExp.push(_this.brojCrvenih[i]);
                    }
                    for (var i = 0; i < _this.brojZutih.length; i++) {
                        if (_this.uniquePlantsExp.indexOf(_this.brojZutih[i].id) == -1)
                            _this.uniquePlantsExp.push(_this.brojZutih[i]);
                    }
                }
                _this.obavestenjaStigla = true;
                console.log(_this.uniquePlantsExp);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.promeniTab = function () {
        this.prikazImanja = false;
        this.plantazaVidljiva = true;
        this.parcelaVidljiva = false;
        this.sideBarImanje = false;
        this.sideBarVidljiv = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.podaciTrazeni = false;
        this.imaPodataka = false;
        this.prognozaVidljiva = false;
    };
    UserPage.prototype.promeniTab1 = function () {
        this.prikazImanja = false;
        this.plantazaVidljiva = false;
        this.parcelaVidljiva = true;
        this.sideBarVidljiv = false;
        this.sideBarVidljiv = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.podaciTrazeni = false;
        this.imaPodataka = false;
        this.prognozaVidljiva = false;
    };
    UserPage.prototype.posalji = function () {
        var pom3;
        this.http.get("users/posaljiMail2/" + this.ime + "/" + this.naslov + "/" + this.email + "/" + this.poruka)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            if (pom3.success) {
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.duz = function (tacka1, tacka2) {
        return Math.sqrt(Math.pow(tacka1[1] - tacka2[1], 2) + Math.pow(tacka1[0] - tacka2[0], 2));
    };
    UserPage.prototype.heronovObrazac = function (tacka1, tacka2, tacka3) {
        var duz1, duz2, duz3;
        duz1 = this.duz(tacka1, tacka2);
        duz2 = this.duz(tacka1, tacka3);
        duz3 = this.duz(tacka2, tacka3);
        var s = (duz1 + duz2 + duz3) / 2;
        return Math.sqrt(s * (s - duz1) * (s - duz2) * (s - duz3));
    };
    UserPage.prototype.nadjiCentar = function (nizKord) {
        var lat = 0, lng = 0;
        for (var i = 0; i < nizKord.length - 1; i++) {
            lat += nizKord[i][0];
            lng += nizKord[i][1];
        }
        lat = lat / (nizKord.length - 1);
        lng = lng / (nizKord.length - 1);
        return new google.maps.LatLng(lng, lat);
    };
    UserPage.prototype.getRandomColor = function () {
        var letters = '02468ACEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 9)];
        }
        return color;
    };
    UserPage.prototype.dodajListener = function (poli) {
        var self = this;
        google.maps.event.addListener(poli, 'click', function (event) {
            if (this.infoWindow) {
                this.infoWindow.close();
            }
            this.infoWindow = new google.maps.InfoWindow;
            this.infoWindow.setContent("<h3>O plantaži:</h3> <br> " + poli.opis);
            this.infoWindow.setPosition(event.latLng);
            this.infoWindow.open(self.map);
            var niz = poli.getPath().getArray();
            var bounds = new google.maps.LatLngBounds();
            for (var j = 0; j < niz.length; j++) {
                bounds.extend(niz[j]);
            }
            self.map.fitBounds(bounds);
        });
    };
    UserPage.prototype.initImanje = function (plantaze) {
        var coords = [];
        var nizKord = [];
        for (var k = 0; k < plantaze.length; k++) {
            coords = [];
            for (var i = 0; i < plantaze[k].coordinates.length; i++) {
                var poligon = [];
                for (var j = 0; j < plantaze[k].coordinates[i].length; j++) {
                    poligon.push(new google.maps.LatLng(plantaze[k].coordinates[i][j][1], plantaze[k].coordinates[i][j][0]));
                }
                nizKord.push(poligon);
                coords.push(poligon);
            }
            this.nizPoligona1.push(new google.maps.Polygon({
                paths: coords,
                clickable: true,
                zIndex: 1,
                strokeColor: '#FFFFFF',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: this.bojePoligona[k],
                fillOpacity: 0.45,
                indexID: k,
                opis: this.infoOPlantazi[k]
            }));
            this.dodajListener(this.nizPoligona1[k]);
        }
        this.crtajSad(nizKord, this.nizPoligona1);
    };
    UserPage.prototype.ubaciUBounds1 = function (nizpoligona) {
        var bounds = new google.maps.LatLngBounds();
        for (var i = 0; i < nizpoligona.length; i++) {
            for (var j = 0; j < nizpoligona[i].length; j++) {
                bounds.extend(nizpoligona[i][j]);
            }
        }
        return bounds;
    };
    UserPage.prototype.crtajSad = function (nizKord, nizPoligona) {
        var bounds = this.ubaciUBounds1(nizKord);
        var self = this;
        self.map = new google.maps.Map(document.getElementById('googleMap1'), {
            mapTypeId: 'hybrid'
        });
        /*
        google.maps.event.addListener(self.map, 'click', function (event) {
          alert("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng());
        });
        */
        self.map.fitBounds(bounds);
        for (var i = 0; i < nizPoligona.length; i++) {
            nizPoligona[i].setMap(self.map);
        }
        setTimeout(function () {
            google.maps.event.trigger(self.map, 'resize');
        }, 100);
    };
    UserPage.prototype.dajRadnomRazliciteBoje = function (n) {
        for (var i = 0; i < n; i++) {
            this.bojePoligona[i] = this.getRandomColor();
            for (var j = 0; j < i; j++) {
                while (this.bojePoligona[i] == this.bojePoligona[j]) {
                    this.bojePoligona[i] = this.getRandomColor();
                }
            }
        }
    };
    UserPage.prototype.popuniSideBar = function (imanje) {
        var _this = this;
        this.opisImanja = "bravo!";
        this.http.get("users/plantationNames/" + imanje)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.plantazeSaImanja = data;
            _this.dajRadnomRazliciteBoje(_this.plantazeSaImanja.length);
            for (var i = 0; i < _this.plantazeSaImanja.length; i++) {
                _this.infoOPlantazi[i] = "Plantaža <b>" + _this.plantazeSaImanja[i].ime + "</b><br> Tip: " + _this.plantazeSaImanja[i].tip + "<br>Podtip: " + _this.plantazeSaImanja[i].podtip + "<br> Proizvođač: " + _this.plantazeSaImanja[i].producer + "<br> Vlasnik: <b>" + _this.plantazeSaImanja[i].username;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed a'); });
    };
    UserPage.prototype.fuja = function (value) {
        var self = this;
        var niz = this.nizPoligona1[value].getPath().getArray();
        var bounds = this.ubaciUBounds2(niz);
        self.map.fitBounds(bounds);
    };
    UserPage.prototype.ubaciUBounds2 = function (niz) {
        var bounds = new google.maps.LatLngBounds();
        for (var j = 0; j < niz.length; j++) {
            console.log(JSON.stringify(niz[j]));
            bounds.extend(niz[j]);
        }
        return bounds;
    };
    UserPage.prototype.prikaziImanje = function (value) {
        var _this = this;
        //alert(value);
        this.prikazImanja = true;
        this.sideBarImanje = true;
        var plantazeIzImanja;
        var idPlantaza = [];
        document.getElementById('mapIDimanje').innerHTML = "<div class='col-md-9'><div id='googleMap1' style='width: 100%; height: 700px'></div></div>";
        this.http.get("users/plantsInParcel/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            plantazeIzImanja = data;
            _this.initImanje(plantazeIzImanja);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed a'); });
    };
    UserPage.prototype.typeOf = function (obj) {
        return {}.toString.call(obj).split(' ')[1].slice(0, -1).toLowerCase();
    };
    UserPage.prototype.ubaciUBounds = function (niz) {
        var bounds = new google.maps.LatLngBounds();
        for (var j = 0; j < niz.length; j++) {
            for (var i = 0; i < niz[j].length; i++) {
                var marker = new google.maps.LatLng(niz[j][i][1], niz[j][i][0]);
                bounds.extend(marker);
            }
        }
        return bounds;
    };
    UserPage.prototype.initMap = function (coords) {
        var self = this;
        var nizPoligona = [];
        var poligon = [];
        var zoom = 2;
        var centar; // da se dogovorimo dal crtamo 1 ili vise?
        var povrsina = 0;
        // console.log("coords[0].coordinates.length: " + coords[0].coordinates.length);
        for (var i = 0; i < coords[0].coordinates.length; i++) {
            // console.log("coords[0].coordinates[i].length: " + coords[0].coordinates[i].length);
            for (var j = 0; j < coords[0].coordinates[i].length; j++) {
                poligon[poligon.length] = new google.maps.LatLng(coords[0].coordinates[i][j][1], coords[0].coordinates[i][j][0]);
            }
            nizPoligona.push(poligon);
            poligon = [];
        }
        centar = this.nadjiCentar(coords[0].coordinates[0]);
        var bounds = this.ubaciUBounds(coords[0].coordinates);
        // alert(bounds);
        self.map = new google.maps.Map(document.getElementById('googleMap'), {
            center: centar,
            zoom: zoom,
            mapTypeId: 'hybrid'
        });
        self.map.fitBounds(bounds);
        var polygons = new google.maps.Polygon({
            paths: nizPoligona,
            clickable: true,
            zIndex: 1,
            strokeColor: '#FFFFFF',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: this.getRandomColor(),
            fillOpacity: 0.35
        });
        polygons.setMap(self.map);
        setTimeout(function () {
            google.maps.event.trigger(self.map, 'resize');
        }, 100);
    };
    UserPage.prototype.nazadNaPrikaz = function () {
        this.pieChartData = [];
        this.sideBarVidljiv = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.podaciTrazeni = false;
        this.imaPodataka = false;
        this.prognozaVidljiva = false;
    };
    UserPage.prototype.nazadNaPrikazImanja = function () {
        for (var i = 0; i < this.nizPoligona1.length; i++) {
            this.nizPoligona1[i].setMap(null);
        }
        this.nizPoligona1 = [];
        this.bojePoligona = [];
        this.map = null;
        this.sideBarImanje = false;
        this.prikazImanja = false;
        this.plantazeSaImanja = [];
    };
    UserPage.prototype.prikaziPlantazu = function (value) {
        var _this = this;
        var coords;
        this.sideBarVidljiv = true;
        this.izabranaPlantaza = this.vrste.find(function (x) { return x.id == value; });
        // alert("plantaza " + value);
        this.http.get("/plantations/userPlantation/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            coords = data;
            // console.log("1");
            var coordinates = coords[0].coordinates;
            document.getElementById('mapID').innerHTML = "<div class='col-md-9'><div id='googleMap' style='width: 100%; height: 700px'></div></div>";
            _this.initMap(coords);
            var xmin = _this.INF, xmax = -_this.INF, ymin = _this.INF, ymax = -_this.INF;
            for (var i = 0; i < coordinates[0].length; i++) {
                //console.log("2");
                if (xmin > coordinates[0][i][0])
                    xmin = coordinates[0][i][0];
                if (xmax < coordinates[0][i][0])
                    xmax = coordinates[0][i][0];
                if (ymin > coordinates[0][i][1])
                    ymin = coordinates[0][i][1];
                if (ymax < coordinates[0][i][1])
                    ymax = coordinates[0][i][1];
            }
            _this.centerX = xmin + ((xmax - xmin) / 2);
            _this.centerY = ymin + ((ymax - ymin) / 2);
            //console.log("X: " + this.centerX + " Y: " + this.centerY);
            _this.uzmiPodatkeOTemperaturi();
            _this.uzmiNutriPodatke(value);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.prikaziPrognozu = function (value) {
        var _this = this;
        var coords;
        this.prognozaVidljiva = true;
        this.izabranaPlantaza = this.vrste.find(function (x) { return x.id == value; });
        // alert("plantaza " + value);
        this.http.get("/plantations/userPlantation/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            coords = data;
            console.log(coords);
            var coordinates = coords[0].coordinates;
            var xmin = _this.INF, xmax = -_this.INF, ymin = _this.INF, ymax = -_this.INF;
            for (var i = 0; i < coordinates[0].length; i++) {
                //console.log("2");
                if (xmin > coordinates[0][i][0])
                    xmin = coordinates[0][i][0];
                if (xmax < coordinates[0][i][0])
                    xmax = coordinates[0][i][0];
                if (ymin > coordinates[0][i][1])
                    ymin = coordinates[0][i][1];
                if (ymax < coordinates[0][i][1])
                    ymax = coordinates[0][i][1];
            }
            _this.centerX = xmin + ((xmax - xmin) / 2);
            _this.centerY = ymin + ((ymax - ymin) / 2);
            //console.log("X: " + this.centerX + " Y: " + this.centerY);
            _this.uzmiPodatkeOPrognozi();
            _this.uzmiPodatkeOTemperaturi();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.uzmiNutriPodatke = function (value) {
        var _this = this;
        this.pieChartData = [];
        this.http.get("/stats/current/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data == false)
                return;
            _this.pieChartData = data.data;
            _this.pieChartLabels = data.labels;
            _this.vlaznostZemljista = data.vlaznost;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    //prognoza
    UserPage.prototype.uzmiPodatkeOPrognozi = function () {
        var _this = this;
        var dayName;
        console.log(this.centerY + " : " + this.centerX);
        this.http.get("http://api.openweathermap.org/data/2.5/forecast?lat=" + this.centerY + "&lon=" + this.centerX + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (_this.lang[0]["lang"] == "srb" || _this.lang == "srb") {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Ned";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Pon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Uto";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Sre";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Cet";
                    if (_this.day == 5)
                        dayName = "Pet";
                    if (_this.day == 6)
                        dayName = "Sub";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            else {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Sun";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Mon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Tue";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Wen";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Thu";
                    if (_this.day == 5)
                        dayName = "Fri";
                    if (_this.day == 6)
                        dayName = "Sat";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            _this.temperaturaProg = data["list"];
            _this.prognozaDan1min = _this.temperaturaProg[2];
            _this.prognozaDan1max = _this.temperaturaProg[5];
            _this.prognozaDan2min = _this.temperaturaProg[10];
            _this.prognozaDan2max = _this.temperaturaProg[13];
            _this.prognozaDan3min = _this.temperaturaProg[18];
            _this.prognozaDan3max = _this.temperaturaProg[21];
            _this.prognozaDan4min = _this.temperaturaProg[26];
            _this.prognozaDan4max = _this.temperaturaProg[29];
            console.log(_this.prognozaDan1min);
            _this.promeniIkonePrognoza();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.uzmiPodatkeOPrognoziGost = function () {
        var _this = this;
        var dayName;
        this.http.get("http://api.openweathermap.org/data/2.5/forecast?lat=" + this.lokacija["latitude"] + "&lon=" + this.lokacija["longitude"] + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (_this.lang[0]["lang"] == "srb" || _this.lang == "srb") {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Ned";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Pon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Uto";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Sre";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Cet";
                    if (_this.day == 5)
                        dayName = "Pet";
                    if (_this.day == 6)
                        dayName = "Sub";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            else {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Sun";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Mon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Tue";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Wen";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Thu";
                    if (_this.day == 5)
                        dayName = "Fri";
                    if (_this.day == 6)
                        dayName = "Sat";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            _this.temperaturaProg = data["list"];
            _this.prognozaDan1min = _this.temperaturaProg[2];
            _this.prognozaDan1max = _this.temperaturaProg[5];
            _this.prognozaDan2min = _this.temperaturaProg[10];
            _this.prognozaDan2max = _this.temperaturaProg[13];
            _this.prognozaDan3min = _this.temperaturaProg[18];
            _this.prognozaDan3max = _this.temperaturaProg[21];
            _this.prognozaDan4min = _this.temperaturaProg[26];
            _this.prognozaDan4max = _this.temperaturaProg[29];
            console.log(_this.prognozaDan1min);
            _this.promeniIkonePrognoza();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.uzmiPodatkeOTemperaturi = function () {
        var _this = this;
        if (this.lang[0]["lang"] == "srb" || this.lang == "srb") {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.centerY + "&lon=" + this.centerX + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7&lang=hr")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
                _this.http.get("/stats/ubaciTemp/" + _this.izabranaPlantaza.id + "/" + _this.temperatura.main.temp).map(function (res) { return res.json(); }).subscribe(function (dat) {
                    if (_this.statistika) {
                        _this.statistika = false;
                        _this.uzmiPodatkeOTemperaturiStat();
                    }
                });
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
        else {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.centerY + "&lon=" + this.centerX + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
                _this.http.get("/stats/ubaciTemp/" + _this.izabranaPlantaza.id + "/" + _this.temperatura.main.temp).map(function (res) { return res.json(); }).subscribe(function (dat) {
                    if (_this.statistika) {
                        _this.statistika = false;
                        _this.uzmiPodatkeOTemperaturiStat();
                    }
                });
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
    };
    UserPage.prototype.uzmiPodatkeOTemperaturiGost = function () {
        var _this = this;
        if (this.lang[0]["lang"] == "srb" || this.lang == "srb") {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.lokacija["latitude"] + "&lon=" + this.lokacija["longitude"] + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7&lang=hr")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
        else {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.lokacija["latitude"] + "&lon=" + this.lokacija["longitude"] + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
    };
    UserPage.prototype.promeniIkone = function () {
        if (this.temperatura.weather[0].icon == "01d")
            this.temperatura.weather[0].icon = "wi-day-sunny";
        if (this.temperatura.weather[0].icon == "01n")
            this.temperatura.weather[0].icon = "wi-night-clear";
        if (this.temperatura.weather[0].icon == "02d")
            this.temperatura.weather[0].icon = "wi-day-cloudy";
        if (this.temperatura.weather[0].icon == "02n")
            this.temperatura.weather[0].icon = "wi-night-alt-cloudy";
        if (this.temperatura.weather[0].icon == "03d")
            this.temperatura.weather[0].icon = "wi-cloud";
        if (this.temperatura.weather[0].icon == "03n")
            this.temperatura.weather[0].icon = "wi-cloud";
        if (this.temperatura.weather[0].icon == "04d")
            this.temperatura.weather[0].icon = "wi-cloudy";
        if (this.temperatura.weather[0].icon == "04n")
            this.temperatura.weather[0].icon = "wi-cloudy";
        if (this.temperatura.weather[0].icon == "09d")
            this.temperatura.weather[0].icon = "wi-day-showers";
        if (this.temperatura.weather[0].icon == "09n")
            this.temperatura.weather[0].icon = "wi-night-showers";
        if (this.temperatura.weather[0].icon == "10d")
            this.temperatura.weather[0].icon = "wi-day-rain";
        if (this.temperatura.weather[0].icon == "10n")
            this.temperatura.weather[0].icon = "wi-night-alt-rain";
        if (this.temperatura.weather[0].icon == "11d")
            this.temperatura.weather[0].icon = "wi-day-thunderstorm";
        if (this.temperatura.weather[0].icon == "11n")
            this.temperatura.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.temperatura.weather[0].icon == "13d")
            this.temperatura.weather[0].icon = "wi-day-snow";
        if (this.temperatura.weather[0].icon == "13n")
            this.temperatura.weather[0].icon = "wi-night-alt-snow";
        if (this.temperatura.weather[0].icon == "50d")
            this.temperatura.weather[0].icon = "wi-day-fog";
        if (this.temperatura.weather[0].icon == "50n")
            this.temperatura.weather[0].icon = "wi-night-fog";
    };
    UserPage.prototype.promeniIkonePrognoza = function () {
        if (this.prognozaDan1min.weather[0].icon == "01d")
            this.prognozaDan1min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan1min.weather[0].icon == "01n")
            this.prognozaDan1min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan1min.weather[0].icon == "02d")
            this.prognozaDan1min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "02n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "03d")
            this.prognozaDan1min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan1min.weather[0].icon == "03n")
            this.prognozaDan1min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan1min.weather[0].icon == "04d")
            this.prognozaDan1min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "04n")
            this.prognozaDan1min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "09d")
            this.prognozaDan1min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan1min.weather[0].icon == "09n")
            this.prognozaDan1min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan1min.weather[0].icon == "10d")
            this.prognozaDan1min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan1min.weather[0].icon == "10n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan1min.weather[0].icon == "11d")
            this.prognozaDan1min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan1min.weather[0].icon == "11n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan1min.weather[0].icon == "13d")
            this.prognozaDan1min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan1min.weather[0].icon == "13n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan1min.weather[0].icon == "50d")
            this.prognozaDan1min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan1min.weather[0].icon == "50n")
            this.prognozaDan1min.weather[0].icon = "wi-night-fog";
        if (this.prognozaDan2min.weather[0].icon == "01d")
            this.prognozaDan2min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan2min.weather[0].icon == "01n")
            this.prognozaDan2min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan2min.weather[0].icon == "02d")
            this.prognozaDan2min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "02n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "03d")
            this.prognozaDan2min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan2min.weather[0].icon == "03n")
            this.prognozaDan2min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan2min.weather[0].icon == "04d")
            this.prognozaDan2min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "04n")
            this.prognozaDan2min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "09d")
            this.prognozaDan2min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan2min.weather[0].icon == "09n")
            this.prognozaDan2min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan2min.weather[0].icon == "10d")
            this.prognozaDan2min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan2min.weather[0].icon == "10n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan2min.weather[0].icon == "11d")
            this.prognozaDan2min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan2min.weather[0].icon == "11n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan2min.weather[0].icon == "13d")
            this.prognozaDan2min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan2min.weather[0].icon == "13n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan2min.weather[0].icon == "50d")
            this.prognozaDan2min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan2min.weather[0].icon == "50n")
            this.prognozaDan2min.weather[0].icon = "wi-night-fog";
        if (this.prognozaDan3min.weather[0].icon == "01d")
            this.prognozaDan3min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan3min.weather[0].icon == "01n")
            this.prognozaDan3min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan3min.weather[0].icon == "02d")
            this.prognozaDan3min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "02n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "03d")
            this.prognozaDan3min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan3min.weather[0].icon == "03n")
            this.prognozaDan3min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan3min.weather[0].icon == "04d")
            this.prognozaDan3min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "04n")
            this.prognozaDan3min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "09d")
            this.prognozaDan3min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan3min.weather[0].icon == "09n")
            this.prognozaDan3min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan3min.weather[0].icon == "10d")
            this.prognozaDan3min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan3min.weather[0].icon == "10n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan3min.weather[0].icon == "11d")
            this.prognozaDan3min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan3min.weather[0].icon == "11n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan3min.weather[0].icon == "13d")
            this.prognozaDan3min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan3min.weather[0].icon == "13n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan3min.weather[0].icon == "50d")
            this.prognozaDan3min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan3min.weather[0].icon == "50n")
            this.prognozaDan3min.weather[0].icon = "wi-night-fog";
        if (this.prognozaDan4min.weather[0].icon == "01d")
            this.prognozaDan4min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan4min.weather[0].icon == "01n")
            this.prognozaDan4min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan4min.weather[0].icon == "02d")
            this.prognozaDan4min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "02n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "03d")
            this.prognozaDan4min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan4min.weather[0].icon == "03n")
            this.prognozaDan4min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan4min.weather[0].icon == "04d")
            this.prognozaDan4min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "04n")
            this.prognozaDan4min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "09d")
            this.prognozaDan4min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan4min.weather[0].icon == "09n")
            this.prognozaDan4min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan4min.weather[0].icon == "10d")
            this.prognozaDan4min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan4min.weather[0].icon == "10n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan4min.weather[0].icon == "11d")
            this.prognozaDan4min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan4min.weather[0].icon == "11n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan4min.weather[0].icon == "13d")
            this.prognozaDan4min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan4min.weather[0].icon == "13n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan4min.weather[0].icon == "50d")
            this.prognozaDan4min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan4min.weather[0].icon == "50n")
            this.prognozaDan4min.weather[0].icon = "wi-night-fog";
    };
    UserPage.prototype.kelvinToCelsius = function (temp) {
        return Math.round((temp - 273.15) * 100) / 100;
    };
    UserPage.prototype.meniToggle = function () {
        this.meniVidljiv = !this.meniVidljiv;
    };
    UserPage.prototype.skloniPoruku = function () {
        this.podaciTrazeni = false;
    };
    UserPage.prototype.prikaziStatistiku = function (id) {
        var _this = this;
        this.statistika = true;
        this.izabranaPlantaza = {};
        this.izabranaPlantaza.id = id;
        this.http.get("users/informacijeOZemljistu/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.chartdata = data;
            if (data.success) {
                _this.imaPodataka = true;
                _this.vidljivostchart = true;
                _this.lineChartData = _this.chartdata.data;
                _this.lineChartLabels = _this.chartdata.labels;
            }
            else {
                _this.imaPodataka = false;
                _this.podaciTrazeni = true;
                setTimeout(function () {
                    _this.podaciTrazeni = false;
                }, 5000);
                return;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("users/moisture/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.vidljivostchartBar = true;
                _this.barChartData = _this.barData.data;
                _this.barChartLabels = _this.barData.labels;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("plantations/userPlantation/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var coords = data;
            _this.coordinates = coords[0].coordinates;
            var xmin = _this.INF, xmax = -_this.INF, ymin = _this.INF, ymax = -_this.INF;
            console.log(_this.coordinates);
            for (var i = 0; i < _this.coordinates[0].length; i++) {
                if (xmin > _this.coordinates[0][i][0])
                    xmin = _this.coordinates[0][i][0];
                if (xmax < _this.coordinates[0][i][0])
                    xmax = _this.coordinates[0][i][0];
                if (ymin > _this.coordinates[0][i][1])
                    ymin = _this.coordinates[0][i][1];
                if (ymax < _this.coordinates[0][i][1])
                    ymax = _this.coordinates[0][i][1];
            }
            _this.centerX = xmin + ((xmax - xmin) / 2);
            _this.centerY = ymin + ((ymax - ymin) / 2);
            _this.uzmiPodatkeOTemperaturi();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.uzmiPodatkeOTemperaturiStat = function () {
        var _this = this;
        console.log(this.centerY + " : " + this.centerX);
        this.http.get("stats/tempStat/" + this.izabranaPlantaza.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.temperaturaStat = data;
            var datac = [];
            var labels = [];
            if (data == false)
                return;
            console.log("!");
            console.log(_this.temperaturaStat);
            for (var i = 0; i < _this.temperaturaStat.length; i++) {
                datac.push(_this.temperaturaStat[i].value);
                labels.push(_this.temperaturaStat[i].date);
            }
            if (datac[0] !== undefined)
                datac[0] -= 1;
            _this.radarChartLabels = labels;
            _this.radarChartData = [{ data: datac, label: "temperatura" }];
            _this.vidljivostRadar = true;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.vratiNaPrikaz = function () {
        this.sideBarVidljiv = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.podaciTrazeni = false;
        this.imaPodataka = false;
    };
    UserPage.prototype.ngOnInit = function () {
        var _this = this;
        this.selectedLang = this.meniMultiLang[this.lang];
        this.d = new Date();
        this.date = this.d.getDate();
        this.day = this.d.getDay();
        this.mon = this.month[this.d.getMonth()];
        this.localStorageService.remove("guest");
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
            if (_this.dozvole.guest != undefined)
                _this.localStorageService.set("guest", _this.dozvole.guest);
            if (_this.dozvole.guest == true) {
                /*  $.getJSON('//freegeoip.net/json/?callback=?', function(data) {
                 this.lokacija=data;
                 console.log(  this.lokacija["latitude"]);
                 
               });*/
                _this.http.get('//freegeoip.net/json/?callback')
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.lokacija = data;
                    console.log(_this.lokacija);
                    _this.uzmiPodatkeOTemperaturiGost();
                    _this.uzmiPodatkeOPrognoziGost();
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
            _this.http.get("permisions/userIsOwner")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.isOwner = data.owner;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            _this.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                _this.uzmiLang();
                if (_this.user.success === undefined) {
                    _this.vidljivost = true;
                    _this.popuniTabelu();
                    _this.popuniTabelu1();
                    _this.uzmiExpObavestenja();
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        });
    };
    /*
      preuzmiStatistiku() {
        this.http.get(`stats/stats`)
          .map(res => res.json())
          .subscribe(data => {
            this.stats = data;
     
     
          },
          err => console.log(err),
          () => console.log('Completed'));
     
     
      }*/
    UserPage.prototype.popuniTabelu = function () {
        var _this = this;
        // window.alert("tu sam!");
        var i;
        this.http.get("users/prikaziPlantaze/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.vrste = data;
            for (var i = 0; i < _this.vrste.length; i++) {
                _this.vrste[i].dozvole = _this.dozvole.plantaze.find(function (x) { return x.id == _this.vrste[i].id; }).dozvole;
            }
            // window.alert(this.vrste[0].name);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.popuniTabelu1 = function () {
        var _this = this;
        var i;
        this.http.get("users/prikaziImanje/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.imanja = data;
            _this.uzmiDozvoleKodVlasnika();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.uzmiDozvoleKodVlasnika = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.dozvoleKodVlasnika = data;
            if (_this.imanja === undefined || _this.dozvoleKodVlasnika === undefined || _this.dozvoleKodVlasnika.dozvole === undefined)
                return;
            for (var i = 0; i < _this.imanja.length; i++) {
                _this.imanja[i].dozvole = _this.dozvoleKodVlasnika.dozvole.find(function (x) { return x.vlasnik == _this.imanja[i].idOwner; });
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.Obrisi1 = function () {
        var _this = this;
        var podatak;
        var value = this.imanjeZaBrisanje;
        this.http.get("users/obrisiImanje/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            podatak = data;
            if (podatak.success) {
                _this.popuniTabelu1();
                _this.popuniTabelu();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Brise plantazu'); });
    };
    UserPage.prototype.smeDaGleda = function (id) {
        return true;
    };
    UserPage.prototype.Obrisi = function () {
        var _this = this;
        var idPlant = this.plantazaZaBrisanje;
        var podatak;
        this.http.get("users/obrisiPlantazu/" + idPlant)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            podatak = data;
            if (podatak.success) {
                if (_this.trenutni == idPlant) {
                    document.getElementById('mapID').innerHTML = "";
                    _this.prikaz = false;
                }
                _this.popuniTabelu();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Brise plantazu'); });
    };
    UserPage.prototype.AzurirajParcelu = function (value) {
        this.localStorageService.set("idParcele", value);
        this.router.navigate(['./updateparcel']);
        this.http.get("sessions/LogovaniKorisnik");
    };
    UserPage.prototype.AzurirajPlant = function (value) {
        var idPlant = value;
        this.localStorageService.set("idPlantaze", value);
        this.router.navigate(['./updateplantation']);
        this.http.get("sessions/LogovaniKorisnik");
    };
    //chart
    // events
    UserPage.prototype.chartClicked = function (e) {
        console.log(e);
    };
    UserPage.prototype.chartHovered = function (e) {
        console.log(e);
    };
    // events
    UserPage.prototype.chartbarClicked = function (e) {
        console.log(e);
    };
    UserPage.prototype.chartbarHovered = function (e) {
        console.log(e);
    };
    // events
    UserPage.prototype.chartradarClicked = function (e) {
        console.log(e);
    };
    UserPage.prototype.chartradarHovered = function (e) {
        console.log(e);
    };
    UserPage.prototype.proveriZahtev = function () {
        var _this = this;
        var pom1;
        this.http.get("users/proveriZahtevv/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success) {
                _this.postojiUBazi = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage.prototype.falsiraj = function () {
        this.postojiUBazi = false;
        this.poslatZahtev = false;
    };
    UserPage.prototype.posaljiZahtev1 = function () {
        var _this = this;
        var pom1;
        this.http.get("users/proveriZahtevv/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success) {
                var pom;
                _this.http.get("users/posaljiZahtevAdminu/" + _this.user.id)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom = data;
                    if (pom.success) {
                        _this.poslatZahtev = true;
                        _this.postojiUBazi = false;
                        setTimeout(function () {
                            _this.postojiUBazi = false;
                            _this.poslatZahtev = false;
                        }, 3000);
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
            else {
                _this.postojiUBazi = true;
                _this.poslatZahtev = false;
                setTimeout(function () {
                    _this.poslatZahtev = false;
                    _this.postojiUBazi = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UserPage = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(771),
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */]) === 'function' && _e) || Object])
    ], UserPage);
    return UserPage;
    var _a, _b, _c, _d, _e;
}());
//# sourceMappingURL=user-page.component.js.map

/***/ }),

/***/ 356:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_finally__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_finally___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_finally__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_toPromise__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_toPromise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jquery__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_jquery__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddMarker; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var AddMarker = (function () {
    function AddMarker(permService, fb, http) {
        this.permService = permService;
        this.fb = fb;
        this.http = http;
        this.uspesnoDodatMarker = false;
        this.prazanNizplantaza = false;
        this.spisakMarkera = [];
        this.cekiranaMerenja = [];
        this.markerObrisan = false;
        this.idVlasnika = [];
        this.ddVisible = false;
        this.povezivanjeVidljivo = true;
        this.selektovanMarker = -1;
        this.povezano = false;
        this.nizOverlay = [];
        this.sviVlasnici = [];
        this.dozvoleKodGazde = [];
        this.isLoading = false;
        this.nizMarkera = [];
        this.nizOdabranih = [];
        this.nizOdabranihPlantaza = [];
        this.mapPovezivanje = null;
        this.drawingManagerPovezivanje = null;
        this.komeMozeDaDoda = [];
        this.perm = [];
        this.dodatMerac = false;
        this.newCss = false;
        this.lang = "srb";
        this.meniMultiLang = {
            "srb": [
                /*0*/ { "Dodavanje meraca": "Dodavanje merača" },
                /*1*/ { "Merac dodat": "Merač dodat" },
                /*2*/ { "Izbor vlasnika": "Izbor vlasnika" },
                /*3*/ { "Izaberite imanje": "Izaberite imanje" },
                /*4*/ { "Izabrati": "Izabrati" },
                /*5*/ { "Izaberite plantazu": "Izaberite plantazu" },
                /*6*/ { "Izabrati merenja": "Izabrati merenja" },
                /*7*/ { "Obrisi": "Obriši" },
                /*8*/ { "Povezi": "Poveži" },
                /*9*/ { "Kliknite na mapu za dodavanje meraca": "Kliknite na mapu za dodavanje merača" },
                /*10*/ { "Nemate pristup ovoj stranici!": "Nemate pristup ovoj stranici!" },
                /*11*/ { "Za vise informacija obratite se administratoru sistema.": "Za vise informacija obratite se administratoru sistema." },
                /*12*/ { "12": "Uspešno ste povezali merač i plantažu." },
                /*13*/ { "13": "Morate izabrati bar jednu plantažu i merač" },
                /*14*/ { "14": "Uspešno ste obrisali merač." },
            ],
            "eng": [
                /*0*/ { "Dodavanje meraca": "Add sensor" },
                /*1*/ { "Merac dodat": "Sensor added" },
                /*2*/ { "Izbor vlasnika": "Choose owner" },
                /*3*/ { "Izaberite imanje": "Choose property" },
                /*4*/ { "Izabrati": "Choose" },
                /*5*/ { "Izaberite plantazu": "Choose plantation" },
                /*6*/ { "Izabrati merenja": "Choose measurments" },
                /*7*/ { "Obrisi": "Delete" },
                /*8*/ { "Povezi": "Connect" },
                /*9*/ { "Kliknite na mapu za dodavanje meraca": "Click on the map to add sensor" },
                /*10*/ { "Nemate pristup ovoj stranici!": "You cant access this page" },
                /*11*/ { "Za vise informacija obratite se administratoru sistema.": "For more informations contact system admin" },
                /*12*/ { "12": "You have successfully  added sensor" },
                /*13*/ { "13": "You have to select at least one plantation and sensor" },
                /*14*/ { "14": "You have successfully deleted a sensor" },
            ],
        };
        this.smeDaDodaje = false;
        this.plantazeSaImanja = [];
        this.prosliKlik = -1;
        this.expanded = false;
        this.expanded1 = false;
        this.expanded2 = false;
        this.sviPoligoni = [];
        this.cekiran = [];
    }
    AddMarker.prototype.ngAfterViewInit = function () {
        __WEBPACK_IMPORTED_MODULE_7_jquery__(document).ready(function () {
        });
    };
    AddMarker.prototype.close = function () {
        this.povezano = false;
        this.dodatMerac = false;
    };
    AddMarker.prototype.getUser = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            console.log(_this.user);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddMarker.prototype.userIsOwner = function () {
        var _this = this;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            console.log(_this.isOwner + " u ng on init add types");
            _this.getOwners();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddMarker.prototype.getOwners = function () {
        var _this = this;
        this.http.get("users/getOwners")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviVlasnici = data;
            _this.getPerms();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddMarker.prototype.getPerms = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " " + data.dozvole);
            _this.perm = data;
            if (data.dozvole !== undefined && data.dozvole.length > 0) {
                _this.dozvoleKodGazde = data.dozvole.filter(function (x) { return x.vrednosti.plantCRUD == true; });
                if (_this.dozvoleKodGazde.length > 0 || _this.isOwner) {
                    _this.smeDaDodaje = true;
                    _this.spoji();
                }
            }
            else if (_this.isOwner) {
                _this.smeDaDodaje = true;
                _this.spoji();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddMarker.prototype.spoji = function () {
        console.log("SPOJI");
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        for (var i = 0; this.sviVlasnici !== undefined && i < this.sviVlasnici.length; i++)
            for (var j = 0; this.dozvoleKodGazde !== undefined && j < this.dozvoleKodGazde.length; j++) {
                console.log(this.sviVlasnici[i].idOwner + " " + this.dozvoleKodGazde[j].vlasnik);
                if (this.sviVlasnici[i].idOwner == this.dozvoleKodGazde[j].vlasnik) {
                    console.log(this.sviVlasnici[i]);
                    // var noviID = {id:this.sviVlasnici[i].idOwner};
                    var noviG = {
                        id: this.sviVlasnici[i].idOwner,
                        name: this.sviVlasnici[i].name,
                        surname: this.sviVlasnici[i].surname,
                        username: this.sviVlasnici[i].username,
                        email: this.sviVlasnici[i].email
                    };
                    this.komeMozeDaDoda.push(noviG);
                    this.idVlasnika.push(this.sviVlasnici[i].idOwner);
                    console.log(this.komeMozeDaDoda[0]);
                }
            }
        if (this.isOwner) {
            var noviG = {
                id: this.user.id,
                name: this.user.name,
                surname: this.user.surname,
                username: this.user.username,
                email: this.user.email
            };
            this.komeMozeDaDoda.unshift(noviG);
            this.idVlasnika.unshift(this.user.id);
        }
        console.log(this.idVlasnika[0]);
        this.uzmiImanja(this.idVlasnika[0]);
    };
    AddMarker.prototype.ngOnInit = function () {
        var _this = this;
        this.selectedLang = this.meniMultiLang[this.lang];
        this.pinImageRed = null;
        this.pinImageBlue = "GoogleMapsMarkers/marker-blue.png";
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        var self = this;
        self.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiBoje();
            _this.uzmiLang();
            if (_this.user.id) {
                _this.dajSvaMerenja();
                _this.userIsOwner();
                _this.podesiMape();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('user stigao'); });
    };
    AddMarker.prototype.podesiMape = function () {
        var self = this;
        //mapa za povezivanje plantaze i markera
        console.log("mapa2");
        console.log(document.getElementById('googleMapPovezivanje'));
        if (document.getElementById('googleMapPovezivanje') == undefined || document.getElementById('googleMapPovezivanje') == null)
            return;
        self.mapPovezivanje = new google.maps.Map(document.getElementById('googleMapPovezivanje'), {
            center: { lat: 44.017813, lng: 20.907229 },
            zoom: 7,
            mapTypeId: 'hybrid'
        });
        self.drawingManagerPovezivanje = new google.maps.drawing.DrawingManager({
            drawingMode: google.maps.drawing.OverlayType.MARKER,
            drawingControl: true,
            drawingControlOptions: {
                position: google.maps.ControlPosition.TOP_CENTER,
                drawingModes: ['marker'],
            },
            markerOptions: {
                animation: google.maps.Animation.DROP,
                draggable: true,
                raiseOnDrag: true,
                title: "NEW",
                icon: self.pinImageBlue,
                id: -2
            }
        });
        google.maps.event.addListener(self.drawingManagerPovezivanje, 'overlaycomplete', function (event) {
            console.log(event.overlay.getPosition());
            var latlng = event.overlay.getPosition();
            self.removeLast();
            self.nizMarkera.push(latlng);
            self.nizOverlay.push(event.overlay);
            self.selektovanMarker = -2;
            self.spisakMarkera.forEach(function (item, index) {
                self.spisakMarkera[index].setIcon(self.pinImageRed);
            });
            /*
                  for (var i = 0; i < self.merenja.length; i++) {
                    self.cekiranaMerenja[self.merenja[i].id] = false;
                  }
                  self.sveSkloni();
                  self.nizOdabranih = [];
                  self.nizOdabranihPlantaza = [];
                  self.promeniCek(-1);
            */
            event.overlay.addListener('click', function () {
                var id = this.id;
                // ovjde!
                for (var i = 0; i < self.merenja.length; i++) {
                    self.cekiranaMerenja[self.merenja[i].id] = false;
                }
                self.sveSkloni();
                self.nizOdabranih = [];
                self.nizOdabranihPlantaza = [];
                self.promeniCek(-1);
                self.spisakMarkera.forEach(function (item, index) {
                    self.spisakMarkera[index].setIcon(id == index ? self.pinImageBlue : self.pinImageRed);
                });
                this.setIcon(self.pinImageBlue);
                self.selektovanMarker = id;
            });
            event.overlay.addListener('dragend', function (event) {
                var latlng = this.position;
                //console.log(self.nizMarkera[0].lat() + " ~~ " + self.currentLatLng.lat() + " || " + self.nizMarkera[0].lng() + " ~~ " + self.currentLatLng.lng());
                var i = self.nizMarkera.findIndex(function (x) { return x.lat() == self.currentLatLng.lat() && x.lng() == self.currentLatLng.lng(); });
                self.nizMarkera[i] = latlng;
            });
            event.overlay.addListener('dragstart', function (event) {
                self.currentLatLng = this.position;
            });
        });
        self.drawingManagerPovezivanje.setMap(self.mapPovezivanje);
        this.getMarkers();
    };
    AddMarker.prototype.dodajMarker = function () {
        var _this = this;
        if (this.nizMarkera.length == 0) {
            alert("prazan niz");
            return;
        }
        var niz = JSON.stringify(this.nizMarkera);
        this.http.get("markers/addMarker/" + niz)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data == true) {
                _this.nizMarkera = [];
                _this.dodatMerac = true;
                _this.removeAllMarkers();
                _this.getMarkers();
                setTimeout(function () {
                    _this.dodatMerac = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('plantaze stigle'); });
    };
    AddMarker.prototype.removeAllMarkers = function () {
        if (this.nizMarkera.length != 0) {
            for (var i = 0; i < this.nizMarkera.length; i++) {
                this.nizOverlay[i].setMap(null);
            }
            this.nizMarkera = [];
            this.nizOverlay = [];
        }
    };
    AddMarker.prototype.removeLast = function () {
        if (this.nizMarkera.length != 0) {
            var len = this.nizMarkera.length - 1;
            this.nizMarkera.pop();
            this.nizOverlay[len].setMap(null);
            this.nizOverlay.pop();
        }
    };
    AddMarker.prototype.getMarkers = function () {
        var _this = this;
        var self = this;
        this.http.get("markers/getMarkers/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success == true) {
                _this.postojeciMarkeri = data.data;
                _this.postojeciMarkeri;
                for (var i = 0; i < _this.postojeciMarkeri.length; i++) {
                    if (_this.postojeciMarkeri[i].x !== undefined && _this.postojeciMarkeri[i].y !== undefined) {
                        var LatLng = { lat: _this.postojeciMarkeri[i].y, lng: _this.postojeciMarkeri[i].x };
                        console.log(LatLng);
                        var nacrtanJE = false;
                        var pppapa = self.spisakMarkera[self.postojeciMarkeri[i].id];
                        if (pppapa != undefined) {
                            nacrtanJE = true;
                        }
                        if (nacrtanJE)
                            continue;
                        var marker = new google.maps.Marker({
                            position: LatLng,
                            draggable: true,
                            map: _this.mapPovezivanje,
                            title: 'Merac broj: ' + _this.postojeciMarkeri[i].id,
                            icon: _this.pinImageRed,
                            id: _this.postojeciMarkeri[i].id
                        });
                        self.spisakMarkera[marker.id] = marker;
                        //self.spisakMarkera.push(self.nizMarkera[0]);
                        self.spisakMarkera[marker.id].addListener('dragend', function (event) {
                            var latlng = this.position;
                            self.spisakMarkera[self.idZaVucu].position = latlng;
                        });
                        self.spisakMarkera[marker.id].addListener('dragstart', function (event) {
                            self.currentLatLng = this.position;
                            self.idZaVucu = this.id;
                            console.log("ovaj vuce" + self.idZaVucu);
                        });
                        self.spisakMarkera[marker.id].addListener('click', function () {
                            var id = this.id;
                            if (self.selektovanMarker != id) {
                                var splitStr;
                                for (var i = 0; i < self.merenja.length; i++) {
                                    self.cekiranaMerenja[self.merenja[i].id] = false;
                                }
                                self.nizOdabranih = [];
                                for (var i = 0; i < self.postojeciMarkeri.length; i++) {
                                    if (self.postojeciMarkeri[i].id == id) {
                                        splitStr = self.postojeciMarkeri[i].attribute.split('-');
                                        break;
                                    }
                                }
                                for (var i = 0; i < splitStr.length - 1; i++) {
                                    var splitovan = splitStr[i].split("~");
                                    self.cekiranaMerenja[splitovan[1]] = true;
                                }
                                for (var i = 0; i < self.merenja.length; i++) {
                                    if (self.cekiranaMerenja[self.merenja[i].id]) {
                                        self.nizOdabranih.push(self.merenja[i]);
                                    }
                                }
                                self.sveSkloni();
                                for (var i = 0; i < self.postojeciMarkeri.length; i++) {
                                    if (id == self.postojeciMarkeri[i].id) {
                                        self.crtajPoligon(self.postojeciMarkeri[i].idPlant);
                                    }
                                }
                                self.nizOdabranihPlantaza = [];
                                self.popuniCekove();
                                // self.promeniCek(-1);
                                self.spisakMarkera.forEach(function (item, index) {
                                    self.spisakMarkera[index].setIcon(id == index ? self.pinImageBlue : self.pinImageRed);
                                });
                                if (self.nizOverlay.length != 0)
                                    self.nizOverlay[0].setIcon(self.pinImageRed);
                                self.selektovanMarker = id;
                            }
                        });
                    }
                }
            }
        }, function (err) { return console.log(err); }, function () { return console.log('plantaze stigle'); });
    };
    AddMarker.prototype.poveziMarkerPlantazu = function () {
        var _this = this;
        var pom;
        pom = this.dajMerenja();
        console.log(pom);
        if (this.selektovanMarker == -2) {
            var marker = {
                y: this.nizMarkera[0].lat(),
                x: this.nizMarkera[0].lng(),
                attribute: pom
            };
            var plantaza = [];
            var brojac = 0;
            for (var i = 0; i < this.sviPoligoni.length; i++) {
                if (this.sviPoligoni[i].crtan) {
                    brojac++;
                    plantaza.push(this.sviPoligoni[i].id);
                }
                ;
            }
            ;
            if (brojac == 0 || this.sviPoligoni == undefined || this.nizMarkera[0] == undefined) {
                this.prazanNizplantaza = true;
                setTimeout(function () {
                    _this.prazanNizplantaza = false;
                }, 3000);
                return;
            }
            //console.log(JSON.stringify(marker));
            var marker1 = JSON.stringify(marker);
            var plantaza1 = JSON.stringify(plantaza);
            this.http.get("markers/connectPlantNewMarker/" + plantaza1 + "/" + marker1)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                if (data.success == true) {
                    _this.povezano = true;
                    setTimeout(function () {
                        _this.povezano = false;
                    }, 3000);
                    location.reload();
                    _this.uspesnoDodatMarker = true;
                    setTimeout(function () {
                        _this.uspesnoDodatMarker = false;
                    }, 3000);
                }
            }, function (err) { return console.log(err); }, function () { return console.log('plantaze stigle'); });
            return;
        }
        else if (this.selektovanMarker != -1) {
            var plantaza = [];
            for (var i = 0; i < this.sviPoligoni.length; i++) {
                if (this.sviPoligoni[i].crtan) {
                    plantaza.push(this.sviPoligoni[i].id);
                }
                ;
            }
            ;
            console.log(this.spisakMarkera[this.selektovanMarker].position.lat);
            console.log(this.spisakMarkera[this.selektovanMarker].position.lat());
            var marker2 = {
                id: this.selektovanMarker,
                y: this.spisakMarkera[this.selektovanMarker].position.lat(),
                x: this.spisakMarkera[this.selektovanMarker].position.lng(),
                attribute: pom
            };
            console.log(marker2);
            var marker3 = JSON.stringify(marker2);
            var plantaza1 = JSON.stringify(plantaza);
            this.http.get("markers/connectPlantMarker/" + plantaza1 + "/" + marker3)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                if (data.success == true) {
                    _this.povezano = true;
                    setTimeout(function () {
                        _this.povezano = false;
                    }, 3000);
                    location.reload();
                    _this.uspesnoDodatMarker = true;
                    setTimeout(function () {
                        _this.uspesnoDodatMarker = false;
                    }, 3000);
                }
            }, function (err) { return console.log(err); }, function () { return console.log('plantaze stigle'); });
        }
        else {
            this.prazanNizplantaza = true;
            setTimeout(function () {
                _this.prazanNizplantaza = false;
            }, 3000);
        }
    };
    AddMarker.prototype.promenaSelekta = function () {
        console.log("JAOOOOO MAJKO RODJENA!");
        var e;
        e = document.getElementById("selektajtem");
        var strUser = e.options[e.selectedIndex].value;
        this.uzmiImanja(strUser);
    };
    AddMarker.prototype.onChangeIm = function (value) {
        if (value == 'Izaberite imanje' || value == "Choose property")
            return;
        this.dajSvePlantazSaImanja(value);
    };
    AddMarker.prototype.uzmiImanja = function (idUser) {
        var _this = this;
        console.log("STIGLO U IMANJA " + idUser);
        this.svaImanja = [];
        this.http.get("users/prikaziImanje/" + idUser)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.svaImanja = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddMarker.prototype.dajSvePlantazSaImanja = function (value) {
        //console.log("Stigo: " + value);
        var _this = this;
        if (this.prosliKlik == -1 || this.prosliKlik != value) {
            this.http.get("users/prikaziPlantazeSaImanja/" + value)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.plantazeSaImanja = data;
                _this.popuniCekove();
            }, function (err) { return console.log(err); }, function () { return console.log('plantaze stigle'); });
            this.prosliKlik = value;
        }
        else {
            this.plantazeSaImanja = [];
            this.prosliKlik = -1;
        }
    };
    AddMarker.prototype.dajSvaMerenja = function () {
        var _this = this;
        console.log("oaaaa: ");
        this.http.get("users/dajMerenja/")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.merenja = data;
            for (var i = 0; i < _this.merenja.length; i++) {
                _this.cekiranaMerenja[_this.merenja[i].id] = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('plantaze stigle'); });
    };
    AddMarker.prototype.showCheckboxes = function () {
        var checkboxes = document.getElementById("checkboxes");
        if (!this.expanded) {
            checkboxes.style.display = "block";
            this.expanded = true;
        }
        else {
            checkboxes.style.display = "none";
            this.expanded = false;
        }
    };
    AddMarker.prototype.showCheckboxes1 = function () {
        var checkboxes = document.getElementById("checkboxesImanje");
        if (!this.expanded1) {
            checkboxes.style.display = "block";
            this.expanded1 = true;
        }
        else {
            checkboxes.style.display = "none";
            this.expanded1 = false;
        }
    };
    AddMarker.prototype.showCheckboxes2 = function () {
        var checkboxes = document.getElementById("checkboxesPlantaze");
        if (!this.expanded2) {
            checkboxes.style.display = "block";
            this.expanded2 = true;
        }
        else {
            checkboxes.style.display = "none";
            this.expanded2 = false;
        }
    };
    AddMarker.prototype.crtajPoligon = function (value) {
        var _this = this;
        var bio = true;
        console.log("jeste djole, tu je!");
        console.log(this.nizOdabranihPlantaza);
        var check;
        for (var i = 0; i < this.plantazeSaImanja.length; i++) {
            if (this.plantazeSaImanja[i].id == value) {
                check = this.nizOdabranihPlantaza.find(function (item) { return item.id === value; });
                if (check != undefined) {
                    console.log("tuCrtajPola");
                    var index = this.nizOdabranihPlantaza.indexOf(this.plantazeSaImanja[i]);
                    if (index >= 0)
                        this.nizOdabranihPlantaza.splice(index, 1);
                    console.log("tuPOla");
                }
                else {
                    this.nizOdabranihPlantaza.push(this.plantazeSaImanja[i]);
                    console.log("tu2pola");
                }
            }
        }
        console.log("tu sam+ " + this.nizOdabranihPlantaza);
        for (var i = 0; i < this.sviPoligoni.length; i++) {
            if (this.sviPoligoni[i].crtan && this.sviPoligoni[i].id == value) {
                this.sviPoligoni[i].crtan = false;
                this.sviPoligoni[i].setMap(null);
                bio = false;
            }
        }
        if (bio) {
            var coords;
            var nizPoligona = [];
            var poligon = [];
            var self_1 = this;
            this.http.get("/plantations/userPlantation/" + value)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                coords = data;
                var coordinates = coords[0].coordinates;
                for (var i = 0; i < coords[0].coordinates.length; i++) {
                    for (var j = 0; j < coords[0].coordinates[i].length; j++) {
                        poligon[poligon.length] = new google.maps.LatLng(coords[0].coordinates[i][j][1], coords[0].coordinates[i][j][0]);
                    }
                    nizPoligona.push(poligon);
                    poligon = [];
                }
                var tuJe = false;
                for (var i = 0; i < _this.sviPoligoni.length; i++) {
                    if (_this.sviPoligoni[i].id == value) {
                        tuJe = true;
                        _this.sviPoligoni[i].crtan = true;
                        _this.sviPoligoni[i].setMap(self_1.mapPovezivanje);
                    }
                }
                if (!tuJe) {
                    var polygons = new google.maps.Polygon({
                        paths: nizPoligona,
                        clickable: true,
                        zIndex: 1,
                        strokeColor: '#FFFFFF',
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        fillColor: '#FFFFFF',
                        fillOpacity: 0.35,
                        crtan: true,
                        id: value
                    });
                    polygons.setMap(self_1.mapPovezivanje);
                    _this.sviPoligoni.push(polygons);
                }
                setTimeout(function () {
                    google.maps.event.trigger(self_1.mapPovezivanje, 'resize');
                }, 100);
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
        /*
        this.nizOdabranihPlantaza = [];
        for (var i = 0; i < this.sviPoligoni.length; i++) {
          if (this.sviPoligoni[i].crtan) {
            var pom = this.plantazeSaImanja.find(x => x.id == this.sviPoligoni[i].id);
            if (pom != undefined) {
              this.nizOdabranihPlantaza.push(this.plantazeSaImanja[i]);
            }
          }
        }*/
    };
    AddMarker.prototype.popuniCekove = function () {
        var _this = this;
        this.cekiran = [];
        for (var i = 0; i < this.sviPoligoni.length; i++) {
            if (this.sviPoligoni[i].crtan) {
                this.cekiran[this.sviPoligoni[i].id] = true;
            }
            else {
                this.cekiran[this.sviPoligoni[i].id] = false;
            }
        }
        for (var i = 0; i < this.plantazeSaImanja.length; i++) {
            if (this.cekiran[this.plantazeSaImanja[i].id]) {
                if (this.nizOdabranihPlantaza.find(function (x) { return x.id == _this.plantazeSaImanja[i].id; }) == undefined) {
                    this.nizOdabranihPlantaza.push(this.plantazeSaImanja[i]);
                }
                else {
                    console.log("tu je vec!");
                }
            }
        }
        console.log(this.cekiran);
    };
    AddMarker.prototype.sveSkloni = function () {
        for (var i = 0; i < this.sviPoligoni.length; i++) {
            this.sviPoligoni[i].crtan = false;
            this.cekiran[this.sviPoligoni[i].id] = false;
            this.sviPoligoni[i].setMap(null);
        }
    };
    AddMarker.prototype.obrisiMarker = function () {
        var _this = this;
        if (this.selektovanMarker == -2) {
            console.log("brisi novopeceni sa mape!");
            this.nizOverlay[0].setMap(null);
            this.nizOverlay = [];
            this.nizMarkera = [];
            this.markerObrisan = true;
            setTimeout(function () {
                _this.markerObrisan = false;
            }, 3000);
        }
        else {
            if (this.selektovanMarker != -1) {
                this.sveSkloni();
                this.http.get("markers/deleteMarker/" + this.selektovanMarker)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    if (data == true) {
                        _this.markerObrisan = true;
                        setTimeout(function () {
                            _this.markerObrisan = false;
                        }, 3000);
                    }
                    _this.nizMarkera = [];
                    _this.spisakMarkera[_this.selektovanMarker].setMap(null);
                }, function (err) { return console.log(err); }, function () { return console.log('plantaze stigle'); });
            }
        }
        this.selektovanMarker = -1;
    };
    AddMarker.prototype.dajMerenja = function () {
        var cekirana = "";
        for (var i = 0; i < this.merenja.length; i++) {
            if (this.cekiranaMerenja[this.merenja[i].id])
                cekirana += this.merenja[i].name + "~" + this.merenja[i].id + "-";
        }
        console.log(cekirana);
        return cekirana;
    };
    AddMarker.prototype.promeniCek = function (value) {
        var check;
        if (this.cekiranaMerenja[value] != undefined)
            this.cekiranaMerenja[value] = !this.cekiranaMerenja[value];
        this.nizOdabranih = [];
        for (var i = 0; i < this.merenja.length; i++) {
            if (this.cekiranaMerenja[this.merenja[i].id]) {
                this.nizOdabranih.push(this.merenja[i]);
            }
        }
        console.log(this.cekiranaMerenja[value]);
    };
    AddMarker.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddMarker.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AddMarker = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-markers-page',
            template: __webpack_require__(773)
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_6__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_6__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */]) === 'function' && _c) || Object])
    ], AddMarker);
    return AddMarker;
    var _a, _b, _c;
}());
//# sourceMappingURL=add-marker.component.js.map

/***/ }),

/***/ 357:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminAuthGuard; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminAuthGuard = (function () {
    function AdminAuthGuard(http, localStorageService) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.canAccess = false;
    }
    AdminAuthGuard.prototype.canActivate = function () {
        console.log(this.localStorageService.get("admin"));
        return this.localStorageService.get("admin");
    };
    AdminAuthGuard.prototype.ngOnInit = function () {
    };
    AdminAuthGuard = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object])
    ], AdminAuthGuard);
    return AdminAuthGuard;
    var _a, _b;
}());
//# sourceMappingURL=admin-auth-guard-service.js.map

/***/ }),

/***/ 358:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminPageComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AdminPageComponent = (function () {
    function AdminPageComponent(http, router) {
        this.http = http;
        this.router = router;
        this.sortBy = "name";
        this.vidljivost = false;
        this.prikaziUsere = false;
        this.prikaziZahtev = false;
        this.statVidljiva = false;
        this.uspesno = false;
        this.typesDoughChart = false;
        this.subtypesDoughChart = false;
        this.userChartBar = false;
        this.plantChartBar = false;
        this.parcelChartBar = false;
        this.typesChartBar = false;
        this.barChartOptions = {
            scaleShowVerticalLines: false,
            responsive: true
        };
        this.userBarChartLabels = [];
        this.barChartType = 'bar';
        this.barChartLegend = true;
        this.doughnutChartType = 'doughnut';
        this.lineChartColors1 = [
            {
                // light red
                backgroundColor: 'rgba(247, 91, 91,0.2)',
                borderColor: 'rgba(247, 91, 91,1)',
                pointBackgroundColor: 'rgba(247, 91, 91,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(247, 91, 91,1)'
            }
        ];
        this.lineChartColors2 = [
            {
                // dark grey
                backgroundColor: 'rgba(77,83,96,0.2)',
                borderColor: 'rgba(77,83,96,1)',
                pointBackgroundColor: 'rgba(77,83,96,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(77,83,96,1)'
            }
        ];
        this.lineChartColors3 = [
            {
                // light green
                backgroundColor: 'rgba(67, 153, 168,0.2)',
                borderColor: 'rgba(67, 153, 168,1)',
                pointBackgroundColor: 'rgba(67, 153, 168,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(67, 153, 168,1)'
            }
        ];
        this.lineChartColors = [
            {
                backgroundColor: 'rgba(12, 16, 127,0.2)',
                borderColor: 'rgba(12, 16, 127,1)',
                pointBackgroundColor: 'rgba(12, 16, 127,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(12, 16, 127,1)'
            },
            {
                backgroundColor: 'rgba(148,159,177,0.2)',
                borderColor: 'rgba(148,159,177,1)',
                pointBackgroundColor: 'rgba(148,159,177,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(148,159,177,0.8)'
            },
            {
                backgroundColor: 'rgba(77,83,96,0.2)',
                borderColor: 'rgba(77,83,96,1)',
                pointBackgroundColor: 'rgba(77,83,96,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(77,83,96,1)'
            },
            {
                backgroundColor: 'rgba(35,42,50,0.2)',
                borderColor: 'rgba(35,42,50,1)',
                pointBackgroundColor: 'rgba(35,42,50,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(35,42,50,0.8)'
            },
            {
                backgroundColor: 'rgba(158, 0, 0,0.2)',
                borderColor: 'rgba(158, 0, 0,1)',
                pointBackgroundColor: 'rgba(158, 0, 0,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(158, 0, 0,1)'
            },
            {
                backgroundColor: 'rgba(224, 15, 15,0.2)',
                borderColor: 'rgba(224, 15, 15,1)',
                pointBackgroundColor: 'rgba(224, 15, 15,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(224, 15, 15,1)'
            },
            {
                backgroundColor: 'rgba(247, 91, 91,0.2)',
                borderColor: 'rgba(247, 91, 91,1)',
                pointBackgroundColor: 'rgba(247, 91, 91,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(247, 91, 91,1)'
            },
            {
                backgroundColor: 'rgba(12, 16, 127,0.2)',
                borderColor: 'rgba(12, 16, 127,1)',
                pointBackgroundColor: 'rgba(12, 16, 127,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(12, 16, 127,1)'
            },
            {
                backgroundColor: 'rgba(98, 178, 247,0.2)',
                borderColor: 'rgba(98, 178, 247,1)',
                pointBackgroundColor: 'rgba(98, 178, 247,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(98, 178, 247,1)'
            },
            {
                backgroundColor: 'rgba((3, 61, 155,0.2)',
                borderColor: 'rgba((3, 61, 155,1)',
                pointBackgroundColor: 'rgba(3, 61, 155,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(3, 61, 155,1)'
            },
            {
                backgroundColor: 'rgba(67, 153, 168,0.2)',
                borderColor: 'rgba(67, 153, 168,1)',
                pointBackgroundColor: 'rgba(67, 153, 168,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(67, 153, 168,1)'
            },
            {
                backgroundColor: 'rgba(1, 33, 86,0.2)',
                borderColor: 'rgba(1, 33, 86,1)',
                pointBackgroundColor: 'rgba(1, 33, 86,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(1, 33, 86,1)'
            },
            {
                backgroundColor: 'rgba(1, 9, 22,0.2)',
                borderColor: 'rgba(1, 9, 22,1)',
                pointBackgroundColor: 'rgba(1, 9, 22,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(1, 9, 22,1)'
            }
        ];
    }
    AdminPageComponent.prototype.ngOnInit = function () {
        this.prikaziSve();
    };
    AdminPageComponent.prototype.prikaziSve = function () {
        var _this = this;
        this.http.get("users/prikaziKorisnike")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviKorisnici = data;
            _this.prikaziUsere = true;
            _this.prikaziZahtev = false;
            _this.statVidljiva = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AdminPageComponent.prototype.prikaziZahteve = function () {
        var _this = this;
        this.http.get("users/prikaziSveZahteve")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviZahtevi = data;
            _this.prikaziZahtev = true;
            _this.prikaziUsere = false;
            _this.statVidljiva = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AdminPageComponent.prototype.Dozvoli = function (value) {
        var _this = this;
        var id = value;
        var pom1;
        var pom2;
        this.http.get("users/dozvolaZaVlasnika/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success == true) {
                _this.http.get("users/dozvolaZaVlasnika1/" + id)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom2 = data;
                    if (pom2.success == true) {
                        _this.uspesno = true;
                        _this.prikaziZahteve();
                        _this.http.get("users/posaljiMailZahtevPrihvacen/" + id)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            var pom3;
                            pom3 = data;
                            if (pom3.success == true) {
                            }
                        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AdminPageComponent.prototype.Ignorisi = function (value) {
        var _this = this;
        var pom3;
        this.http.get("users/obrisiZahtev/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            if (pom3.success == true) {
                _this.uspesno = true;
                _this.prikaziZahteve();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AdminPageComponent.prototype.BlokirajKorisnika = function (value) {
        var _this = this;
        var korisnik = value;
        var status = 1;
        var novo;
        this.http.get("users/promeniKorisnika/" + korisnik + "/" + status)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            novo = data;
            if (novo.success) {
                _this.prikaziSve();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AdminPageComponent.prototype.OdblokirajKorisnika = function (value) {
        var _this = this;
        var korisnik = value;
        var status = 0;
        var novo;
        this.http.get("users/promeniKorisnika/" + korisnik + "/" + status)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            novo = data;
            if (novo.success) {
                _this.prikaziSve();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    AdminPageComponent.prototype.prikaziStatistiku = function () {
        var _this = this;
        this.http.get("types/numOfUsers")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.userChartBar = true;
                _this.userBarChartData = [{ data: _this.barData.data, label: 'Broj korisnika' }];
                _this.userBarChartLabels = _this.barData.labels;
                console.log(_this.userBarChartData);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("types/numOfPlantations")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.plantChartBar = true;
                console.log(_this.barData.data + " " + _this.barData.labels);
                _this.plantBarChartData = [{ data: _this.barData.data, label: 'Broj plantaza' }];
                _this.plantBarChartLabels = _this.barData.labels;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("types/numOfParcels")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.parcelChartBar = true;
                console.log(_this.barData.data + " " + _this.barData.labels);
                _this.parcelBarChartData = [{ data: _this.barData.data, label: 'Broj imanja' }];
                _this.parcelBarChartLabels = _this.barData.labels;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("types/numOfTypes")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.typesChartBar = true;
                console.log(_this.barData.data + " " + _this.barData.labels);
                _this.typesBarChartData = [{ data: _this.barData.data, label: 'Broj kultura' }];
                _this.typesBarChartLabels = _this.barData.labels;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("types/typesOnPlantations")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.typesDoughChart = true;
                _this.typesDoughnutChartData = _this.barData.data;
                _this.typesDoughnutChartLabels = _this.barData.labels;
                console.log(_this.typesDoughnutChartData + " " + _this.typesDoughnutChartLabels);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("types/subtypesOnPlantations")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.subtypesDoughChart = true;
                console.log(_this.barData.data + " " + _this.barData.labels);
                _this.subtypesDoughnutChartData = _this.barData.data;
                _this.subtypesDoughnutChartLabels = _this.barData.labels;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.prikaziZahtev = false;
        this.prikaziUsere = false;
        this.statVidljiva = true;
    };
    // events
    AdminPageComponent.prototype.chartbarClicked = function (e) {
        console.log(e);
    };
    AdminPageComponent.prototype.chartbarHovered = function (e) {
        console.log(e);
    };
    // events
    AdminPageComponent.prototype.chartClicked = function (e) {
        console.log(e);
    };
    AdminPageComponent.prototype.chartHovered = function (e) {
        console.log(e);
    };
    AdminPageComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-admin-page',
            template: __webpack_require__(774),
            styles: [__webpack_require__(737)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_router__["b" /* Router */]) === 'function' && _b) || Object])
    ], AdminPageComponent);
    return AdminPageComponent;
    var _a, _b;
}());
//# sourceMappingURL=admin-page.component.js.map

/***/ }),

/***/ 359:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AuthGuard; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AuthGuard = (function () {
    function AuthGuard(http, localStorageService) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.canAccess = false;
    }
    AuthGuard.prototype.canActivate = function () {
        console.log(this.localStorageService.get("logged"));
        return this.localStorageService.get("logged");
    };
    AuthGuard.prototype.ngOnInit = function () {
    };
    AuthGuard = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object])
    ], AuthGuard);
    return AuthGuard;
    var _a, _b;
}());
//# sourceMappingURL=auth-guard-service.js.map

/***/ }),

/***/ 360:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FaqComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var FaqComponent = (function () {
    function FaqComponent(permService, http) {
        this.permService = permService;
        this.http = http;
        this.poslato = false;
        this.pitanjaOdgovori = [];
        this.dozvole = "any";
        this.lang = "srb";
    }
    FaqComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
            _this.ime = _this.user.name;
            _this.email = _this.user.email;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.ucitajPitanjaOdgovore();
    };
    FaqComponent.prototype.posalji = function () {
        var _this = this;
        var pom3;
        this.http.get("users/posaljiMail2/" + this.ime + "/" + this.naslov + "/" + this.email + "/" + this.poruka)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            if (pom3.success) {
                _this.poslato = true;
                setTimeout(function () {
                    _this.poslato = false;
                }, 3000);
                _this.ime = "";
                _this.naslov = "";
                _this.email = "";
                _this.poruka = "";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    FaqComponent.prototype.ucitajPitanjaOdgovore = function () {
        var _this = this;
        var i;
        this.http.get("users/vratiFAQ")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.pom = data;
            for (i = 0; i < _this.pom.length; i++)
                _this.pitanjaOdgovori[i] = _this.pom[i];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed reg'); });
    };
    FaqComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    FaqComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-faq',
            template: __webpack_require__(776),
            styles: [__webpack_require__(738)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _b) || Object])
    ], FaqComponent);
    return FaqComponent;
    var _a, _b;
}());
//# sourceMappingURL=faq.component.js.map

/***/ }),

/***/ 361:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__states__ = __webpack_require__(666);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FinanceComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var FinanceComponent = (function () {
    function FinanceComponent(http, localStorageService, router) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.listaFinansija = [];
        this.rashodiLista = [];
        this.prihodiLista = [];
        this.prihodiVidljivi = true;
        this.rashodiVidljivi = false;
        this.ukupnoVidljivo = false;
        this.ukupnoRashodaPeriod = 0.0;
        this.ukupnoPrihodaPeriod = 0.0;
        this.ukupnoStatus = 0.0;
        this.stateList = [];
        this.newCss = false;
        this.lang = "srb";
        this.losDatum = false;
        this.losDatum1 = false;
        this.day_array = [];
        this.month_array = [];
        this.year_array = [];
        this.tipTr = "";
        this.opis = '';
        this.iznos = 0.0;
        this.ukupnoPrihoda = 0.0;
        this.ukupnoRashoda = 0.0;
        this.addTran = false;
        this.neispravnaForma = false;
        this.negativanIznos = false;
        this.uspesnaTransakcija = false;
        this.zaradaDoughChart = false;
        this.zaradaDoughnutChartLabels = [];
        this.zaradaDoughnutChartData = [];
        this.doughnutChartType = 'doughnut';
        this.meniMultiLang = {
            "srb": [
                /*0*/ { "Prihodi": " Prihodi " },
                /*1*/ { "Rashodi": " Rashodi " },
                /*2*/ { "Ukupno": " Ukupno " },
            ],
            "eng": [
                /*0*/ { "Prihodi": "Income" },
                /*1*/ { "Rashodi": "Expenses" },
                /*2*/ { "Ukupno": " Overall " },
            ],
        };
    }
    FinanceComponent.prototype.chartClicked = function (e) {
        console.log(e);
    };
    FinanceComponent.prototype.chartHovered = function (e) {
        console.log(e);
    };
    FinanceComponent.prototype.racunajUkupno = function () {
        this.ukupnoPrihoda = 0.0;
        this.ukupnoRashoda = 0.0;
        for (var i = 0; i < this.prihodiLista.length; i++)
            this.ukupnoPrihoda += this.prihodiLista[i].iznos;
        for (var i = 0; i < this.rashodiLista.length; i++)
            this.ukupnoRashoda += this.rashodiLista[i].iznos;
    };
    FinanceComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selectedLang = this.meniMultiLang[this.lang];
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiBoje();
            _this.uzmiLang();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("finance/getAllFinances")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.listaFinansija = data;
            console.log(data + " finansije daj sve");
            _this.prihodiVidljivi = true;
            if (_this.listaFinansija.length > 0) {
                _this.prihodiLista = _this.listaFinansija.filter(function (x) { return x.tip == "prihod"; });
                _this.rashodiLista = _this.listaFinansija.filter(function (x) { return x.tip == "rashod"; });
                _this.racunajUkupno();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        for (var i = 1; i <= 31; i++) {
            this.day_array.push(i);
            if (i <= 12)
                this.month_array.push(i);
        }
        this.date = new Date();
        for (var i = this.date.getFullYear(); i >= 1900; i--)
            this.year_array.push(i);
        this.year_array.unshift("godina");
        this.day_array.unshift("dan");
        this.month_array.unshift("mesec");
        this.podesiDatum();
        this.stateList = __WEBPACK_IMPORTED_MODULE_4__states__["a" /* states */];
    };
    FinanceComponent.prototype.promeniTab = function () {
        this.rashodiVidljivi = false;
        this.prihodiVidljivi = true;
        this.ukupnoVidljivo = false;
    };
    FinanceComponent.prototype.promeniTab1 = function () {
        this.rashodiVidljivi = true;
        this.prihodiVidljivi = false;
        this.ukupnoVidljivo = false;
    };
    FinanceComponent.prototype.promeniTab2 = function () {
        this.rashodiVidljivi = false;
        this.prihodiVidljivi = false;
        this.ukupnoVidljivo = true;
    };
    FinanceComponent.prototype.podesiDatum = function () {
        var dateObj = new Date();
        this.thisMonth = dateObj.getUTCMonth() + 1;
        this.thisDay = dateObj.getUTCDate();
        this.thisYear = dateObj.getUTCFullYear();
        console.log(this.thisMonth + "-" + this.thisDay + "-" + this.thisYear);
        var m = dateObj.getMonth();
        dateObj.setMonth(dateObj.getMonth() - 1);
        if (dateObj.getMonth() == m)
            dateObj.setDate(0);
        dateObj.setHours(0, 0, 0);
        dateObj.setMilliseconds(0);
        this.monthAgo = dateObj.getUTCMonth() + 1;
        this.dayAgo = dateObj.getUTCDate();
        this.yearAgo = dateObj.getUTCFullYear();
    };
    FinanceComponent.prototype.convertCurrency = function () {
        var _this = this;
        console.log(this.stateP + " " + this.stateZ);
        var headers = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["c" /* Headers */]({ 'Access-Control-Allow-Origin': 'http://localhost:2072',
            'Access-Control-Allow-Methods': 'OPTIONS, GET, POST, PUT',
            'Access-Control-Allow-Headers': 'Authorization, Lang',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Language': 'en-GB,en;q=0.8,en-US;q=0.6,de;q=0.4,nb;q=0.2'
        });
        var options = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["e" /* RequestOptions */]({ headers: headers });
        //this.http.get(`http://www.floatrates.com/widget/00000207/525f7f0ffa6bc40d9396210ee9fb4718/${this.stateP}.json`,options)
        //this.http.get(`http://www.floatrates.com/daily/${this.stateP}.json`,options)
        this.http.get("https://openexchangerates.org/api/latest.json?app_id=2c5f7535e6d34b8bacfa96afdb58e81f")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data);
            if (data != undefined || data != null || data.length < 1) {
                _this.sveValute = data;
                console.log(_this.sveValute);
                var drzava;
                drzava = _this.sveValute.rates[_this.stateP];
                var drzava2 = _this.sveValute.rates[_this.stateZ];
                console.log(drzava);
                //drzava = this.sveValute["rates"].filter(x => x[0] == this.stateZ);
                _this.vrednostKonv = (_this.polaznaSuma / drzava) * drzava2;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    FinanceComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    FinanceComponent.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    FinanceComponent.prototype.sacuvajTransakciju = function (br) {
        var _this = this;
        var dan;
        dan = document.getElementById("dan");
        var dan = dan.options[dan.selectedIndex].value;
        var mesec;
        mesec = document.getElementById("mesec");
        var mesec = mesec.options[mesec.selectedIndex].value;
        var godina;
        godina = document.getElementById("godina");
        var godina = godina.options[godina.selectedIndex].value;
        var datum = dan + "-" + mesec + "-" + godina;
        var pattern = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;
        if (!pattern.test(datum)) {
            this.losDatum = true;
            setTimeout(function () {
                _this.losDatum = false;
            }, 5000);
            return;
        }
        datum = mesec + "-" + dan + "-" + godina;
        console.log("opis" + this.opis + "opis " + this.iznos + " " + datum + " " + br);
        if ((this.opis !== undefined && this.opis != '') && (datum !== undefined && datum != '') && (this.iznos !== undefined)) {
            //ubaci u bazu
            if (this.iznos >= 0) {
                if (br == 1) {
                    console.log("saljem prihod");
                    this.http.get("finance/addIncome/" + this.opis + "/" + datum + "/" + this.iznos)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        _this.test = data;
                        if (_this.test.success) {
                            _this.dodatPrihod = true;
                            setTimeout(function () {
                                _this.dodatPrihod = false;
                            }, 3000);
                            _this.ucitajOpet();
                            _this.opis = "";
                            _this.iznos = 0.0;
                        }
                        else {
                            _this.dodatPrihod = false;
                        }
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                }
                else if (br == 2) {
                    console.log("saljem rashod");
                    this.http.get("finance/addExpense/" + this.opis + "/" + datum + "/" + this.iznos)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        _this.test = data;
                        if (_this.test.success) {
                            _this.dodatRashod = true;
                            setTimeout(function () {
                                _this.dodatRashod = false;
                            }, 3000);
                            _this.ucitajOpet();
                            _this.opis = "";
                            _this.iznos = 0.0;
                        }
                        else {
                            _this.dodatRashod = false;
                        }
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                }
            }
            else {
                this.negativanIznos = true;
                setTimeout(function () {
                    _this.negativanIznos = false;
                }, 3000);
            }
        }
        else {
            this.neispravnaForma = true;
            setTimeout(function () {
                _this.neispravnaForma = false;
            }, 3000);
        }
    };
    FinanceComponent.prototype.ucitajOpet = function () {
        var _this = this;
        this.http.get("finance/getAllFinances")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.listaFinansija = data;
            console.log(data + " finansije daj sve");
            if (_this.listaFinansija.length > 0) {
                _this.prihodiLista = _this.listaFinansija.filter(function (x) { return x.tip == "prihod"; });
                _this.rashodiLista = _this.listaFinansija.filter(function (x) { return x.tip == "rashod"; });
                _this.racunajUkupno();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    FinanceComponent.prototype.izrUkupno = function () {
        var _this = this;
        this.ukupnoStatus = 0.0;
        this.ukupnoPrihodaPeriod = 0.0;
        this.ukupnoRashodaPeriod = 0.0;
        this.zaradaDoughChart = false;
        this.zaradaDoughnutChartData = [];
        this.zaradaDoughnutChartLabels = [];
        console.log("usao u izrUkupno()");
        var danOd;
        danOd = document.getElementById("danOd");
        var danOd = danOd.options[danOd.selectedIndex].value;
        var mesecOd;
        mesecOd = document.getElementById("mesecOd");
        var mesecOd = mesecOd.options[mesecOd.selectedIndex].value;
        var godinaOd;
        godinaOd = document.getElementById("godinaOd");
        var godinaOd = godinaOd.options[godinaOd.selectedIndex].value;
        var datumOd = danOd + "-" + mesecOd + "-" + godinaOd;
        var pattern = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;
        var danDo;
        danDo = document.getElementById("danDo");
        var danDo = danDo.options[danDo.selectedIndex].value;
        var mesecDo;
        mesecDo = document.getElementById("mesecDo");
        var mesecDo = mesecDo.options[mesecDo.selectedIndex].value;
        var godinaDo;
        godinaDo = document.getElementById("godinaDo");
        var godinaDo = godinaDo.options[godinaDo.selectedIndex].value;
        var datumDo = danDo + "-" + mesecDo + "-" + godinaDo;
        if (!pattern.test(datumOd) || !pattern.test(datumDo)) {
            this.losDatum1 = true;
            setTimeout(function () {
                _this.losDatum1 = false;
            }, 5000);
            return;
        }
        else {
            datumOd = mesecOd + "-" + danOd + "-" + godinaOd;
            datumDo = mesecDo + "-" + danDo + "-" + godinaDo;
            var datDo = new Date(datumDo);
            var datOd = new Date(datumOd);
            var rashodiPeriod = this.rashodiLista.filter(function (x) { return new Date(_this.format(x.datum)).valueOf() >= datOd.valueOf(); });
            rashodiPeriod = rashodiPeriod.filter(function (x) { return new Date(_this.format(x.datum)).valueOf() <= datDo.valueOf(); });
            var prihodiPeriod = this.prihodiLista.filter(function (x) { return new Date(_this.format(x.datum)).valueOf() >= datOd.valueOf(); });
            prihodiPeriod = prihodiPeriod.filter(function (x) { return new Date(_this.format(x.datum)).valueOf() <= datDo.valueOf(); });
            for (var i = 0; i < prihodiPeriod.length; i++)
                this.ukupnoPrihodaPeriod += prihodiPeriod[i].iznos;
            for (var i = 0; i < rashodiPeriod.length; i++)
                this.ukupnoRashodaPeriod += rashodiPeriod[i].iznos;
            this.ukupnoStatus = this.ukupnoPrihodaPeriod - this.ukupnoRashodaPeriod;
            if (prihodiPeriod.length > 0 || rashodiPeriod.length > 0) {
                if (this.lang == 'srb') {
                    this.zaradaDoughnutChartLabels.push("prihod");
                    this.zaradaDoughnutChartLabels.push("rashod");
                }
                else {
                    this.zaradaDoughnutChartLabels.push("income");
                    this.zaradaDoughnutChartLabels.push("expense");
                }
                this.zaradaDoughnutChartData.push(this.ukupnoPrihodaPeriod);
                this.zaradaDoughnutChartData.push(this.ukupnoRashodaPeriod);
                this.zaradaDoughChart = true;
            }
        }
    };
    FinanceComponent.prototype.format = function (inputDate) {
        var date = new Date(inputDate);
        return date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear();
    };
    FinanceComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-finance',
            template: __webpack_require__(777),
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _c) || Object])
    ], FinanceComponent);
    return FinanceComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=finance.component.js.map

/***/ }),

/***/ 362:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Rx__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Rx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ForecastComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ForecastComponent = (function () {
    function ForecastComponent(cdr, http, localStorageService, router, permService) {
        this.cdr = cdr;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.permService = permService;
        this.ortBy = "name";
        this.month = ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Jun', 'Jul', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'];
        this.imaPodataka = false;
        this.isOwner = false;
        this.podaciTrazeni = false;
        this.statistika = false;
        this.uniquePlantsExp = [];
        this.vidljivost = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.pieChartType = 'pie';
        this.parcelaVidljiva = false;
        this.plantazaVidljiva = true;
        this.INF = 99999;
        this.gleda = false;
        this.sideBarVidljiv = false;
        this.sideBarImanje = false;
        this.prikazImanja = false;
        this.mojePlantazeVidljiv = true;
        this.mojaImanjaVidljiv = false;
        this.prognozaVidljiva = false;
        this.meniVidljiv = false;
        //stats: any;
        this.bojePoligona = [];
        this.postojiUBazi = false;
        this.poslatZahtev = false;
        /*private options: any = {
          legend: { position: 'left' , labels: {boxWidth: 10, fontSize: 10}}
        };*/
        this.mapProp = null;
        this.map = null;
        this.drawingManager = null;
        this.prikaz = true;
        this.trenutni = -1;
        this.trenutnoImanje = -1;
        this.obavestenjaStigla = false;
        this.brojCrvenih = [];
        this.brojZutih = [];
        this.newCss = false;
        this.lang = "srb";
        this.meniMultiLang = {
            "srb": [
                { "num": "0", "text": "Moje Plantaze" },
                { "num": "1", "text": " Moja imanja" },
                { "num": "2", "text": "Lista mojih plantaza" },
                { "num": "3", "text": "Naziv plantaze" },
                { "num": "4", "text": "Vlasnik" },
                { "num": "5", "text": "Opcije" },
                { "num": "6", "text": "Lista mojih imanja" },
                { "num": "7", "text": "Naziv imanja" },
                { "num": "8", "text": "Opcije" },
                { "num": "9", "text": "Statistika" },
                { "num": "10", "text": "Azuriranje" },
                { "num": "11", "text": "Brisanje plantaze" },
                { "num": "12", "text": "Prethodna" },
                { "num": "13", "text": "Sledeca" },
                { "num": "14", "text": "Prikaz imanja" },
                { "num": "15", "text": "Azuriranje imanja" },
                { "num": "16", "text": "Brisanje imanja" },
                { "num": "17", "text": "nazad na spisak imanja" },
                { "num": "18", "text": "Nazad na spisak plantaza" },
                { "num": "19", "text": "Grafik nutricionistickih vrednosti" },
                { "num": "20", "text": "Grafik vlaznosti zemljista" },
                { "num": "21", "text": "Grafik temperature" },
                { "num": "22", "text": "trazenoj parceli trenutno nema statistickih podataka. Podaci se dobijaju svakoh dana u 23:30  i 11:30. Da bi dobili podatke morate povezati vasu plantazu sa meracem." },
                { "num": "23", "text": "Da li ste sigurni da zelite da obrisete plantazu?" },
                { "num": "24", "text": "Potvrdi" },
                { "num": "25", "text": "Da li ste sigurni da zelite da obrisete imanje?" },
                { "num": "26", "text": " Trenutno pristupate kao gost." },
                { "num": "27", "text": " Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti" },
                { "num": "28", "text": "kao vlasnik ili kontaktirati Vašeg vlasnika. Za više informacija obratite se administratoru sistema." },
                { "num": "29", "text": " Vas zahtev je poslat adminu." },
                { "num": "30", "text": " Vas zahtev je vec poslat adminu." },
                { "num": "31", "text": "Posalji zahtev" },
                { "num": "32", "text": "Vlaznost vazduha" },
                { "num": "33", "text": "Posejana vrsta" },
                { "num": "34", "text": "Podvrsta" },
                { "num": "35", "text": "Proizvodjac" },
                { "num": "36", "text": "Pretraga Imanja" },
                { "num": "37", "text": "Plantaze na imanju:" },
                { "num": "38", "text": "Naziv plantaze" },
                { "num": "39", "text": "Boja" },
                { "num": "40", "text": "Vreme" },
                { "num": "41", "text": "Vlaznost vazduha" },
                { "num": "42", "text": "Vlaznost zemljista" },
                { "num": "43", "text": "Posalji zahtev za vlasnistvo" },
                { "num": "44", "text": "Imanja" },
            ],
            "eng": [
                { "num": "0", "text": "My plantation" },
                { "num": "1", "text": "My Properties" },
                { "num": "2", "text": "List of my plantations" },
                { "num": "3", "text": "Plantation name" },
                { "num": "4", "text": "Username of plantation owner" },
                { "num": "5", "text": "Options" },
                { "num": "6", "text": "List of my properties" },
                { "num": "7", "text": "Property name" },
                { "num": "8", "text": "Options" },
                { "num": "9", "text": "Statistics" },
                { "num": "10", "text": "Update plantation" },
                { "num": "11", "text": "Delete plantation" },
                { "num": "12", "text": "Back" },
                { "num": "13", "text": "Next" },
                { "num": "14", "text": "Show property" },
                { "num": "15", "text": "Update property" },
                { "num": "16", "text": "Delete property" },
                { "num": "17", "text": "Back to list of my properties" },
                { "num": "18", "text": "Back to list of my plantations" },
                { "num": "19", "text": "Chart of nutritional values" },
                { "num": "20", "text": "Chart of soil moisture" },
                { "num": "21", "text": "Temperature chart" },
                { "num": "22", "text": "Required plantation currently has no statistical data. Data is received each day between 23:30 and 11:30. To get the information you need to connect your plantation to a sensor." },
                { "num": "23", "text": "Are you sure you want to delete plantation?" },
                { "num": "24", "text": "Confirm" },
                { "num": "25", "text": "Are you sure you want to delete property?" },
                { "num": "26", "text": "You are currently logged as guest." },
                { "num": "27", "text": "Much of the applications is disabled to you. To get access to all functionalities you must subscribe" },
                { "num": "28", "text": "As the owner or contact another owner. For more information, contact your system administrator." },
                { "num": "29", "text": "Your request has been sent" },
                { "num": "30", "text": "Your request has already been sent" },
                { "num": "31", "text": "Send request" },
                { "num": "32", "text": "Air humidity" },
                { "num": "33", "text": "Type" },
                { "num": "34", "text": "Subtype" },
                { "num": "35", "text": "Manufacturer" },
                { "num": "36", "text": "Search properties" },
                { "num": "37", "text": "Plantations on property" },
                { "num": "38", "text": "Plantation name" },
                { "num": "39", "text": "Color" },
                { "num": "40", "text": "Weather" },
                { "num": "41", "text": "Air humidity" },
                { "num": "42", "text": "soil moisture" },
                { "num": "43", "text": "Send request for ownership" },
                { "num": "44", "text": "Parcel" },
            ]
        };
    }
    //prognoza
    ForecastComponent.prototype.uzmiPodatkeOPrognozi = function () {
        var _this = this;
        var dayName;
        console.log(this.centerY + " : " + this.centerX);
        this.http.get("http://api.openweathermap.org/data/2.5/forecast?lat=" + this.centerY + "&lon=" + this.centerX + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (_this.lang[0]["lang"] == "srb" || _this.lang == "srb") {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Ned";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Pon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Uto";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Sre";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Cet";
                    if (_this.day == 5)
                        dayName = "Pet";
                    if (_this.day == 6)
                        dayName = "Sub";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            else {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Sun";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Mon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Tue";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Wen";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Thu";
                    if (_this.day == 5)
                        dayName = "Fri";
                    if (_this.day == 6)
                        dayName = "Sat";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            _this.temperaturaProg = data["list"];
            _this.prognozaDan1min = _this.temperaturaProg[2];
            _this.prognozaDan1max = _this.temperaturaProg[5];
            _this.prognozaDan2min = _this.temperaturaProg[10];
            _this.prognozaDan2max = _this.temperaturaProg[13];
            _this.prognozaDan3min = _this.temperaturaProg[18];
            _this.prognozaDan3max = _this.temperaturaProg[21];
            _this.prognozaDan4min = _this.temperaturaProg[26];
            _this.prognozaDan4max = _this.temperaturaProg[29];
            console.log(_this.prognozaDan1min);
            _this.promeniIkonePrognoza();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ForecastComponent.prototype.uzmiPodatkeOPrognoziGost = function () {
        var _this = this;
        var dayName;
        this.http.get("http://api.openweathermap.org/data/2.5/forecast?lat=" + this.lokacija["latitude"] + "&lon=" + this.lokacija["longitude"] + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (_this.lang[0]["lang"] == "srb" || _this.lang == "srb") {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Ned";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Pon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Uto";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Sre";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Cet";
                    if (_this.day == 5)
                        dayName = "Pet";
                    if (_this.day == 6)
                        dayName = "Sub";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            else {
                for (var i = 0; i < 4; i++) {
                    _this.day++;
                    if (_this.day == 7)
                        dayName = "Sun";
                    if (_this.day == 1 || _this.day == 8)
                        dayName = "Mon";
                    if (_this.day == 2 || _this.day == 9)
                        dayName = "Tue";
                    if (_this.day == 3 || _this.day == 10)
                        dayName = "Wen";
                    if (_this.day == 4 || _this.day == 11)
                        dayName = "Thu";
                    if (_this.day == 5)
                        dayName = "Fri";
                    if (_this.day == 6)
                        dayName = "Sat";
                    if (i == 0)
                        _this.prognozaDan1 = dayName;
                    if (i == 1)
                        _this.prognozaDan2 = dayName;
                    if (i == 2)
                        _this.prognozaDan3 = dayName;
                    if (i == 3)
                        _this.prognozaDan4 = dayName;
                    console.log(dayName);
                    console.log(_this.day);
                }
            }
            _this.temperaturaProg = data["list"];
            _this.prognozaDan1min = _this.temperaturaProg[2];
            _this.prognozaDan1max = _this.temperaturaProg[5];
            _this.prognozaDan2min = _this.temperaturaProg[10];
            _this.prognozaDan2max = _this.temperaturaProg[13];
            _this.prognozaDan3min = _this.temperaturaProg[18];
            _this.prognozaDan3max = _this.temperaturaProg[21];
            _this.prognozaDan4min = _this.temperaturaProg[26];
            _this.prognozaDan4max = _this.temperaturaProg[29];
            console.log(_this.prognozaDan1min);
            _this.promeniIkonePrognoza();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ForecastComponent.prototype.uzmiPodatkeOTemperaturi = function () {
        var _this = this;
        if (this.lang[0]["lang"] == "srb" || this.lang == "srb") {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.centerY + "&lon=" + this.centerX + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7&lang=hr")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
                _this.http.get("/stats/ubaciTemp/" + _this.izabranaPlantaza.id + "/" + _this.temperatura.main.temp).map(function (res) { return res.json(); }).subscribe(function (dat) {
                    if (_this.statistika) {
                        _this.statistika = false;
                        _this.uzmiPodatkeOTemperaturiStat();
                    }
                });
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
        else {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.centerY + "&lon=" + this.centerX + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
                _this.http.get("/stats/ubaciTemp/" + _this.izabranaPlantaza.id + "/" + _this.temperatura.main.temp).map(function (res) { return res.json(); }).subscribe(function (dat) {
                    if (_this.statistika) {
                        _this.statistika = false;
                        _this.uzmiPodatkeOTemperaturiStat();
                    }
                });
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
    };
    ForecastComponent.prototype.uzmiPodatkeOTemperaturiGost = function () {
        var _this = this;
        if (this.lang[0]["lang"] == "srb" || this.lang == "srb") {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.lokacija["latitude"] + "&lon=" + this.lokacija["longitude"] + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7&lang=hr")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
        else {
            this.http.get("http://api.openweathermap.org/data/2.5/weather?lat=" + this.lokacija["latitude"] + "&lon=" + this.lokacija["longitude"] + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.temperatura = data;
                console.log(_this.temperatura);
                _this.promeniIkone();
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }
    };
    ForecastComponent.prototype.promeniIkone = function () {
        if (this.temperatura.weather[0].icon == "01d")
            this.temperatura.weather[0].icon = "wi-day-sunny";
        if (this.temperatura.weather[0].icon == "01n")
            this.temperatura.weather[0].icon = "wi-night-clear";
        if (this.temperatura.weather[0].icon == "02d")
            this.temperatura.weather[0].icon = "wi-day-cloudy";
        if (this.temperatura.weather[0].icon == "02n")
            this.temperatura.weather[0].icon = "wi-night-alt-cloudy";
        if (this.temperatura.weather[0].icon == "03d")
            this.temperatura.weather[0].icon = "wi-cloud";
        if (this.temperatura.weather[0].icon == "03n")
            this.temperatura.weather[0].icon = "wi-cloud";
        if (this.temperatura.weather[0].icon == "04d")
            this.temperatura.weather[0].icon = "wi-cloudy";
        if (this.temperatura.weather[0].icon == "04n")
            this.temperatura.weather[0].icon = "wi-cloudy";
        if (this.temperatura.weather[0].icon == "09d")
            this.temperatura.weather[0].icon = "wi-day-showers";
        if (this.temperatura.weather[0].icon == "09n")
            this.temperatura.weather[0].icon = "wi-night-showers";
        if (this.temperatura.weather[0].icon == "10d")
            this.temperatura.weather[0].icon = "wi-day-rain";
        if (this.temperatura.weather[0].icon == "10n")
            this.temperatura.weather[0].icon = "wi-night-alt-rain";
        if (this.temperatura.weather[0].icon == "11d")
            this.temperatura.weather[0].icon = "wi-day-thunderstorm";
        if (this.temperatura.weather[0].icon == "11n")
            this.temperatura.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.temperatura.weather[0].icon == "13d")
            this.temperatura.weather[0].icon = "wi-day-snow";
        if (this.temperatura.weather[0].icon == "13n")
            this.temperatura.weather[0].icon = "wi-night-alt-snow";
        if (this.temperatura.weather[0].icon == "50d")
            this.temperatura.weather[0].icon = "wi-day-fog";
        if (this.temperatura.weather[0].icon == "50n")
            this.temperatura.weather[0].icon = "wi-night-fog";
    };
    ForecastComponent.prototype.promeniIkonePrognoza = function () {
        if (this.prognozaDan1min.weather[0].icon == "01d")
            this.prognozaDan1min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan1min.weather[0].icon == "01n")
            this.prognozaDan1min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan1min.weather[0].icon == "02d")
            this.prognozaDan1min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "02n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "03d")
            this.prognozaDan1min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan1min.weather[0].icon == "03n")
            this.prognozaDan1min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan1min.weather[0].icon == "04d")
            this.prognozaDan1min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "04n")
            this.prognozaDan1min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan1min.weather[0].icon == "09d")
            this.prognozaDan1min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan1min.weather[0].icon == "09n")
            this.prognozaDan1min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan1min.weather[0].icon == "10d")
            this.prognozaDan1min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan1min.weather[0].icon == "10n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan1min.weather[0].icon == "11d")
            this.prognozaDan1min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan1min.weather[0].icon == "11n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan1min.weather[0].icon == "13d")
            this.prognozaDan1min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan1min.weather[0].icon == "13n")
            this.prognozaDan1min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan1min.weather[0].icon == "50d")
            this.prognozaDan1min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan1min.weather[0].icon == "50n")
            this.prognozaDan1min.weather[0].icon = "wi-night-fog";
        if (this.prognozaDan2min.weather[0].icon == "01d")
            this.prognozaDan2min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan2min.weather[0].icon == "01n")
            this.prognozaDan2min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan2min.weather[0].icon == "02d")
            this.prognozaDan2min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "02n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "03d")
            this.prognozaDan2min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan2min.weather[0].icon == "03n")
            this.prognozaDan2min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan2min.weather[0].icon == "04d")
            this.prognozaDan2min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "04n")
            this.prognozaDan2min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan2min.weather[0].icon == "09d")
            this.prognozaDan2min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan2min.weather[0].icon == "09n")
            this.prognozaDan2min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan2min.weather[0].icon == "10d")
            this.prognozaDan2min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan2min.weather[0].icon == "10n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan2min.weather[0].icon == "11d")
            this.prognozaDan2min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan2min.weather[0].icon == "11n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan2min.weather[0].icon == "13d")
            this.prognozaDan2min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan2min.weather[0].icon == "13n")
            this.prognozaDan2min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan2min.weather[0].icon == "50d")
            this.prognozaDan2min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan2min.weather[0].icon == "50n")
            this.prognozaDan2min.weather[0].icon = "wi-night-fog";
        if (this.prognozaDan3min.weather[0].icon == "01d")
            this.prognozaDan3min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan3min.weather[0].icon == "01n")
            this.prognozaDan3min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan3min.weather[0].icon == "02d")
            this.prognozaDan3min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "02n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "03d")
            this.prognozaDan3min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan3min.weather[0].icon == "03n")
            this.prognozaDan3min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan3min.weather[0].icon == "04d")
            this.prognozaDan3min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "04n")
            this.prognozaDan3min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan3min.weather[0].icon == "09d")
            this.prognozaDan3min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan3min.weather[0].icon == "09n")
            this.prognozaDan3min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan3min.weather[0].icon == "10d")
            this.prognozaDan3min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan3min.weather[0].icon == "10n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan3min.weather[0].icon == "11d")
            this.prognozaDan3min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan3min.weather[0].icon == "11n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan3min.weather[0].icon == "13d")
            this.prognozaDan3min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan3min.weather[0].icon == "13n")
            this.prognozaDan3min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan3min.weather[0].icon == "50d")
            this.prognozaDan3min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan3min.weather[0].icon == "50n")
            this.prognozaDan3min.weather[0].icon = "wi-night-fog";
        if (this.prognozaDan4min.weather[0].icon == "01d")
            this.prognozaDan4min.weather[0].icon = "wi-day-sunny";
        if (this.prognozaDan4min.weather[0].icon == "01n")
            this.prognozaDan4min.weather[0].icon = "wi-night-clear";
        if (this.prognozaDan4min.weather[0].icon == "02d")
            this.prognozaDan4min.weather[0].icon = "wi-day-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "02n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "03d")
            this.prognozaDan4min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan4min.weather[0].icon == "03n")
            this.prognozaDan4min.weather[0].icon = "wi-cloud";
        if (this.prognozaDan4min.weather[0].icon == "04d")
            this.prognozaDan4min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "04n")
            this.prognozaDan4min.weather[0].icon = "wi-cloudy";
        if (this.prognozaDan4min.weather[0].icon == "09d")
            this.prognozaDan4min.weather[0].icon = "wi-day-showers";
        if (this.prognozaDan4min.weather[0].icon == "09n")
            this.prognozaDan4min.weather[0].icon = "wi-night-showers";
        if (this.prognozaDan4min.weather[0].icon == "10d")
            this.prognozaDan4min.weather[0].icon = "wi-day-rain";
        if (this.prognozaDan4min.weather[0].icon == "10n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-rain";
        if (this.prognozaDan4min.weather[0].icon == "11d")
            this.prognozaDan4min.weather[0].icon = "wi-day-thunderstorm";
        if (this.prognozaDan4min.weather[0].icon == "11n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-thunderstorm";
        if (this.prognozaDan4min.weather[0].icon == "13d")
            this.prognozaDan4min.weather[0].icon = "wi-day-snow";
        if (this.prognozaDan4min.weather[0].icon == "13n")
            this.prognozaDan4min.weather[0].icon = "wi-night-alt-snow";
        if (this.prognozaDan4min.weather[0].icon == "50d")
            this.prognozaDan4min.weather[0].icon = "wi-day-fog";
        if (this.prognozaDan4min.weather[0].icon == "50n")
            this.prognozaDan4min.weather[0].icon = "wi-night-fog";
    };
    ForecastComponent.prototype.kelvinToCelsius = function (temp) {
        return Math.round((temp - 273.15) * 100) / 100;
    };
    ForecastComponent.prototype.uzmiPodatkeOTemperaturiStat = function () {
        var _this = this;
        console.log(this.centerY + " : " + this.centerX);
        this.http.get("stats/tempStat/" + this.izabranaPlantaza.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.temperaturaStat = data;
            var datac = [];
            var labels = [];
            if (data == false)
                return;
            console.log("!");
            console.log(_this.temperaturaStat);
            for (var i = 0; i < _this.temperaturaStat.length; i++) {
                datac.push(_this.temperaturaStat[i].value);
                labels.push(_this.temperaturaStat[i].date);
            }
            _this.vidljivostRadar = true;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ForecastComponent.prototype.vratiNaPrikaz = function () {
        this.sideBarVidljiv = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.podaciTrazeni = false;
        this.imaPodataka = false;
    };
    ForecastComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selectedLang = this.meniMultiLang[this.lang];
        this.d = new Date();
        this.date = this.d.getDate();
        this.day = this.d.getDay();
        this.mon = this.month[this.d.getMonth()];
        this.localStorageService.remove("guest");
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
            if (_this.dozvole.guest != undefined)
                _this.localStorageService.set("guest", _this.dozvole.guest);
            if (_this.dozvole.guest == true) {
            }
            _this.http.get("permisions/userIsOwner")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.isOwner = data.owner;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            _this.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                _this.uzmiLang();
                _this.http.get('//freegeoip.net/json/?callback')
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.lokacija = data;
                    console.log(_this.lokacija);
                    _this.uzmiPodatkeOTemperaturiGost();
                    _this.uzmiPodatkeOPrognoziGost();
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        });
    };
    ForecastComponent.prototype.uzmiDozvoleKodVlasnika = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.dozvoleKodVlasnika = data;
            if (_this.imanja === undefined || _this.dozvoleKodVlasnika === undefined || _this.dozvoleKodVlasnika.dozvole === undefined)
                return;
            for (var i = 0; i < _this.imanja.length; i++) {
                _this.imanja[i].dozvole = _this.dozvoleKodVlasnika.dozvole.find(function (x) { return x.vlasnik == _this.imanja[i].idOwner; });
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ForecastComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ForecastComponent.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ForecastComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-forecast',
            template: __webpack_require__(778),
            styles: [__webpack_require__(739)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */]) === 'function' && _e) || Object])
    ], ForecastComponent);
    return ForecastComponent;
    var _a, _b, _c, _d, _e;
}());
//# sourceMappingURL=forecast.component.js.map

/***/ }),

/***/ 363:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_jquery__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomeComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var HomeComponent = (function () {
    function HomeComponent(permService, http, localStorageService, router) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.poslato = false;
        this.lang = "srb";
        this.nisuPopunjeniPodaci = false;
        this.hideE = "hide";
        this.meniMultiLang = {
            "srb": [
                /*0*/ { "Dobro dosli na": "Dobro došli na" },
                /*1*/ { "Pridruzite nam se i pocnite organizaciju vasih imanja": "Pridružite nam se i počnite organizaciju vaših imanja" },
                /*2*/ { "Prijavi se!": "Prijavi se!" },
                /*3*/ { "Home": "Home" },
                /*4*/ { "Aplikacija": "Aplikacija" },
                /*5*/ { "Servisi": "Servisi" },
                /*6*/ { "O nama": "O nama" },
                /*7*/ { "Kontakt": "Kontakt" },
                /*8*/ { "Opis": "Uz pomoć naše aplikacije možete vrlo lako i brzo voditi evidenciju o svim svojim plantažama i radnicima" },
                /*9*/ { "Opis2": "Uz sve to na raspolaganju vam je i naš pametni expertni sistem koji će vam dosta pomoći u radu" },
                /*10*/ { "Opis3": "Cela aplikacija se isto može koristi na svim vašim uređajima od računara do vašeg pametnog telefona" },
                /*11*/ { "servisi": "servisi" },
                /*12*/ { "Servisi aplikacije": "Servisi aplikacije" },
                /*13*/ { "Pronadjite nas na svim aktuelnim drustvenim mrezama": "Pronađite nas na svim aktuelnim drustvenim mrezama" },
                /*14*/ { "Ili nam pustite poruku klikom na pismo u sredini": "Ili nam pustite poruku klikom na pismo u sredini" },
                /*15*/ { "Vrati me na socijalne mreze": "Vrati me na socijalne mreze" },
                /*16*/ { "Kontaktirajte nas": "Kontaktirajte nas" },
                /*17*/ { "Ime": "Ime" },
                /*18*/ { "Naslov": " Naslov" },
                /*19*/ { "Vas E-Mail": " Vas E-Mail" },
                /*20*/ { "Poruka": " Poruka" },
                /*21*/ { "Pošalji": "Pošalji" },
                /*22*/ { "Izadji": "Izađi" },
                /*23*/ { "O aplikaciji": "O aplikaciji" },
                /*24*/ { "Dizajnirano za brzo i lako korišćenje": "Dizajnirano za brzo i lako korišćenje" },
                /*25*/ { "Dostupno na svakom uredjaju": "Dostupno na svakom uređaju" },
                /*26*/ { "Brzo i lako korišćenje": "Brzo i lako korišćenje" },
                /*27*/ { "Lak pregled plantaža na mapi": "Lak pregled plantaža na mapi" },
                /*28*/ { "Statistika svih plantaža": "Statistika svih plantaža" },
                /*29*/ { "Vremenska prognoza": "Vremenska prognoza" },
                /*30*/ { "Kontakt sa svim radnicima": "Kontakt sa svim radnicima" },
                /*31*/ { "Brza pretraga plantaža i radnika": "Brza pretraga plantaža i radnika" },
                /*32*/ { "Pametan expertski sistem": "Pametan expertski sistem" },
                /*33*/ { "Upoznajte naš tim": "Upoznajte naš tim" },
            ],
            "eng": [
                /*0*/ { "Dobro dosli na": "Welcome to" },
                /*1*/ { "Pridruzite nam se i pocnite organizaciju vasih imanja": "Join us today and start organizing your plantations" },
                /*2*/ { "Prijavi se!": "Sing up!" },
                /*3*/ { "Home": "Home" },
                /*4*/ { "Aplikacija": "Application" },
                /*5*/ { "Servisi": "Services" },
                /*6*/ { "O nama": "About us" },
                /*7*/ { "Kontakt": "Contact" },
                /*8*/ { "Opis": "With the help of our application you can easily and quickly keep a record of all its plantations and workers" },
                /*9*/ { "Opis2": "With all this at your disposal is our smart Expert system that will help a lot in the work" },
                /*10*/ { "Opis3": "Whole Application can also be used on all of your devices from your computer to your smartphone" },
                /*11*/ { "servisi": "Services" },
                /*12*/ { "Servisi aplikacije": "Application services" },
                /*13*/ { "Pronadjite nas na svim aktuelnim drustvenim mrezama": "Find us on all current social networks" },
                /*14*/ { "Ili nam pustite poruku klikom na pismo u sredini": "Or leave us a message by clicking on the letter in the middle" },
                /*15*/ { "Vrati me na socijalne mreze": "back to social media" },
                /*16*/ { "Kontaktirajte nas": "Kontaktirajte nas" },
                /*17*/ { "Ime": "Name" },
                /*18*/ { "Naslov": "Subject" },
                /*19*/ { "Vas E-Mail": "Email" },
                /*20*/ { "Poruka": "Text" },
                /*21*/ { "Pošalji": "Send" },
                /*22*/ { "Izadji": "Exit" },
                /*23*/ { "O aplikaciji": "About application" },
                /*24*/ { "Dizajnirano za brzo i lako korišćenje": "Dizajnirano za brzo i lako korišćenje" },
                /*25*/ { "Dostupno na svakom uredjaju": "Available on any device" },
                /*26*/ { "Brzo i lako korišćenje": "Quick and easy to use" },
                /*27*/ { "Lak pregled plantaža na mapi": "Easy viewing plantation on the map" },
                /*28*/ { "Statistika svih plantaža": "Statistics of plantations" },
                /*29*/ { "Vremenska prognoza": "Weather Forecast" },
                /*30*/ { "Kontakt sa svim radnicima": "Contact with all employees" },
                /*31*/ { "Brza pretraga plantaža i radnika": "Quick Search of plantation and workers" },
                /*32*/ { "Pametan expertski sistem": "Smart system" },
                /*33*/ { "Upoznajte naš tim": "Meet our teem" },
            ],
        };
        console.log(this.router.url);
    }
    HomeComponent.prototype.onScroll = function (newValue) {
    };
    HomeComponent.prototype.ngAfterViewInit = function () {
        console.log(this.lang);
        __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').find('a').click(function (event) {
            event.preventDefault();
        });
        __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').find('li').hover(function () {
            __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').find('li').removeClass('active');
            __WEBPACK_IMPORTED_MODULE_5_jquery__(this).addClass('active');
            if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 0)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Dostupno na svakom uređaju');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 1)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Brzo i lako korišćenje');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 2)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Lak pregled plantaža na mapi');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 3)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Statistika svih plantaža');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 4)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Vremenska prognoza');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 5)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Kontakt sa svim radnicima');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 6)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Brza pretraga plantaža i radnika');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 7)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-container').attr('data-content', 'Pametan sistem');
            /*if(this.lang=="eng")
            {
                if(jQuery(this).data('id')==0)
                      jQuery('.circle-container').attr('data-content','Available on any device');
                else	if(jQuery(this).data('id')==1)
                    jQuery('.circle-container').attr('data-content','Quick and easy to use');
                else if(jQuery(this).data('id')==2)
                    jQuery('.circle-container').attr('data-content','Easy viewing plantation on the map');
                else if(jQuery(this).data('id')==3)
                    jQuery('.circle-container').attr('data-content','Statistics of plantations');
                else if(jQuery(this).data('id')==4)
                    jQuery('.circle-container').attr('data-content','Weather Forecast');
                else if(jQuery(this).data('id')==5)
                    jQuery('.circle-container').attr('data-content','Contact with all employees');
                else if(jQuery(this).data('id')==6)
                    jQuery('.circle-container').attr('data-content','Quick Search of plantation and workers');
                else if(jQuery(this).data('id')==7)
                    jQuery('.circle-container').attr('data-content','Smart system');
            }*/
        });
        __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').find('a').click(function (event) {
            event.preventDefault();
        });
        __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').find('li').hover(function () {
            __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').find('li').removeClass('active');
            __WEBPACK_IMPORTED_MODULE_5_jquery__(this).addClass('active');
            if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 0)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Available on any device');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 9)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Quick and easy to use');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 2)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Easy viewing plantation on the map');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 3)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Statistics of plantations');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 4)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Weather Forecast');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 5)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Contact with all employees');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 6)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Quick Search of plantation and workers');
            else if (__WEBPACK_IMPORTED_MODULE_5_jquery__(this).data('id') == 7)
                __WEBPACK_IMPORTED_MODULE_5_jquery__('.circle-containerEng').attr('data-content', 'Smart system');
            /*if(this.lang=="eng")
            {
                if(jQuery(this).data('id')==0)
                      jQuery('.circle-container').attr('data-content','Available on any device');
                else	if(jQuery(this).data('id')==1)
                    jQuery('.circle-container').attr('data-content','Quick and easy to use');
                else if(jQuery(this).data('id')==2)
                    jQuery('.circle-container').attr('data-content','Easy viewing plantation on the map');
                else if(jQuery(this).data('id')==3)
                    jQuery('.circle-container').attr('data-content','Statistics of plantations');
                else if(jQuery(this).data('id')==4)
                    jQuery('.circle-container').attr('data-content','Weather Forecast');
                else if(jQuery(this).data('id')==5)
                    jQuery('.circle-container').attr('data-content','Contact with all employees');
                else if(jQuery(this).data('id')==6)
                    jQuery('.circle-container').attr('data-content','Quick Search of plantation and workers');
                else if(jQuery(this).data('id')==7)
                    jQuery('.circle-container').attr('data-content','Smart system');
            }*/
        });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".twitter").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-twitter"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".facebook").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-facebook"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".googleplus").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-googleplus"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".pinterest").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-pinterest"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".dribbble").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-dribbble"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".instagram").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-instagram"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".codepen").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-codepen"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".envelope").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-envelope"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".linkedin").hover(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page-5 .skw-page__half--right .skw-page__content").toggleClass("color-linkedin"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".envelope").click(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__("#social").addClass("not-visible"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(".envelope").click(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__("#contact").removeClass("not-visible"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__("#backToSocial").click(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__("#contact").addClass("not-visible"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__("#backToSocial").click(function () { __WEBPACK_IMPORTED_MODULE_5_jquery__("#social").removeClass("not-visible"); });
        __WEBPACK_IMPORTED_MODULE_5_jquery__('#proba').click(function () {
        });
        __WEBPACK_IMPORTED_MODULE_5_jquery__(document).ready(function () {
            $("body").css('background-color', 'white');
            $(".bb").css('background-color', 'white');
            __WEBPACK_IMPORTED_MODULE_5_jquery__('.one').click(function () {
                scrolling = true;
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 1).addClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 2).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 3).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 4).removeClass("active");
                setTimeout(function () {
                    scrolling = false;
                }, animTime);
            });
            __WEBPACK_IMPORTED_MODULE_5_jquery__('.two').click(function () {
                scrolling = true;
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 2).addClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 1).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 3).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 4).removeClass("active");
                setTimeout(function () {
                    scrolling = false;
                }, animTime);
            });
            __WEBPACK_IMPORTED_MODULE_5_jquery__('.three').click(function () {
                scrolling = true;
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 2).addClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 1).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 3).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 4).removeClass("active");
                setTimeout(function () {
                    scrolling = false;
                }, animTime);
            });
            __WEBPACK_IMPORTED_MODULE_5_jquery__('.four').click(function () {
                scrolling = true;
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 3).addClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 1).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 2).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 4).removeClass("active");
                setTimeout(function () {
                    scrolling = false;
                }, animTime);
            });
            __WEBPACK_IMPORTED_MODULE_5_jquery__('.five').click(function () {
                scrolling = true;
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 4).addClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 1).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 2).removeClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + 3).removeClass("active");
                setTimeout(function () {
                    scrolling = false;
                }, animTime);
            });
            var curPage = 1;
            var numOfPages = __WEBPACK_IMPORTED_MODULE_5_jquery__(".skw-page").length;
            var animTime = 1000;
            var scrolling = false;
            var pgPrefix = ".skw-page-";
            function pagination() {
                scrolling = true;
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + curPage).removeClass("inactive").addClass("active");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + (curPage - 1)).addClass("inactive");
                __WEBPACK_IMPORTED_MODULE_5_jquery__(pgPrefix + (curPage + 1)).removeClass("active");
                setTimeout(function () {
                    scrolling = false;
                }, animTime);
            }
            ;
            function navigateUp() {
                if (curPage === 1)
                    return;
                curPage--;
                pagination();
            }
            ;
            function navigateDown() {
                if (curPage === numOfPages)
                    return;
                curPage++;
                pagination();
            }
            ;
            //Firefox
            $('.skw-pages').bind('DOMMouseScroll', function (e) {
                if (e.originalEvent.detail > 0) {
                    navigateDown();
                    console.log('Down');
                }
                else {
                    navigateUp();
                    console.log('Up');
                }
                //prevent page fom scrolling
                return false;
            });
            //IE, Opera, Safari
            $('.skw-pages').bind('mousewheel', function (e) {
                if (e.originalEvent.wheelDelta < 0) {
                    navigateDown();
                    console.log('Down');
                }
                else {
                    navigateUp();
                    console.log('Up');
                }
                //prevent page fom scrolling
                return false;
            });
            __WEBPACK_IMPORTED_MODULE_5_jquery__(document).on("keydown", function (e) {
                if (scrolling)
                    return;
                if (e.which === 38) {
                    navigateUp();
                }
                else if (e.which === 40) {
                    navigateDown();
                }
            });
        });
    };
    HomeComponent.prototype.ngOnInit = function () {
        var i;
        if (this.localStorageService.get("homeLang") !== null) {
            i = this.localStorageService.get("homeLang");
            this.selectedLang = this.meniMultiLang[i];
            this.lang = i;
            if (this.lang == "srb") {
                this.hideE = "hide";
                this.hideS = "";
            }
            else {
                this.hideE = "";
                this.hideS = "hide";
            }
        }
        else
            this.selectedLang = this.meniMultiLang[this.lang];
        this.localStorageService.set("logged", false);
    };
    HomeComponent.prototype.setLang = function (setLang) {
        this.lang = setLang;
        if (this.lang == "srb") {
            this.hideE = "hide";
            this.hideS = "";
        }
        else {
            this.hideE = "";
            this.hideS = "hide";
        }
        this.selectedLang = this.meniMultiLang[this.lang];
        this.localStorageService.set("homeLang", this.lang);
    };
    HomeComponent.prototype.posalji = function () {
        var _this = this;
        var pom3;
        if (this.ime == "" || this.naslov == "" || this.email == "" || this.poruka == "" || this.ime == undefined || this.naslov == undefined || this.email == undefined || this.poruka == undefined) {
            this.nisuPopunjeniPodaci = true;
            setTimeout(function () {
                _this.nisuPopunjeniPodaci = false;
            }, 3000);
        }
        this.http.get("users/posaljiMail2/" + this.ime + "/" + this.naslov + "/" + this.email + "/" + this.poruka)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            if (pom3.success) {
                _this.poslato = true;
                setTimeout(function () {
                    _this.poslato = false;
                }, 3000);
                _this.ime = "";
                _this.naslov = "";
                _this.email = "";
                _this.poruka = "";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('selectElem'), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]) === 'function' && _a) || Object)
    ], HomeComponent.prototype, "el", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])("window:scroll", []), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', []), 
        __metadata('design:returntype', void 0)
    ], HomeComponent.prototype, "ngAfterViewInit", null);
    HomeComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-home',
            template: __webpack_require__(779),
            styles: [__webpack_require__(740)]
        }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({ selector: '[mouseWheel]' }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */]) === 'function' && _e) || Object])
    ], HomeComponent);
    return HomeComponent;
    var _a, _b, _c, _d, _e;
}());
//# sourceMappingURL=home.component.js.map

/***/ }),

/***/ 364:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageUploadComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ImageUploadComponent = (function () {
    function ImageUploadComponent(http) {
        this.http = http;
        this.lang = "srb";
        this.uploaded = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    ImageUploadComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
            console.log(_this.user);
            if (_this.user.id) {
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ImageUploadComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ImageUploadComponent.prototype.imageUploaded = function ($event) {
        var _this = this;
        this.http.get("users/osveziPodatke")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.uploadComplete();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    ImageUploadComponent.prototype.uploadComplete = function () {
        this.uploaded.emit('complete');
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === 'function' && _a) || Object)
    ], ImageUploadComponent.prototype, "uploaded", void 0);
    ImageUploadComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-image-upload',
            template: __webpack_require__(780),
            styles: [__webpack_require__(741)]
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _b) || Object])
    ], ImageUploadComponent);
    return ImageUploadComponent;
    var _a, _b;
}());
//# sourceMappingURL=image-upload.component.js.map

/***/ }),

/***/ 365:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InboxComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var InboxComponent = (function () {
    function InboxComponent(http, localStorageService, router) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.primljenePoruke = [];
        this.newCss = false;
        this.lang = "srb";
    }
    InboxComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
            _this.uzmiBoje();
            if (_this.user.success === undefined) {
                _this.getMessages();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    InboxComponent.prototype.getMessages = function () {
        var _this = this;
        this.http.get('messages/getMessages')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.primljenePoruke = data;
            _this.brojPrimljenih();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    InboxComponent.prototype.brojPrimljenih = function () {
        var poruke = this.primljenePoruke.filter(function (x) { return x.read == 1; });
        this.brojPoruka = poruke.length;
        console.log(poruke.length);
    };
    InboxComponent.prototype.goToMessage = function (poruka) {
        this.selectedMessage = { id: poruka.id };
        this.router.navigate(['./msg', this.selectedMessage]);
    };
    InboxComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    InboxComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    InboxComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-inbox',
            template: __webpack_require__(781),
            styles: [__webpack_require__(742)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _c) || Object])
    ], InboxComponent);
    return InboxComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=inbox.component.js.map

/***/ }),

/***/ 366:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_take__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginAuthGuard; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var LoginAuthGuard = (function () {
    function LoginAuthGuard(http, localStorageService) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.canAccess = false;
    }
    LoginAuthGuard.prototype.canActivate = function () {
        console.log(this.localStorageService.get("logged"));
        if (this.localStorageService.get("logged"))
            return false;
        else
            return true;
    };
    LoginAuthGuard.prototype.ngOnInit = function () {
    };
    LoginAuthGuard = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object])
    ], LoginAuthGuard);
    return LoginAuthGuard;
    var _a, _b;
}());
//# sourceMappingURL=login-auth-guard.js.map

/***/ }),

/***/ 367:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_datepicker__ = __webpack_require__(505);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_angular_2_local_storage__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginSComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






//import {DatePicker} from "../DatePicker/datapicker-component";
var LoginSComponent = (function () {
    function LoginSComponent(http, router, localStorageService) {
        this.http = http;
        this.router = router;
        this.localStorageService = localStorageService;
        this.username = "";
        this.password = "";
        this.pogresniPodaci = false;
        this.country_array = new Array("Afghanistan", "Aland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Barbuda", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Trty.", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Caicos Islands", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Congo, Democratic Republic of the", "Cook Islands", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern Territories", "Futuna Islands", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard", "Herzegovina", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran (Islamic Republic of)", "Iraq", "Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Jan Mayen Islands", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea", "Korea (Democratic)", "Kuwait", "Kyrgyzstan", "Lao", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libyan Arab Jamahiriya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "McDonald Islands", "Mexico", "Micronesia", "Miquelon", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "Nevis", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territory, Occupied", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Principe", "Puerto Rico", "Qatar", "Reunion", "Romania", "Russian Federation", "Rwanda", "Saint Barthelemy", "Saint Helena", "Saint Kitts", "Saint Lucia", "Saint Martin (French part)", "Saint Pierre", "Saint Vincent", "Samoa", "San Marino", "Sao Tome", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Sandwich Islands", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "The Grenadines", "Timor-Leste", "Tobago", "Togo", "Tokelau", "Tonga", "Trinidad", "Tunisia", "Turkey", "Turkmenistan", "Turks Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "US Minor Outlying Islands", "Uzbekistan", "Vanuatu", "Vatican City State", "Venezuela", "Vietnam", "Virgin Islands (British)", "Virgin Islands (US)", "Wallis", "Western Sahara", "Yemen", "Zambia", "Zimbabwe");
        this.acitveReg = false;
        this.activeLogin = true;
        this.forgotPass = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
        this.nijeIsto = false;
        this.calendarOptions = {
            format: "DD-MM-YYYY",
        };
        this.duplo = false;
        this.nePostoji = false;
        this.poslato = false;
        this.options = new __WEBPACK_IMPORTED_MODULE_4_ng2_datepicker__["b" /* DatePickerOptions */]();
        this.drzava = this.country_array[0];
    }
    ;
    LoginSComponent.prototype.ngOnInit = function () {
        this.localStorageService.set("logged", false);
        this.username = "";
        this.password = "";
    };
    LoginSComponent.prototype.povratiSifru = function () {
        var _this = this;
        var pom1;
        this.http.get("users/proveriUser/" + this.user1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success) {
                _this.http.get("users/vratiEmail/" + _this.user1)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.pomm = data;
                    _this.http.get("users/probaSifre")
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        _this.pom2 = data;
                        _this.nePostoji = false;
                        _this.posaljiNaMail();
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                }, function (err) { return console.log(err); }, function () { return console.log('Completed reg'); });
            }
            else {
                _this.nePostoji = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    LoginSComponent.prototype.resetuj = function () {
        this.pogresniPodaci = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
    };
    LoginSComponent.prototype.resetujL = function () {
        this.acitveReg = false;
        this.activeLogin = true;
        this.forgotPass = false;
        this.pogresniPodaci = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
    };
    LoginSComponent.prototype.ForgotPass = function () {
        this.acitveReg = false;
        this.activeLogin = false;
        this.forgotPass = true;
    };
    LoginSComponent.prototype.resetujR = function () {
        this.forgotPass = false;
        this.acitveReg = true;
        this.activeLogin = false;
        this.pogresniPodaci = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
    };
    LoginSComponent.prototype.posaljiNaMail = function () {
        var _this = this;
        var pom3;
        var email = this.pomm;
        var sifra = this.pom2;
        this.http.get("users/posaljiMail/" + email + "/" + sifra)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            if (pom3.success) {
                _this.http.get("users/promeniSifru2/" + _this.user1 + "/" + sifra)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var pom4;
                    pom4 = data;
                    if (pom4.success) {
                        _this.poslato = true;
                        _this.user1 = "";
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    LoginSComponent.prototype.callType = function (value) {
        this.drzava = value;
    };
    LoginSComponent.prototype.Login = function () {
        var _this = this;
        var pom;
        //window.alert(this.username+" "+this.password);
        this.http.get("users/users/" + this.username + "/" + this.password)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.data = data;
            if (_this.data.success) {
                _this.localStorageService.set("logged", true);
                _this.localStorageService.set("password", _this.password);
                _this.http.get("users/proveriAdmina/" + _this.username + "/" + _this.password)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom = data;
                    if (pom.success) {
                        _this.localStorageService.set("admin", true);
                        _this.router.navigate(['./admin']);
                    }
                    else {
                        _this.localStorageService.set("admin", false);
                        _this.router.navigate(['./user']);
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
            else {
                _this.pogresniPodaci = true;
                setTimeout(function () {
                    _this.pogresniPodaci = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    LoginSComponent.prototype.RegistrujSe = function () {
        var _this = this;
        if (this.imeReg == null || this.prezimeReg == null || this.usernameReg == null || this.passwordReg == null || this.emailReg == null) {
            this.imeNijePopunjeno = true;
            this.praznaPolja = true;
            this.uspesno = false;
            setTimeout(function () {
                _this.praznaPolja = false;
            }, 3000);
        }
        else if (this.passwordReg != this.passwordReg2) {
            this.nijeIsto = true;
            setTimeout(function () {
                _this.nijeIsto = false;
            }, 3000);
        }
        else if (this.imeReg != null && this.prezimeReg != null && this.usernameReg != null && this.passwordReg != null && this.emailReg != null) {
            this.praznaPolja = false;
            var pod;
            var pod2;
            this.http.get("users/proveriMail/" + this.emailReg + "/" + this.usernameReg)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                pod2 = data;
                if (pod2.success == false) {
                    _this.duplo = true;
                    setTimeout(function () {
                        _this.duplo = false;
                    }, 3000);
                    _this.http.get("users/posaljiMail4/" + _this.emailReg)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        var pom4;
                        pom4 = data;
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
                }
                else {
                    _this.http.get("users/register/" + _this.usernameReg + "/" + _this.passwordReg)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        _this.data = data;
                        if (_this.data.success) {
                            _this.popuniBazu();
                            _this.http.get("users/posaljiMail3/" + _this.emailReg + "/" + _this.usernameReg + "/" + _this.passwordReg)
                                .map(function (res) { return res.json(); })
                                .subscribe(function (data) {
                                pod = data;
                                if (pod.success == true) {
                                    _this.uspesno = true;
                                    _this.imeReg = "";
                                    _this.prezimeReg = "";
                                    _this.emailReg = "";
                                    _this.usernameReg = "";
                                    _this.passwordReg = "";
                                }
                            }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
                        }
                        else {
                            _this.pogresniPodaciReg = true;
                            setTimeout(function () {
                                _this.pogresniPodaciReg = false;
                            }, 3000);
                        }
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
        }
    };
    LoginSComponent.prototype.popuniBazu = function () {
        var _this = this;
        console.log(this.drzava);
        this.http.get("users/dodajUBazu/" + this.usernameReg + "/" + this.passwordReg + "/" + this.emailReg + "/" + this.imeReg + "/" + this.prezimeReg + "/" + this.drzava + "/" + this.date.formatted)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.dataa = data;
            console.log(_this.dataa.success);
            if (_this.dataa.success) {
                _this.uspesnaRegistracija = true;
                _this.imeReg = null;
                setTimeout(function () {
                    _this.uspesnaRegistracija = false;
                }, 5000);
                _this.pogresniPodaciReg = false;
            }
            else {
                _this.uspesnaRegistracija = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed reg'); });
    };
    LoginSComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-login-s',
            template: __webpack_require__(782),
            styles: [__webpack_require__(743)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_5_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_5_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object])
    ], LoginSComponent);
    return LoginSComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=login-s.component.js.map

/***/ }),

/***/ 368:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import {DatePicker} from "../DatePicker/datapicker-component";
var LoginComponent = (function () {
    function LoginComponent(http, router, localStorageService) {
        this.http = http;
        this.router = router;
        this.localStorageService = localStorageService;
        this.isClickedOnce = false;
        this.username = "";
        this.losDatum = false;
        this.password = "";
        this.pogresniPodaci = false;
        this.country_array = new Array("Afghanistan", "Aland Islands", "Albania", "Algeria", "American Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Barbuda", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia", "Botswana", "Bouvet Island", "Brazil", "British Indian Ocean Trty.", "Brunei Darussalam", "Bulgaria", "Burkina Faso", "Burundi", "Caicos Islands", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo", "Congo, Democratic Republic of the", "Cook Islands", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Falkland Islands (Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern Territories", "Futuna Islands", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Gibraltar", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard", "Herzegovina", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran (Islamic Republic of)", "Iraq", "Ireland", "Isle of Man", "Israel", "Italy", "Jamaica", "Jan Mayen Islands", "Japan", "Jersey", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea", "Korea (Democratic)", "Kuwait", "Kyrgyzstan", "Lao", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libyan Arab Jamahiriya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "McDonald Islands", "Mexico", "Micronesia", "Miquelon", "Moldova", "Monaco", "Mongolia", "Montenegro", "Montserrat", "Morocco", "Mozambique", "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "Nevis", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territory, Occupied", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcairn", "Poland", "Portugal", "Principe", "Puerto Rico", "Qatar", "Reunion", "Romania", "Russian Federation", "Rwanda", "Saint Barthelemy", "Saint Helena", "Saint Kitts", "Saint Lucia", "Saint Martin (French part)", "Saint Pierre", "Saint Vincent", "Samoa", "San Marino", "Sao Tome", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia", "South Sandwich Islands", "Spain", "Sri Lanka", "Sudan", "Suriname", "Svalbard", "Swaziland", "Sweden", "Switzerland", "Syrian Arab Republic", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "The Grenadines", "Timor-Leste", "Tobago", "Togo", "Tokelau", "Tonga", "Trinidad", "Tunisia", "Turkey", "Turkmenistan", "Turks Islands", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "US Minor Outlying Islands", "Uzbekistan", "Vanuatu", "Vatican City State", "Venezuela", "Vietnam", "Virgin Islands (British)", "Virgin Islands (US)", "Wallis", "Western Sahara", "Yemen", "Zambia", "Zimbabwe");
        this.acitveReg = false;
        this.activeLogin = true;
        this.forgotPass = false;
        this.ForgoIt = false;
        this.blokiran = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
        this.nijeIsto = false;
        this.day_array = [];
        this.month_array = [];
        this.year_array = [];
        this.duplo = false;
        this.nePostoji = false;
        this.poslato = false;
        this.Active = "loginActive";
        this.drzava = this.country_array[0];
    }
    LoginComponent.prototype.ngOnInit = function () {
        for (var i = 1; i <= 31; i++) {
            this.day_array.push(i);
            if (i <= 12)
                this.month_array.push(i);
        }
        this.date = new Date();
        for (var i = this.date.getFullYear(); i >= 1900; i--)
            this.year_array.push(i);
        this.year_array.unshift("godina");
        this.day_array.unshift("dan");
        this.month_array.unshift("mesec");
        this.localStorageService.set("logged", false);
        this.username = "";
        this.password = "";
    };
    LoginComponent.prototype.povratiSifru = function () {
        var _this = this;
        var pom1;
        this.http.get("users/proveriUser/" + this.user1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success) {
                _this.http.get("users/vratiEmail/" + _this.user1)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    _this.pomm = data;
                    _this.http.get("users/probaSifre")
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        _this.pom2 = data;
                        _this.nePostoji = false;
                        _this.posaljiNaMail();
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                }, function (err) { return console.log(err); }, function () { return console.log('Completed reg'); });
            }
            else {
                _this.nePostoji = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    LoginComponent.prototype.resetuj = function () {
        this.pogresniPodaci = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
    };
    LoginComponent.prototype.resetujL = function () {
        this.acitveReg = false;
        this.activeLogin = true;
        this.forgotPass = false;
        this.pogresniPodaci = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
    };
    LoginComponent.prototype.ForgotPass = function () {
        this.acitveReg = false;
        this.activeLogin = false;
        this.forgotPass = true;
    };
    LoginComponent.prototype.resetujR = function () {
        this.forgotPass = false;
        this.acitveReg = true;
        this.activeLogin = false;
        this.pogresniPodaci = false;
        this.pogresniPodaciReg = false;
        this.praznaPolja = false;
        this.uspesnaRegistracija = false;
    };
    LoginComponent.prototype.posaljiNaMail = function () {
        var _this = this;
        var pom3;
        var email = this.pomm;
        var sifra = this.pom2;
        this.http.get("users/posaljiMail/" + email + "/" + sifra)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            if (pom3.success) {
                _this.http.get("users/promeniSifru2/" + _this.user1 + "/" + sifra)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    var pom4;
                    pom4 = data;
                    if (pom4.success) {
                        _this.poslato = true;
                        _this.user1 = "";
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    LoginComponent.prototype.callType = function (value) {
        this.drzava = value;
    };
    LoginComponent.prototype.Login = function () {
        var _this = this;
        var pom;
        this.isClickedOnce = true;
        setTimeout(function () {
            _this.isClickedOnce = false;
        }, 1500);
        this.http.get("users/users/" + this.username + "/" + this.password)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.data = data;
            if (_this.data.success) {
                _this.localStorageService.set("logged", true);
                _this.localStorageService.set("password", _this.password);
                _this.http.get("users/proveriAdmina/" + _this.username + "/" + _this.password)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom = data;
                    if (pom.success) {
                        _this.localStorageService.set("admin", true);
                        _this.router.navigate(['./admin']);
                    }
                    else {
                        _this.localStorageService.set("admin", false);
                        _this.http.get("users/blokiran/" + _this.username + "/" + _this.password)
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            var pom4 = data;
                            if (pom4.success) {
                                _this.blokiran = true;
                                setTimeout(function () {
                                    _this.blokiran = false;
                                }, 3000);
                            }
                            else {
                                _this.router.navigate(['./user']);
                            }
                        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
            else {
                _this.pogresniPodaci = true;
                _this.isClickedOnce = false;
                setTimeout(function () {
                    _this.pogresniPodaci = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    LoginComponent.prototype.RegistrujSe = function () {
        var _this = this;
        if (this.imeReg == null || this.prezimeReg == null || this.usernameReg == null || this.passwordReg == null || this.emailReg == null) {
            this.imeNijePopunjeno = true;
            this.praznaPolja = true;
            this.uspesno = false;
            setTimeout(function () {
                _this.praznaPolja = false;
            }, 3000);
        }
        else if (this.passwordReg != this.passwordReg2) {
            this.nijeIsto = true;
            setTimeout(function () {
                _this.nijeIsto = false;
            }, 3000);
        }
        else if (this.imeReg != null && this.prezimeReg != null && this.usernameReg != null && this.passwordReg != null && this.emailReg != null) {
            this.praznaPolja = false;
            var pod;
            var pod2;
            this.http.get("users/proveriMail/" + this.emailReg + "/" + this.usernameReg)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                pod2 = data;
                if (pod2.success == false) {
                    _this.duplo = true;
                    setTimeout(function () {
                        _this.duplo = false;
                    }, 3000);
                    _this.http.get("users/posaljiMail4/" + _this.emailReg)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        var pom4;
                        pom4 = data;
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
                }
                else {
                    _this.http.get("users/register/" + _this.usernameReg + "/" + _this.passwordReg)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        _this.data = data;
                        if (_this.data.success) {
                            _this.popuniBazu();
                            _this.http.get("users/posaljiMail3/" + _this.emailReg + "/" + _this.usernameReg + "/" + _this.passwordReg)
                                .map(function (res) { return res.json(); })
                                .subscribe(function (data) {
                                pod = data;
                                if (pod.success == true) {
                                    _this.uspesno = true;
                                    _this.imeReg = "";
                                    _this.prezimeReg = "";
                                    _this.emailReg = "";
                                    _this.usernameReg = "";
                                    _this.passwordReg = "";
                                }
                            }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
                        }
                        else {
                            _this.pogresniPodaciReg = true;
                            setTimeout(function () {
                                _this.pogresniPodaciReg = false;
                            }, 3000);
                        }
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed provera'); });
        }
    };
    LoginComponent.prototype.signUpBtn = function () {
        this.Active = "singUpActive";
    };
    LoginComponent.prototype.loginBtn2 = function () {
        this.ForgoIt = false;
    };
    LoginComponent.prototype.loginBtn = function () {
        this.Active = "loginActive";
        this.uspesnaRegistracija = false;
    };
    LoginComponent.prototype.ForgotPass2 = function () {
        this.ForgoIt = true;
    };
    LoginComponent.prototype.popuniBazu = function () {
        var _this = this;
        var dan;
        dan = document.getElementById("dan");
        var dan = dan.options[dan.selectedIndex].value;
        var mesec;
        mesec = document.getElementById("mesec");
        var mesec = mesec.options[mesec.selectedIndex].value;
        var godina;
        godina = document.getElementById("godina");
        var godina = godina.options[godina.selectedIndex].value;
        var datum = dan + "-" + mesec + "-" + godina;
        var pattern = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;
        if (!pattern.test(datum)) {
            this.losDatum = true;
            setTimeout(function () {
                _this.losDatum = false;
            }, 5000);
        }
        else {
            this.http.get("users/dodajUBazu/" + this.usernameReg + "/" + this.passwordReg + "/" + this.emailReg + "/" + this.imeReg + "/" + this.prezimeReg + "/" + this.drzava + "/" + datum)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.dataa = data;
                console.log(_this.dataa.success);
                if (_this.dataa.success) {
                    _this.uspesnaRegistracija = true;
                    _this.imeReg = null;
                    _this.username = _this.usernameReg;
                    _this.password = _this.passwordReg;
                    /*   setTimeout(() => {
                           this.uspesnaRegistracija = false;
                       }, 5000);*/
                    _this.pogresniPodaciReg = false;
                }
                else {
                    _this.uspesnaRegistracija = false;
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed reg'); });
        }
    };
    LoginComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app',
            template: __webpack_require__(783)
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object])
    ], LoginComponent);
    return LoginComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=login.component.js.map

/***/ }),

/***/ 369:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(44);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MapaComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var MapaComponent = (function () {
    function MapaComponent(formBuilder) {
        this.formBuilder = formBuilder;
    }
    MapaComponent.prototype.ngOnInit = function () {
    };
    MapaComponent.prototype.onChange = function ($event) {
    };
    MapaComponent.prototype.ngAfterViewInit = function () {
        this.fuja();
    };
    MapaComponent.prototype.menjaj = function () {
        var doubleSlider;
        doubleSlider = document.getElementById('doubleSlider');
        doubleSlider.noUiSlider.updateOptions({
            range: {
                'min': 50,
                'max': 100
            }
        });
    };
    MapaComponent.prototype.fuja = function () {
        var connectedSlider, doubleSlider, updateSliderValue;
        updateSliderValue = function (slider, handle) {
            var children, i, results, val, values;
            if (handle == null) {
                handle = 0;
            }
            children = slider.getElementsByClassName('noUi-handle');
            values = slider.noUiSlider.get();
            i = 0;
            results = [];
            while (i < children.length) {
                if (children.length === 1) {
                    val = parseInt(values);
                }
                else {
                    val = parseInt(values[i]);
                }
                children[i].dataset.value = val;
                results.push(i++);
            }
            return results;
        };
        doubleSlider = document.getElementById('doubleSlider');
        noUiSlider.create(doubleSlider, {
            animationDuration: 300,
            start: [25, 70],
            step: 1,
            range: {
                'min': 1,
                'max': 200
            }
        });
        doubleSlider.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider.noUiSlider.get());
            return updateSliderValue(doubleSlider);
        });
    };
    MapaComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app',
            template: __webpack_require__(784),
            styles: [__webpack_require__(744)]
        }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({ selector: '[mouseWheel]' }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */]) === 'function' && _a) || Object])
    ], MapaComponent);
    return MapaComponent;
    var _a;
}());
//# sourceMappingURL=mapa.component.js.map

/***/ }),

/***/ 370:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_switchMap__ = __webpack_require__(509);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_switchMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_switchMap__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(4);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MsgComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var MsgComponent = (function () {
    function MsgComponent(http, route, redRouter) {
        this.http = http;
        this.route = route;
        this.redRouter = redRouter;
        this.comm = '';
        this.obrisano = false;
        this.porukaPoslata = false;
        this.procitano = false;
        this.selectedMessage = [];
        this.newCss = false;
        this.lang = "srb";
    }
    MsgComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data.id;
            _this.uzmiLang();
            _this.uzmiBoje();
        });
        this.route.params
            .subscribe(function (params) {
            _this.mess = params['id'];
        });
        this.getMessage(this.mess);
        console.log(this.mess);
    };
    MsgComponent.prototype.postaviPorukuZaBrisanje = function (por, sender, reciever) {
        this.porZaBrisanje = por;
        this.senderZabrisanje = sender;
        this.recieverZaBrisanje = reciever;
    };
    MsgComponent.prototype.print = function () {
        var printContents, popupWin;
        printContents = document.getElementById('panel-body').innerHTML;
        popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');
        popupWin.document.open();
        popupWin.document.write("\n      <html>\n        <head>\n          <title>Print tab</title>\n          <style>\n          //........Customized style.......\n          </style>\n        </head>\n    <body onload=\"window.print();window.close()\">" + printContents + "</body>\n      </html>");
        popupWin.document.close();
    };
    MsgComponent.prototype.getMessage = function (id) {
        var _this = this;
        console.log(id);
        this.http.get("messages/getMessage/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data[0].idReceiver + " msg komp poruka");
            _this.selectedMessage = data;
            if (_this.selectedMessage.length > 0)
                if (data[0].idReceiver == _this.user)
                    _this.markAsRead(data[0].id);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MsgComponent.prototype.brzOdgovor = function (username) {
        var _this = this;
        console.log(username + " " + this.comm);
        this.comm;
        this.http.get("messages/sendMessage/" + username + "/" + this.comm)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.porukaPoslata = true;
                _this.comm = '';
            }
            else
                _this.porukaPoslata = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MsgComponent.prototype.obrisiPoruku = function () {
        var _this = this;
        var idSender = this.senderZabrisanje;
        var idReceiver = this.recieverZaBrisanje;
        var porukeZaBrisanje = this.porZaBrisanje;
        console.log(this.user + " == " + idSender + " == " + idReceiver + " obrisi poruku");
        if (this.user == idSender && this.user == idReceiver) {
            this.http.get("messages/deleteYMessages/" + porukeZaBrisanje)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                if (data.success)
                    _this.obrisano = true;
                else
                    _this.obrisano = false;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            this.redRouter.navigate(['/inbox']);
        }
        else if (this.user == idSender) {
            this.http.get("messages/deleteSenderMessages/" + porukeZaBrisanje)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                if (data.success)
                    _this.obrisano = true;
                else
                    _this.obrisano = false;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            this.redRouter.navigate(['/inbox']);
        }
        else {
            this.http.get("messages/deleteReceiverMessages/" + porukeZaBrisanje)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                if (data.success)
                    _this.obrisano = true;
                else
                    _this.obrisano = false;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            this.redRouter.navigate(['/inbox']);
        }
    };
    MsgComponent.prototype.markAsRead = function (procitanePoruke) {
        var _this = this;
        this.http.get("messages/markAsRead/" + procitanePoruke)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success)
                _this.procitano = true;
            else
                _this.procitano = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MsgComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MsgComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MsgComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-msg',
            template: __webpack_require__(786),
            styles: [__webpack_require__(746)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["c" /* ActivatedRoute */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["c" /* ActivatedRoute */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _c) || Object])
    ], MsgComponent);
    return MsgComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=msg.component.js.map

/***/ }),

/***/ 371:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NewMsgComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var NewMsgComponent = (function () {
    function NewMsgComponent(http) {
        this.http = http;
        this.username = '';
        this.poruka = '';
        this.filteredList = [];
        this.useri = [];
        this.newCss = false;
        this.lang = "srb";
    }
    NewMsgComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiBoje();
            _this.uzmiLang();
            console.log(_this.user);
            if (_this.user.id) {
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("users/getUsers")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var pom;
            var i;
            pom = data;
            for (i = 0; i < pom.length; i++)
                _this.useri[i] = pom[i].username;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NewMsgComponent.prototype.sendMessage = function () {
        var _this = this;
        this.http.get("messages/sendMessage/" + this.username + "/" + this.poruka)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.porukaPoslata = true;
                _this.username = '';
                _this.poruka = '';
            }
            else
                _this.porukaPoslata = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NewMsgComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NewMsgComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NewMsgComponent.prototype.filter1 = function () {
        console.log("tu smo!");
        if (this.username !== "") {
            console.log("e sad smo tu smo!");
            this.filteredList = this.useri.filter(function (el) {
                return el.toLowerCase().indexOf(this.username.toLowerCase()) > -1;
            }.bind(this));
        }
        else {
            this.filteredList = [];
        }
    };
    NewMsgComponent.prototype.select = function (item) {
        this.username = item;
        this.filteredList = [];
    };
    NewMsgComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-new-msg',
            template: __webpack_require__(787),
            styles: [__webpack_require__(747)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object])
    ], NewMsgComponent);
    return NewMsgComponent;
    var _a;
}());
//# sourceMappingURL=new-msg.component.js.map

/***/ }),

/***/ 372:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NotificationsReadComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var NotificationsReadComponent = (function () {
    function NotificationsReadComponent(http, route, router, localStorageService) {
        this.http = http;
        this.route = route;
        this.router = router;
        this.localStorageService = localStorageService;
        this.binary = this.localStorageService.get("binary");
        this.lang = "srb";
        this.newCss = false;
    }
    NotificationsReadComponent.prototype.ngOnInit = function () {
        var _this = this;
        var self = this;
        self.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiBoje();
            _this.uzmiLang();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.route.params
            .subscribe(function (params) {
            _this.notif = params;
            _this.vratiImanje();
        });
    };
    NotificationsReadComponent.prototype.obrisiObavestenje = function (id) {
        var _this = this;
        this.http.get("users/obrisiObavestenje/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data == true) {
                _this.router.navigate(['/notifications']);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsReadComponent.prototype.nazad = function () {
        this.router.navigate(['/notifications']);
    };
    NotificationsReadComponent.prototype.vratiImanje = function () {
        var _this = this;
        this.http.get("users/prikaziImanje/" + this.notif.idowner)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.imanja = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsReadComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsReadComponent.prototype.odgovori = function (accepted) {
        var _this = this;
        this.http.get("users/dodajRadnika/" + this.notif.idowner + "/" + this.notif.idworker + "/" + this.notif.idrole + "/" + accepted)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.router.navigate(['./notifications']);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsReadComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsReadComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-notifications-read',
            template: __webpack_require__(788),
            styles: [__webpack_require__(748)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["c" /* ActivatedRoute */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["c" /* ActivatedRoute */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _d) || Object])
    ], NotificationsReadComponent);
    return NotificationsReadComponent;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=notifications-read.component.js.map

/***/ }),

/***/ 373:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NotificationsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var NotificationsComponent = (function () {
    function NotificationsComponent(permService, http, localStorageService, router) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.obavestenjaVidljiva = false;
        this.obavestenjaStigla = false;
        this.expObavestenjaNone = false;
        this.obavestenjaNone = false;
        this.lang = "srb";
        console.log(this.router.url);
    }
    NotificationsComponent.prototype.ngOnInit = function () {
        var _this = this;
        var self = this;
        self.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.uzmiObavestenja();
        this.uzmiExpObavestenja();
    };
    NotificationsComponent.prototype.odgovori = function (owner, worker, role, accepted) {
        var _this = this;
        this.http.get("users/dodajRadnika/" + owner + "/" + worker + "/" + role + "/" + accepted)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.uzmiObavestenja();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsComponent.prototype.uzmiObavestenja = function () {
        var _this = this;
        this.http.get("users/dohvatiObavestenja")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.obavestenja = data;
            if (_this.obavestenja == 0)
                _this.obavestenjaNone = true;
            console.log(_this.obavestenja);
            _this.obavestenjaStigla = true;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsComponent.prototype.uzmiExpObavestenja = function () {
        var _this = this;
        this.http.get("users/expNotifications")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.expObavestenja = data.not;
                if (_this.expObavestenja.length == 0)
                    _this.expObavestenjaNone = true;
                console.log(_this.expObavestenja);
                _this.obavestenjaStigla = true;
            }
            else {
                _this.expObavestenjaNone = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsComponent.prototype.obrisiObavestenje = function (id) {
        var _this = this;
        this.http.get("users/obrisiObavestenje/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data == true) {
                _this.uzmiObavestenja();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsComponent.prototype.goToNot = function (obavestenjee) {
        var broj = Number(obavestenjee.dozvole);
        var max = 32;
        var dozvolebin = "";
        while (max > 0) {
            if ((broj & max) == 0)
                dozvolebin += "0";
            else
                dozvolebin += "1";
            max = max >> 1;
        }
        this.localStorageService.set("binary", dozvolebin);
        var izabranoObavestenje;
        izabranoObavestenje = obavestenjee;
        this.router.navigate(['./notificationsRead', izabranoObavestenje]);
    };
    NotificationsComponent.prototype.notificationSeen = function (id) {
        var _this = this;
        this.http.get("users/expNotificationsSeen/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.uzmiExpObavestenja();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    NotificationsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-notifications',
            template: __webpack_require__(789),
            styles: [__webpack_require__(749)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */]) === 'function' && _d) || Object])
    ], NotificationsComponent);
    return NotificationsComponent;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=notifications.component.js.map

/***/ }),

/***/ 374:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageNotFoundComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PageNotFoundComponent = (function () {
    function PageNotFoundComponent(router) {
        this.router = router;
    }
    PageNotFoundComponent.prototype.ngOnInit = function () {
    };
    PageNotFoundComponent.prototype.vratiNaPrikaz = function () {
        this.router.navigate(['./user']);
    };
    PageNotFoundComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-page-not-found',
            template: __webpack_require__(791),
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _a) || Object])
    ], PageNotFoundComponent);
    return PageNotFoundComponent;
    var _a;
}());
//# sourceMappingURL=page-not-found.component.js.map

/***/ }),

/***/ 375:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PravilaComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PravilaComponent = (function () {
    function PravilaComponent(http, permService) {
        this.http = http;
        this.permService = permService;
        this.rulesBasic = true;
        this.rulesAdvanced = false;
        this.rulesDelete = false;
        this.newCss = false;
        this.lang = "srb";
    }
    PravilaComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        var self = this;
        self.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiBoje();
            _this.uzmiLang();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    PravilaComponent.prototype.promeniTabOsnovna = function () {
        this.rulesBasic = true;
        this.rulesAdvanced = this.rulesDelete = false;
    };
    PravilaComponent.prototype.promeniTabNapredna = function () {
        this.rulesAdvanced = true;
        this.rulesBasic = this.rulesDelete = false;
    };
    PravilaComponent.prototype.promeniTabBrisanje = function () {
        this.rulesDelete = true;
        this.rulesBasic = this.rulesAdvanced = false;
    };
    PravilaComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    PravilaComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    PravilaComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-pravila',
            template: __webpack_require__(792),
            styles: [__webpack_require__(750)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_perm_service_service__["a" /* PermService */]) === 'function' && _b) || Object])
    ], PravilaComponent);
    return PravilaComponent;
    var _a, _b;
}());
//# sourceMappingURL=pravila.component.js.map

/***/ }),

/***/ 376:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestOwnershipPageComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var RequestOwnershipPageComponent = (function () {
    function RequestOwnershipPageComponent(http, localStorageService, router) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.vidljivost = false;
        this.poslatZahtev = false;
        this.postojiUBazi = false;
        this.isOwner = false;
    }
    RequestOwnershipPageComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.http.get("permisions/userIsOwner")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.isOwner = data.owner;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            _this.user = data;
            if (_this.user.success === undefined) {
                _this.vidljivost = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RequestOwnershipPageComponent.prototype.proveriZahtev = function () {
        var _this = this;
        var pom1;
        this.http.get("users/proveriZahtevv/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success) {
                _this.postojiUBazi = true;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RequestOwnershipPageComponent.prototype.posaljiZahtev = function () {
        /*  this.proveriZahtev();
       window.alert(this.postojiUBazi);
          if (this.postojiUBazi == false) {
            var pom: any;
            this.http.get(`users/posaljiZahtevAdminu/${this.user.id}`)
              .map(res => res.json())
              .subscribe(data => {
                pom = data;
                if (pom.success) {
                  this.poslatZahtev = true;
                }
      
              },
              err => console.log(err),
              () => console.log('Completed'));
      
          }*/
        var _this = this;
        var pom1;
        this.http.get("users/proveriZahtevv/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success) {
                var pom;
                _this.http.get("users/posaljiZahtevAdminu/" + _this.user.id)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom = data;
                    if (pom.success) {
                        _this.poslatZahtev = true;
                        _this.postojiUBazi = false;
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
            else {
                _this.postojiUBazi = true;
                _this.poslatZahtev = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RequestOwnershipPageComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-request-ownership-page',
            template: __webpack_require__(793),
            styles: [__webpack_require__(751)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */]) === 'function' && _c) || Object])
    ], RequestOwnershipPageComponent);
    return RequestOwnershipPageComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=request-ownership-page.component.js.map

/***/ }),

/***/ 377:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SentComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var SentComponent = (function () {
    function SentComponent(http, localStorageService, router) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.poslatePoruke = [];
        this.newCss = false;
        this.lang = "srb";
    }
    SentComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
            _this.uzmiBoje();
            if (_this.user.success === undefined) {
                _this.getMessages();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    SentComponent.prototype.getMessages = function () {
        var _this = this;
        this.http.get('messages/getSentMessages')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.poslatePoruke = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    SentComponent.prototype.goToMessage = function (poruka) {
        this.selectedMessage = { id: poruka.id };
        this.router.navigate(['./msg', this.selectedMessage]);
    };
    SentComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    SentComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    SentComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-sent',
            template: __webpack_require__(797),
            styles: [__webpack_require__(755)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _c) || Object])
    ], SentComponent);
    return SentComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=sent.component.js.map

/***/ }),

/***/ 378:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Timeline; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var Timeline = (function () {
    function Timeline(localStorageService, http, permService, router) {
        this.localStorageService = localStorageService;
        this.http = http;
        this.permService = permService;
        this.router = router;
        this.lang = "srb";
        this.isOwner = false;
    }
    Timeline.prototype.ngOnInit = function () {
        var _this = this;
        this.plantId = this.localStorageService.get("plantazaZaTimeline");
        /*if (this.plantId == undefined) {
          this.plantId = 398;
    
        }*/
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
            if (_this.dozvole.guest != undefined)
                _this.localStorageService.set("guest", _this.dozvole.guest);
            if (_this.dozvole.guest == true) {
            }
            _this.http.get("permisions/userIsOwner")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.isOwner = data.owner;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            _this.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                _this.uzmiLang();
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            _this.http.get("stats/dajPlantNotif/" + _this.plantId)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                console.log("!");
                console.log(data);
                if (data !== false) {
                    _this.podaci = data;
                    if (_this.podaci.length > 0)
                        _this.setAllSeen();
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        });
    };
    Timeline.prototype.setAllSeen = function () {
        var oznake = [];
        for (var i = 0; i < this.podaci.length; i++) {
            oznake.push(this.podaci[i].id);
        }
        this.notificationSeen(oznake);
    };
    Timeline.prototype.notificationSeen = function (id) {
        this.http.get("users/expNotificationsSeen/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                console.log("podesio seen na 1");
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    Timeline.prototype.nazad = function () {
        this.router.navigate(['/user']);
    };
    Timeline.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    Timeline.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    Timeline = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-timeline-component',
            template: __webpack_require__(799),
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1_angular_2_local_storage__["LocalStorageService"]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */]) === 'function' && _d) || Object])
    ], Timeline);
    return Timeline;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=timeline-component.component.js.map

/***/ }),

/***/ 379:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UpdateParcelComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UpdateParcelComponent = (function () {
    function UpdateParcelComponent(http, localStorageService, router) {
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.vidljivost = false;
        this.uspesnoPromenjeniPodaci = false;
        this.newCss = false;
        this.lang = "srb";
    }
    UpdateParcelComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.idParcele = this.localStorageService.get("idParcele");
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.podaci = data;
            _this.uzmiLang();
            _this.uzmiBoje();
            if (_this.podaci.success === undefined) {
                _this.vidljivost = true;
                _this.popuniPolja();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateParcelComponent.prototype.nazad = function () {
        this.router.navigate(['/user']);
    };
    UpdateParcelComponent.prototype.popuniPolja = function () {
        var _this = this;
        var i;
        var imanje;
        this.http.get("users/prikaziPodatkeOImanju/" + this.idParcele)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            imanje = data;
            _this.imeParcele = imanje[0].name;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateParcelComponent.prototype.promeniPodatke = function () {
        var _this = this;
        var novo;
        this.http.get("users/promeniParcelu/" + this.imeParcele + "/" + this.idParcele)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            novo = data;
            if (novo.success) {
                _this.uspesnoPromenjeniPodaci = true;
                setTimeout(function () {
                    _this.uspesnoPromenjeniPodaci = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateParcelComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.podaci.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateParcelComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.podaci.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    UpdateParcelComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-update-parcel',
            template: __webpack_require__(800),
            styles: [__webpack_require__(756)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */]) === 'function' && _c) || Object])
    ], UpdateParcelComponent);
    return UpdateParcelComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=update-parcel.component.js.map

/***/ }),

/***/ 537:
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	throw new Error("Cannot find module '" + req + "'.");
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 537;


/***/ }),

/***/ 538:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__ = __webpack_require__(625);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_app_module__ = __webpack_require__(663);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_environment__ = __webpack_require__(674);




if (__WEBPACK_IMPORTED_MODULE_3__environments_environment__["a" /* environment */].production) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["enableProdMode"])();
}
__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_2__app_app_module__["a" /* AppModule */]);
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 657:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tab__ = __webpack_require__(351);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Tabs; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var Tabs = (function () {
    function Tabs() {
    }
    // contentChildren are set
    Tabs.prototype.ngAfterContentInit = function () {
        // get all active tabs
        var activeTabs = this.tabs.filter(function (tab) { return tab.active; });
        // if there is no active tab set, activate the first
        if (activeTabs.length === 0) {
            this.selectTab(this.tabs.first);
        }
    };
    Tabs.prototype.selectTab = function (tab) {
        // deactivate all tabs
        this.tabs.toArray().forEach(function (tab) { return tab.active = false; });
        // activate the tab the user has clicked on.
        tab.active = true;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChildren"])(__WEBPACK_IMPORTED_MODULE_1__tab__["a" /* Tab */]), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["QueryList"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["QueryList"]) === 'function' && _a) || Object)
    ], Tabs.prototype, "tabs", void 0);
    Tabs = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'tabs',
            template: "\n    <ul class=\"nav nav-tabs\">\n      <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" [class.active]=\"tab.active\" style=\"cursor:pointer;\">\n        <a>{{tab.title}}</a>\n      </li>\n    </ul>\n    <ng-content></ng-content>\n  "
        }), 
        __metadata('design:paramtypes', [])
    ], Tabs);
    return Tabs;
    var _a;
}());
//# sourceMappingURL=tabs.js.map

/***/ }),

/***/ 658:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StatisticsPage; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var StatisticsPage = (function () {
    function StatisticsPage(permService, http, localStorageService, router) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.INF = 99999.0;
        this.imaPodataka = false;
        this.isOwner = false;
        this.podaciTrazeni = false;
        this.vidljivost = false;
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.meniVidljiv = false;
        this.lineChartOptions = {
            responsive: true
        };
        this.lineChartColors = [
            {
                backgroundColor: 'rgba(12, 16, 127,0.2)',
                borderColor: 'rgba(12, 16, 127,1)',
                pointBackgroundColor: 'rgba(12, 16, 127,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(12, 16, 127,1)'
            },
            {
                backgroundColor: 'rgba(148,159,177,0.2)',
                borderColor: 'rgba(148,159,177,1)',
                pointBackgroundColor: 'rgba(148,159,177,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(148,159,177,0.8)'
            },
            {
                backgroundColor: 'rgba(77,83,96,0.2)',
                borderColor: 'rgba(77,83,96,1)',
                pointBackgroundColor: 'rgba(77,83,96,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(77,83,96,1)'
            },
            {
                backgroundColor: 'rgba(35,42,50,0.2)',
                borderColor: 'rgba(35,42,50,1)',
                pointBackgroundColor: 'rgba(35,42,50,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(35,42,50,0.8)'
            },
            {
                backgroundColor: 'rgba(158, 0, 0,0.2)',
                borderColor: 'rgba(158, 0, 0,1)',
                pointBackgroundColor: 'rgba(158, 0, 0,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(158, 0, 0,1)'
            },
            {
                backgroundColor: 'rgba(224, 15, 15,0.2)',
                borderColor: 'rgba(224, 15, 15,1)',
                pointBackgroundColor: 'rgba(224, 15, 15,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(224, 15, 15,1)'
            },
            {
                backgroundColor: 'rgba(247, 91, 91,0.2)',
                borderColor: 'rgba(247, 91, 91,1)',
                pointBackgroundColor: 'rgba(247, 91, 91,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(247, 91, 91,1)'
            },
            {
                backgroundColor: 'rgba(12, 16, 127,0.2)',
                borderColor: 'rgba(12, 16, 127,1)',
                pointBackgroundColor: 'rgba(12, 16, 127,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(12, 16, 127,1)'
            },
            {
                backgroundColor: 'rgba(98, 178, 247,0.2)',
                borderColor: 'rgba(98, 178, 247,1)',
                pointBackgroundColor: 'rgba(98, 178, 247,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(98, 178, 247,1)'
            },
            {
                backgroundColor: 'rgba((3, 61, 155,0.2)',
                borderColor: 'rgba((3, 61, 155,1)',
                pointBackgroundColor: 'rgba(3, 61, 155,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(3, 61, 155,1)'
            },
            {
                backgroundColor: 'rgba(67, 153, 168,0.2)',
                borderColor: 'rgba(67, 153, 168,1)',
                pointBackgroundColor: 'rgba(67, 153, 168,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(67, 153, 168,1)'
            },
            {
                backgroundColor: 'rgba(1, 33, 86,0.2)',
                borderColor: 'rgba(1, 33, 86,1)',
                pointBackgroundColor: 'rgba(1, 33, 86,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(1, 33, 86,1)'
            },
            {
                backgroundColor: 'rgba(1, 9, 22,0.2)',
                borderColor: 'rgba(1, 9, 22,1)',
                pointBackgroundColor: 'rgba(1, 9, 22,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(1, 9, 22,1)'
            }
        ];
        this.lineChartLegend = true;
        this.lineChartType = 'line';
        /////////////////////////////
        this.barChartOptions = {
            scaleShowVerticalLines: false,
            responsive: true
        };
        this.barChartType = 'bar';
        this.barChartLegend = true;
        ///////////////////////////////////////////////////////////////
        this.radarChartLabels = [];
        this.radarChartData = [];
        this.radarChartType = 'radar';
    }
    StatisticsPage.prototype.logout = function () {
        var _this = this;
        this.http.get("sessions/logout")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.localStorageService.set("logged", false);
            _this.router.navigate(['./login']);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatisticsPage.prototype.ngOnInit = function () {
        var _this = this;
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
            _this.http.get("permisions/userIsOwner")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.isOwner = data.owner;
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            if (_this.user.success === undefined) {
                _this.vidljivost = true;
                _this.popuniTabelu();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatisticsPage.prototype.meniToggle = function () {
        this.meniVidljiv = !this.meniVidljiv;
    };
    StatisticsPage.prototype.popuniTabelu = function () {
        var _this = this;
        this.http.get("users/prikaziPlantaze/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.vrste = data;
            for (var i = 0; i < _this.vrste.length; i++) {
                _this.vrste[i].dozvole = _this.dozvole.plantaze.find(function (x) { return x.id == _this.vrste[i].id; }).dozvole;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatisticsPage.prototype.skloniPoruku = function () {
        this.podaciTrazeni = false;
    };
    /* userIsOwner() {
       this.http.get(`permisions/userIsOwner`)
         .map(res => res.json())
         .subscribe(data => {
           this.isOwner = data.owner;
   
         },
         err => console.log(err),
         () => console.log('Completed'));
     }*/
    StatisticsPage.prototype.prikaziStatistiku = function (id) {
        var _this = this;
        this.http.get("users/informacijeOZemljistu/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.chartdata = data;
            if (_this.chartdata.success) {
                _this.imaPodataka = true;
                _this.vidljivostchart = true;
                _this.lineChartData = _this.chartdata.data;
                _this.lineChartLabels = _this.chartdata.labels;
            }
            else {
                _this.imaPodataka = false;
                _this.podaciTrazeni = true;
                setTimeout(function () {
                    _this.podaciTrazeni = false;
                }, 3000);
                return;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("users/moisture/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.barData = data;
            if (_this.barData.success) {
                _this.vidljivostchartBar = true;
                _this.barChartData = _this.barData.data;
                _this.barChartLabels = _this.barData.labels;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.http.get("plantations/userPlantation/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            var coords = data;
            _this.coordinates = coords[0].coordinates;
            var xmin = _this.INF, xmax = -_this.INF, ymin = _this.INF, ymax = -_this.INF;
            console.log(_this.coordinates);
            for (var i = 0; i < _this.coordinates[0].length; i++) {
                if (xmin > _this.coordinates[0][i][0])
                    xmin = _this.coordinates[0][i][0];
                if (xmax < _this.coordinates[0][i][0])
                    xmax = _this.coordinates[0][i][0];
                if (ymin > _this.coordinates[0][i][1])
                    ymin = _this.coordinates[0][i][1];
                if (ymax < _this.coordinates[0][i][1])
                    ymax = _this.coordinates[0][i][1];
            }
            _this.centerX = xmin + ((xmax - xmin) / 2);
            _this.centerY = ymin + ((ymax - ymin) / 2);
            _this.uzmiPodatkeOTemperaturi();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatisticsPage.prototype.uzmiPodatkeOTemperaturi = function () {
        var _this = this;
        console.log(this.centerY + " : " + this.centerX);
        this.http.get("http://api.openweathermap.org/data/2.5/forecast?lat=" + this.centerY + "&lon=" + this.centerX + "&units=metric&appid=0d009ab575deb18aa53e1930f40234c7")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.temperatura = data;
            var datac = new Array();
            ;
            var labels = new Array();
            var limit = _this.temperatura.list.length;
            ;
            for (var i = 0; i < limit; i += 8) {
                datac.push(_this.temperatura.list[i].main.temp);
                labels.push(_this.temperatura.list[i].dt_txt.split(" ")[0]);
            }
            _this.radarChartLabels = labels;
            _this.radarChartData = [{ data: datac, label: "temperatura" }];
            _this.vidljivostRadar = true;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatisticsPage.prototype.vratiNaPrikaz = function () {
        this.vidljivostchart = false;
        this.vidljivostchartBar = false;
        this.vidljivostRadar = false;
        this.podaciTrazeni = false;
        this.imaPodataka = false;
    };
    // events
    StatisticsPage.prototype.chartClicked = function (e) {
        console.log(e);
    };
    StatisticsPage.prototype.chartHovered = function (e) {
        console.log(e);
    };
    // events
    StatisticsPage.prototype.chartbarClicked = function (e) {
        console.log(e);
    };
    StatisticsPage.prototype.chartbarHovered = function (e) {
        console.log(e);
    };
    // events
    StatisticsPage.prototype.chartradarClicked = function (e) {
        console.log(e);
    };
    StatisticsPage.prototype.chartradarHovered = function (e) {
        console.log(e);
    };
    StatisticsPage = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(768)
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* Router */]) === 'function' && _d) || Object])
    ], StatisticsPage);
    return StatisticsPage;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=statistics-page.component.js.map

/***/ }),

/***/ 659:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Plantation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Vrsta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Proizvodjac; });
/* unused harmony export tipovi */
/* unused harmony export podtipovi */
/* unused harmony export proizvodjaci */
var Plantation = (function () {
    function Plantation() {
        this.name = '';
    }
    return Plantation;
}());
var Vrsta = (function () {
    function Vrsta() {
        this.id = 0;
        this.name = '';
    }
    return Vrsta;
}());
var Proizvodjac = (function () {
    function Proizvodjac() {
        this.id = 0;
        this.name = '';
    }
    return Proizvodjac;
}());
var tipovi = [
    { id: 1, pid: -1, name: "jabuka" },
    { id: 2, pid: -1, name: "kruska" },
    { id: 3, pid: -1, name: "dunja" },
    { id: 4, pid: -1, name: "cvekla" }
];
var podtipovi = [
    { id: 1, pid: 1, name: "zlatni delises" },
    { id: 2, pid: 1, name: "sivi delises" },
    { id: 3, pid: 2, name: "Socna zelena" },
];
var proizvodjaci = [
    { id: 1, name: "ns seme" },
    { id: 2, name: "zemun polje" }
];
//# sourceMappingURL=plantation.js.map

/***/ }),

/***/ 660:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__another_weather_files_map_js__ = __webpack_require__(1060);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__another_weather_files_map_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__another_weather_files_map_js__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WeatherMapComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var WeatherMapComponent = (function () {
    function WeatherMapComponent() {
    }
    WeatherMapComponent.prototype.ngAfterViewInit = function () {
        this.initMap();
    };
    WeatherMapComponent.prototype.initMap = function () {
        exp.func();
    };
    WeatherMapComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'weather-map',
            template: __webpack_require__(772),
        }), 
        __metadata('design:paramtypes', [])
    ], WeatherMapComponent);
    return WeatherMapComponent;
}());
//# sourceMappingURL=weather-map.component.js.map

/***/ }),

/***/ 661:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__auth_guard_service__ = __webpack_require__(359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__admin_auth_guard_service__ = __webpack_require__(357);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__login_auth_guard__ = __webpack_require__(366);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__UserPage_user_page_component__ = __webpack_require__(355);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__login_login_component__ = __webpack_require__(368);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__AddPlantation_addplantation_page_component__ = __webpack_require__(348);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__AddWorker_addworker_page_component__ = __webpack_require__(352);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__UpdateUser_update_user_component__ = __webpack_require__(354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__mapa_mapa_component__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__UpdatePlantation_update_plantation_component__ = __webpack_require__(353);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__admin_page_admin_page_component__ = __webpack_require__(358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__AddTypes_addTypes__ = __webpack_require__(350);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__request_ownership_page_request_ownership_page_component__ = __webpack_require__(376);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__inbox_inbox_component__ = __webpack_require__(365);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__msg_msg_component__ = __webpack_require__(370);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__new_msg_new_msg_component__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__sent_sent_component__ = __webpack_require__(377);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__image_upload_image_upload_component__ = __webpack_require__(364);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__page_not_found_page_not_found_component__ = __webpack_require__(374);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__notifications_notifications_component__ = __webpack_require__(373);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__update_parcel_update_parcel_component__ = __webpack_require__(379);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__finance_finance_component__ = __webpack_require__(361);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__faq_faq_component__ = __webpack_require__(360);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__home_home_component__ = __webpack_require__(363);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__notifications_read_notifications_read_component__ = __webpack_require__(372);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__timeline_component_timeline_component_component__ = __webpack_require__(378);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__add_marker_add_marker_component__ = __webpack_require__(356);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pravila_pravila_component__ = __webpack_require__(375);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__login_s_login_s_component__ = __webpack_require__(367);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__forecast_forecast_component__ = __webpack_require__(362);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppRoutingModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
































var routes = [
    { path: 'home', component: __WEBPACK_IMPORTED_MODULE_25__home_home_component__["a" /* HomeComponent */] },
    { path: 'updateuser', component: __WEBPACK_IMPORTED_MODULE_9__UpdateUser_update_user_component__["a" /* UpdateUser */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'user', component: __WEBPACK_IMPORTED_MODULE_5__UserPage_user_page_component__["a" /* UserPage */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: '', redirectTo: '/home', pathMatch: 'full' },
    { path: 'login', component: __WEBPACK_IMPORTED_MODULE_6__login_login_component__["a" /* LoginComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_3__login_auth_guard__["a" /* LoginAuthGuard */]] },
    //{ path: 'statistics', component: StatisticsPage, canActivate: [AuthGuard] },
    { path: 'addworker', component: __WEBPACK_IMPORTED_MODULE_8__AddWorker_addworker_page_component__["a" /* AddWorker */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'addplantation', component: __WEBPACK_IMPORTED_MODULE_7__AddPlantation_addplantation_page_component__["a" /* AddPlantation */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'mapa', component: __WEBPACK_IMPORTED_MODULE_10__mapa_mapa_component__["a" /* MapaComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'updateplantation', component: __WEBPACK_IMPORTED_MODULE_11__UpdatePlantation_update_plantation_component__["a" /* UpdatePlantation */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'admin', component: __WEBPACK_IMPORTED_MODULE_12__admin_page_admin_page_component__["a" /* AdminPageComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_2__admin_auth_guard_service__["a" /* AdminAuthGuard */]] },
    { path: 'reqownership', component: __WEBPACK_IMPORTED_MODULE_14__request_ownership_page_request_ownership_page_component__["a" /* RequestOwnershipPageComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'updateplantation', component: __WEBPACK_IMPORTED_MODULE_11__UpdatePlantation_update_plantation_component__["a" /* UpdatePlantation */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'msg', component: __WEBPACK_IMPORTED_MODULE_16__msg_msg_component__["a" /* MsgComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'newmsg', component: __WEBPACK_IMPORTED_MODULE_17__new_msg_new_msg_component__["a" /* NewMsgComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'sent', component: __WEBPACK_IMPORTED_MODULE_18__sent_sent_component__["a" /* SentComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'inbox', component: __WEBPACK_IMPORTED_MODULE_15__inbox_inbox_component__["a" /* InboxComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'addtypes', component: __WEBPACK_IMPORTED_MODULE_13__AddTypes_addTypes__["a" /* AddTypes */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'upload', component: __WEBPACK_IMPORTED_MODULE_19__image_upload_image_upload_component__["a" /* ImageUploadComponent */] },
    { path: 'updateparcel', component: __WEBPACK_IMPORTED_MODULE_22__update_parcel_update_parcel_component__["a" /* UpdateParcelComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'finance', component: __WEBPACK_IMPORTED_MODULE_23__finance_finance_component__["a" /* FinanceComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'notifications', component: __WEBPACK_IMPORTED_MODULE_21__notifications_notifications_component__["a" /* NotificationsComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'faq', component: __WEBPACK_IMPORTED_MODULE_24__faq_faq_component__["a" /* FaqComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'markers', component: __WEBPACK_IMPORTED_MODULE_28__add_marker_add_marker_component__["a" /* AddMarker */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'timeline', component: __WEBPACK_IMPORTED_MODULE_27__timeline_component_timeline_component_component__["a" /* Timeline */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'pravila', component: __WEBPACK_IMPORTED_MODULE_29__pravila_pravila_component__["a" /* PravilaComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'forecast', component: __WEBPACK_IMPORTED_MODULE_31__forecast_forecast_component__["a" /* ForecastComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: 'login-s', component: __WEBPACK_IMPORTED_MODULE_30__login_s_login_s_component__["a" /* LoginSComponent */] },
    { path: 'notificationsRead', component: __WEBPACK_IMPORTED_MODULE_26__notifications_read_notifications_read_component__["a" /* NotificationsReadComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] },
    { path: '**', component: __WEBPACK_IMPORTED_MODULE_20__page_not_found_page_not_found_component__["a" /* PageNotFoundComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__auth_guard_service__["a" /* AuthGuard */]] }
];
var AppRoutingModule = (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [__WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* RouterModule */].forRoot(routes)],
            exports: [__WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* RouterModule */]]
        }), 
        __metadata('design:paramtypes', [])
    ], AppRoutingModule);
    return AppRoutingModule;
}());
//# sourceMappingURL=app-routing.module.js.map

/***/ }),

/***/ 662:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AppComponent = (function () {
    function AppComponent() {
    }
    AppComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-root',
            template: '<router-outlet></router-outlet>',
        }), 
        __metadata('design:paramtypes', [])
    ], AppComponent);
    return AppComponent;
}());
//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 663:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__(155);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_scroll_to__ = __webpack_require__(760);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_scroll_to___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_scroll_to__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_component__ = __webpack_require__(662);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__login_login_component__ = __webpack_require__(368);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_common__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__WeatherMap_weather_map_component__ = __webpack_require__(660);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__app_routing_module__ = __webpack_require__(661);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_ngx_pagination__ = __webpack_require__(762);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__UserPage_user_page_component__ = __webpack_require__(355);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__AddPlantation_addplantation_page_component__ = __webpack_require__(348);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__AddWorker_addworker_page_component__ = __webpack_require__(352);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__Statistics_statistics_page_component__ = __webpack_require__(658);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__chart_component_chart_component__ = __webpack_require__(664);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_ng2_charts__ = __webpack_require__(759);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_ng2_charts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_ng2_charts__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__auth_guard_service__ = __webpack_require__(359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__admin_auth_guard_service__ = __webpack_require__(357);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__login_auth_guard__ = __webpack_require__(366);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_ng2_datepicker__ = __webpack_require__(505);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__UpdateUser_update_user_component__ = __webpack_require__(354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__AddPlantation_plantation_service__ = __webpack_require__(230);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__finance_finance_component__ = __webpack_require__(361);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__AddTypes_tabs_tabs__ = __webpack_require__(657);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__AddTypes_tabs_tab__ = __webpack_require__(351);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__AddTypes_addTypes__ = __webpack_require__(350);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_28_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__mapa_mapa_component__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__UpdatePlantation_update_plantation_component__ = __webpack_require__(353);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__meni_meni_component__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__admin_page_admin_page_component__ = __webpack_require__(358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__request_ownership_page_request_ownership_page_component__ = __webpack_require__(376);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__inbox_inbox_component__ = __webpack_require__(365);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__sent_sent_component__ = __webpack_require__(377);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__msg_msg_component__ = __webpack_require__(370);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__new_msg_new_msg_component__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__filter_pipe__ = __webpack_require__(665);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__unique_pipe__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__image_upload_image_upload_component__ = __webpack_require__(364);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41_angular2_image_upload__ = __webpack_require__(678);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41_angular2_image_upload___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_41_angular2_image_upload__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__page_not_found_page_not_found_component__ = __webpack_require__(374);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__page_not_found_d_page_not_found_d_component__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__notifications_notifications_component__ = __webpack_require__(373);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__statsWidgets_stats_widgets__ = __webpack_require__(672);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__update_parcel_update_parcel_component__ = __webpack_require__(379);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__faq_faq_component__ = __webpack_require__(360);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__add_marker_add_marker_component__ = __webpack_require__(356);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__notifications_read_notifications_read_component__ = __webpack_require__(372);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__home_home_component__ = __webpack_require__(363);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51_angular2_datatable__ = __webpack_require__(676);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51_angular2_datatable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_51_angular2_datatable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__rules_rules_component__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__rules_advance_rules_advance_component__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__login_s_login_s_component__ = __webpack_require__(367);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__timeline_component_timeline_component_component__ = __webpack_require__(378);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__forecast_forecast_component__ = __webpack_require__(362);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__rules_delete_rules_delete_component__ = __webpack_require__(670);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__pravila_pravila_component__ = __webpack_require__(375);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




























































var AppModule = (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_5__app_component__["a" /* AppComponent */],
                __WEBPACK_IMPORTED_MODULE_6__login_login_component__["a" /* LoginComponent */],
                __WEBPACK_IMPORTED_MODULE_8__WeatherMap_weather_map_component__["a" /* WeatherMapComponent */],
                __WEBPACK_IMPORTED_MODULE_11__UserPage_user_page_component__["a" /* UserPage */],
                __WEBPACK_IMPORTED_MODULE_14__Statistics_statistics_page_component__["a" /* StatisticsPage */],
                __WEBPACK_IMPORTED_MODULE_13__AddWorker_addworker_page_component__["a" /* AddWorker */],
                __WEBPACK_IMPORTED_MODULE_12__AddPlantation_addplantation_page_component__["a" /* AddPlantation */],
                __WEBPACK_IMPORTED_MODULE_15__chart_component_chart_component__["a" /* ChartComponent */],
                __WEBPACK_IMPORTED_MODULE_21__UpdateUser_update_user_component__["a" /* UpdateUser */],
                __WEBPACK_IMPORTED_MODULE_29__mapa_mapa_component__["a" /* MapaComponent */],
                __WEBPACK_IMPORTED_MODULE_30__UpdatePlantation_update_plantation_component__["a" /* UpdatePlantation */],
                __WEBPACK_IMPORTED_MODULE_31__meni_meni_component__["a" /* MeniComponent */],
                __WEBPACK_IMPORTED_MODULE_32__admin_page_admin_page_component__["a" /* AdminPageComponent */],
                __WEBPACK_IMPORTED_MODULE_33__request_ownership_page_request_ownership_page_component__["a" /* RequestOwnershipPageComponent */],
                __WEBPACK_IMPORTED_MODULE_25__AddTypes_tabs_tabs__["a" /* Tabs */],
                __WEBPACK_IMPORTED_MODULE_26__AddTypes_tabs_tab__["a" /* Tab */],
                __WEBPACK_IMPORTED_MODULE_27__AddTypes_addTypes__["a" /* AddTypes */],
                __WEBPACK_IMPORTED_MODULE_34__inbox_inbox_component__["a" /* InboxComponent */],
                __WEBPACK_IMPORTED_MODULE_24__finance_finance_component__["a" /* FinanceComponent */],
                __WEBPACK_IMPORTED_MODULE_35__sent_sent_component__["a" /* SentComponent */],
                __WEBPACK_IMPORTED_MODULE_36__msg_msg_component__["a" /* MsgComponent */],
                __WEBPACK_IMPORTED_MODULE_37__new_msg_new_msg_component__["a" /* NewMsgComponent */],
                __WEBPACK_IMPORTED_MODULE_38__filter_pipe__["a" /* FilterPipe */],
                __WEBPACK_IMPORTED_MODULE_39__unique_pipe__["a" /* UniquePipe */],
                __WEBPACK_IMPORTED_MODULE_40__image_upload_image_upload_component__["a" /* ImageUploadComponent */],
                __WEBPACK_IMPORTED_MODULE_42__page_not_found_page_not_found_component__["a" /* PageNotFoundComponent */],
                __WEBPACK_IMPORTED_MODULE_43__page_not_found_d_page_not_found_d_component__["a" /* PageNotFoundDComponent */],
                __WEBPACK_IMPORTED_MODULE_44__notifications_notifications_component__["a" /* NotificationsComponent */],
                __WEBPACK_IMPORTED_MODULE_45__statsWidgets_stats_widgets__["a" /* StatsWidgets */],
                __WEBPACK_IMPORTED_MODULE_46__update_parcel_update_parcel_component__["a" /* UpdateParcelComponent */],
                __WEBPACK_IMPORTED_MODULE_47__faq_faq_component__["a" /* FaqComponent */],
                /*Ng2CompleterModule,*/
                __WEBPACK_IMPORTED_MODULE_48__add_marker_add_marker_component__["a" /* AddMarker */],
                __WEBPACK_IMPORTED_MODULE_49__notifications_read_notifications_read_component__["a" /* NotificationsReadComponent */],
                __WEBPACK_IMPORTED_MODULE_50__home_home_component__["a" /* HomeComponent */],
                __WEBPACK_IMPORTED_MODULE_52__rules_rules_component__["a" /* RulesComponent */],
                __WEBPACK_IMPORTED_MODULE_53__rules_advance_rules_advance_component__["a" /* RulesAdvanceComponent */],
                __WEBPACK_IMPORTED_MODULE_54__login_s_login_s_component__["a" /* LoginSComponent */],
                __WEBPACK_IMPORTED_MODULE_55__timeline_component_timeline_component_component__["a" /* Timeline */],
                __WEBPACK_IMPORTED_MODULE_56__forecast_forecast_component__["a" /* ForecastComponent */],
                __WEBPACK_IMPORTED_MODULE_57__rules_delete_rules_delete_component__["a" /* RulesDeleteComponent */],
                __WEBPACK_IMPORTED_MODULE_58__pravila_pravila_component__["a" /* PravilaComponent */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_51_angular2_datatable__["DataTableModule"],
                __WEBPACK_IMPORTED_MODULE_10_ngx_pagination__["a" /* NgxPaginationModule */],
                __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* JsonpModule */],
                __WEBPACK_IMPORTED_MODULE_41_angular2_image_upload__["ImageUploadModule"].forRoot(),
                __WEBPACK_IMPORTED_MODULE_4_ng2_scroll_to__["ScrollToModule"].forRoot(),
                __WEBPACK_IMPORTED_MODULE_28_angular_2_local_storage__["LocalStorageModule"].withConfig({
                    prefix: 'my-app',
                    storageType: 'localStorage'
                }),
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormsModule */],
                __WEBPACK_IMPORTED_MODULE_3__angular_http__["b" /* HttpModule */],
                __WEBPACK_IMPORTED_MODULE_9__app_routing_module__["a" /* AppRoutingModule */],
                __WEBPACK_IMPORTED_MODULE_16_ng2_charts__["ChartsModule"],
                __WEBPACK_IMPORTED_MODULE_20_ng2_datepicker__["a" /* DatePickerModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["b" /* ReactiveFormsModule */],
            ],
            providers: [{ provide: __WEBPACK_IMPORTED_MODULE_7__angular_common__["LocationStrategy"], useClass: __WEBPACK_IMPORTED_MODULE_7__angular_common__["HashLocationStrategy"] }, __WEBPACK_IMPORTED_MODULE_17__auth_guard_service__["a" /* AuthGuard */], __WEBPACK_IMPORTED_MODULE_18__admin_auth_guard_service__["a" /* AdminAuthGuard */], __WEBPACK_IMPORTED_MODULE_19__login_auth_guard__["a" /* LoginAuthGuard */], __WEBPACK_IMPORTED_MODULE_22__AddPlantation_plantation_service__["a" /* PlantationService */], __WEBPACK_IMPORTED_MODULE_23__services_perm_service_service__["a" /* PermService */]],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_5__app_component__["a" /* AppComponent */]]
        }), 
        __metadata('design:paramtypes', [])
    ], AppModule);
    return AppModule;
}());
//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 664:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChartComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ChartComponent = (function () {
    function ChartComponent(http) {
        this.http = http;
        this.lineChartOptions = {
            responsive: true
        };
        this.lineChartColors = [
            {
                backgroundColor: 'rgba(148,159,177,0.2)',
                borderColor: 'rgba(148,159,177,1)',
                pointBackgroundColor: 'rgba(148,159,177,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(148,159,177,0.8)'
            },
            {
                backgroundColor: 'rgba(77,83,96,0.2)',
                borderColor: 'rgba(77,83,96,1)',
                pointBackgroundColor: 'rgba(77,83,96,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(77,83,96,1)'
            },
            {
                backgroundColor: 'rgba(148,159,177,0.2)',
                borderColor: 'rgba(148,159,177,1)',
                pointBackgroundColor: 'rgba(148,159,177,1)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgba(148,159,177,0.8)'
            }
        ];
        this.lineChartLegend = true;
        this.lineChartType = 'line';
    }
    ChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.http.get("stats/data")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lineChartData = data.data;
            _this.lineChartLabels = data.labels;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    // events
    ChartComponent.prototype.chartClicked = function (e) {
        console.log(e);
    };
    ChartComponent.prototype.chartHovered = function (e) {
        console.log(e);
    };
    ChartComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'chart',
            template: __webpack_require__(775)
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object])
    ], ChartComponent);
    return ChartComponent;
    var _a;
}());
//# sourceMappingURL=chart-component.js.map

/***/ }),

/***/ 665:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FilterPipe; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var FilterPipe = (function () {
    function FilterPipe() {
    }
    FilterPipe.prototype.transform = function (vrste, term) {
        if (term === undefined)
            return vrste;
        return vrste.filter(function (vrsta) {
            if (vrsta.name && vrsta.surname)
                return (vrsta.name.toLowerCase().includes(term.toLowerCase()) || vrsta.surname.toLowerCase().includes(term.toLowerCase()));
            else
                return vrsta.name.toLowerCase().includes(term.toLowerCase());
        });
    };
    FilterPipe = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'filter'
        }), 
        __metadata('design:paramtypes', [])
    ], FilterPipe);
    return FilterPipe;
}());
//# sourceMappingURL=filter.pipe.js.map

/***/ }),

/***/ 666:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return states; });
var states = [
    { currency: "Euro", code: "EUR" },
    { currency: "U.S. Dollar", code: "USD" },
    { currency: "U.K. Pound Sterling", code: "GBP" },
    { currency: "Japanese Yen", code: "JPY" },
    { currency: "Canadian Dollar	", code: "CAD	" },
    { currency: "Australian Dollar", code: "AUD" },
    { currency: "Swiss Franc", code: "CHF" },
    { currency: "Nigerian Naira", code: "NGN" },
    { currency: "CFP Franc", code: "XPF" },
    { currency: "Ghanaian Cedi", code: "GHS" },
    { currency: "Algerian Dinar", code: "DZD" },
    { currency: "Jamaican Dollar", code: "JMD" },
    { currency: "Botswana Pula", code: "BWP" },
    { currency: "Neth. Antillean Guilder", code: "ANG" },
    { currency: "Chilean Peso", code: "CLP" },
    { currency: "Serbian Dinar", code: "RSD" },
    { currency: "Danish Krone", code: "DKK" },
    { currency: "Belarussian Ruble", code: "BYN" },
    { currency: "Indian Rupee", code: "INR" },
    { currency: "New Turkmenistan Manat", code: "TMT" },
    { currency: "Kazakhstani Tenge", code: "KZT" },
    { currency: "Ukrainian Hryvnia", code: "UAH" },
    { currency: "Libyan Dinar", code: "LYD" },
    { currency: "Lebanese Pound", code: "LBP" },
    { currency: "Nepalese Rupee", code: "NPR" },
    { currency: "Bolivian Boliviano", code: "BOB" },
    { currency: "Omani Rial", code: "OMR" },
    { currency: "Qatari Rial", code: "QAR" },
    { currency: "Singapore Dollar", code: "SGD" },
    { currency: "Swedish Krona", code: "SEK" },
    { currency: "Trinidad Tobago Dollar", code: "TTD" },
    { currency: "Venezuelan Bolivar", code: "VEF" },
    { currency: "Dominican Peso", code: "DOP" },
    { currency: "Croatian Kuna", code: "HRK" },
    { currency: "Mexican Peso", code: "MXN" },
    { currency: "West African CFA Franc", code: "XOF" },
    { currency: "Papua New Guinean kina", code: "PGK" },
    { currency: "Bahamian Dollar", code: "BSD" },
    { currency: "Fiji Dollar", code: "FJD" },
    { currency: "Honduran Lempira", code: "HNL" },
    { currency: "Bahrain Dinar", code: "BHD" },
    { currency: "Myanma Kyat", code: "MMK" },
    { currency: "Peruvian Nuevo Sol", code: "PEN" },
    { currency: "Czech Koruna", code: "CZK" },
    { currency: "Armenia Dram", code: "AMD" },
    { currency: "Icelandic Krona", code: "ISK" },
    { currency: "Moldova Lei", code: "MDL" },
    { currency: "Israeli New Sheqel", code: "ILS" },
    { currency: "Uzbekistan Sum", code: "UZS" },
    { currency: "Kuwaiti Dinar", code: "KWD" },
    { currency: "Jordanian Dinar", code: "JOD" },
    { currency: "Mauritian Rupee", code: "MUR" },
    { currency: "Uruguayan Peso", code: "UYU" },
    { currency: "Norwegian Krone", code: "NOK" },
    { currency: "Nicaraguan Córdoba", code: "NIO" },
    { currency: "Polish Zloty", code: "PLN" },
    { currency: "Saudi Riyal", code: "SAR" },
    { currency: "Sri Lanka Rupee", code: "LKR" },
    { currency: "Thai Baht", code: "THB" },
    { currency: "U.A.E Dirham", code: "AED" },
    { currency: "Brazilian Real", code: "BRL" },
    { currency: "Romanian New Leu", code: "RON" },
    { currency: "Hong Kong Dollar", code: "HKD" },
    { currency: "Central African CFA Franc", code: "XAF" },
    { currency: "Vietnamese Dong", code: "VND" },
    { currency: "Argentine Peso", code: "ARS" },
    { currency: "Chinese Yuan", code: "CNY" },
    { currency: "East Caribbean Dollar", code: "XCD" },
    { currency: "Guatemalan Quetzal", code: "GTQ" },
    { currency: "Moroccan Dirham", code: "MAD" },
    { currency: "Brunei Dollar", code: "BND" },
    { currency: "Panamanian Balboa", code: "PAB" },
    { currency: "Colombian Peso", code: "COP" },
    { currency: "Azerbaijan Manat", code: "AZN" },
    { currency: "Hungarian Forint", code: "HUF" },
    { currency: "Kyrgyzstan Som", code: "KGS" },
    { currency: "Indonesian Rupiah", code: "IDR" },
    { currency: "Tajikistan Ruble", code: "TJS" },
    { currency: "South Korean Won", code: "KRW" },
    { currency: "Egyptian Pound", code: "EGP" },
    { currency: "Malaysian Ringgit", code: "MYR" },
    { currency: "Paraguayan Guaraní", code: "PYG" },
    { currency: "New Zealand Dollar", code: "NZD" },
    { currency: "Costa Rican Colón", code: "CRC" },
    { currency: "Pakistani Rupee", code: "PKR" },
    { currency: "Russian Rouble", code: "RUB" },
    { currency: "South African Rand", code: "ZAR" },
    { currency: "Tunisian Dinar", code: "TND" },
    { currency: "Barbadian Dollar", code: "BBD" },
    { currency: "Bulgarian Lev", code: "BGN" },
    { currency: "Turkish Lira", code: "TRY" },
    { currency: "Philippine Peso", code: "PHP" },
    { currency: "New Taiwan Dollar", code: "TWD" }
];
//# sourceMappingURL=states.js.map

/***/ }),

/***/ 667:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_jquery__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MeniComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var MeniComponent = (function () {
    function MeniComponent(permService, http, localStorageService, router, fb) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.fb = fb;
        this.vidljivost = false;
        this.meniVidljiv = false;
        this.prvihPet = [];
        this.prvihPetExp = [];
        this.prvihPetPoruka = [];
        this.poslatePoruke = [];
        this.primljenePoruke = [];
        this.porukaPoslata = false;
        this.obavestenjaVidljiva = false;
        this.obavestenjaStigla = false;
        this.obavestenja = [];
        this.expObavestenja = [];
        this.procitano = false;
        this.obrisano = false;
        this.isOwner = false;
        this.porukeVidljive = false;
        this.admin = false;
        this.showMess = false;
        this.ukupnoObavestenja = 0;
        this.newCss = false;
        this.lang = "srb";
        this.poslatZahtev = false;
        this.postojiUBazi = false;
        this.leviMeniVidljiv = true;
        this.meniMultiLang = {
            "srb": [
                /*0*/ { "mojePlantaze": "Plantaže i Imanja" },
                /*1*/ { "Dodaj Plantaze": " Dodaj Plantaže i Imanja" },
                /*2*/ { "Moji Ljudi": " Moji Ljudi" },
                /*3*/ { "Dodaj tip": " Dodaj tip" },
                /*4*/ { "Meraci": " Merači" },
                /*5*/ { "FAQ": " FAQ" },
                /*6*/ { "O nama": "O nama" },
                /*7*/ { "Kontakt": "Kontakt" },
                /*8*/ { "Ponuda za posao": "Ponuda za posao" },
                /*9*/ { "Prihvati": "Prihvati" },
                /*10*/ { "Odbij": "Odbij" },
                /*11*/ { "Pogledaj sve": "Pogledaj sve" },
                /*12*/ { "Profil": "Profil" },
                /*13*/ { "Podešavanja": "Podešavanja" },
                /*14*/ { "Traži vlasništvo": "Traži vlasništvo" },
                /*15*/ { "Izloguj se": "Izloguj se" },
                /*16*/ { "Kontaktirajte nas": "Kontaktirajte nas" },
                /*17*/ { "Ime": "Ime" },
                /*18*/ { "Naslov": " Naslov" },
                /*19*/ { " Vas E-Mail": " Vas E-Mail" },
                /*20*/ { "Poruka": " Poruka" },
                /*21*/ { "Pošalji": "Pošalji" },
                /*22*/ { "Izadji": "Izađi" },
                /*23*/ { "O nama": "O nama" },
                /*24*/ { "O nama text": "Uz pomoc mladog i entuzijaztičnog tima sastavljenog od dva Đoleta, jednog Jovana,jedne Jovane i jednog Bojana kreirana je aplikacija koja će zadovoljiti sve vaše potrebe vezane za poljoprivredu" },
                /*25*/ { "Odabir teme aplikacije": "Odabir teme aplikacije" },
                /*26*/ { "Odabir jezika": "Odabir jezika" },
                /*27*/ { "Srpski": "Srpski" },
                /*28*/ { "Engleski": "English" },
                /*29*/ { "Admin strana": "Admin strana" },
                /*30*/ { "Vlasnik": "Vlasnik" },
                /*31*/ { "zeli da Vam da ulogu": "želi da Vam da ulogu:" },
                /*32*/ { "Finansije": "Beležnica" },
                /*33*/ { "Pocetna strana": "Početna strana" },
                /*34*/ { "Posalji zahtev za vlasnistvo": "Pošalji zahtev za vlasništvo" },
                /*35*/ { "Da": "Da" },
                /*36*/ { "Sigurni": "Da li ste sigurni da želite da pošaljete zahtev?" },
                /*37*/ { "forecast": "Vremenska prognoza" },
                /*38*/ { "pravila": "Pravila" },
                { "je promenio vašu ulogu u": "je promenio vašu ulogu u " },
                { "promena uloge": "Promena uloge" },
                { "odbaci": "Odbaci" }
            ],
            "eng": [
                { "mojePlantaze": " My Plantations And Properties" },
                { "Dodaj Plantaze": " Add Plantations And Properties" },
                { "Moji Ljudi": " My People" },
                { "Dodaj tip": " Add Type" },
                { "Meraci": " Sensors" },
                { "FAQ": " FAQ" },
                { "O nama": "About us" },
                { "Kontakt": "Contact" },
                { "Ponuda za posao": "Job offer" },
                { "Prihvati": "Accept" },
                { "Odbij": "Reject" },
                { "Pogledaj sve": "see all" },
                { "Profil": "Profile" },
                { "Podešavanja": "Setup" },
                { "Traži vlasništvo": "Request ownership" },
                { "Izloguj se": "Logout" },
                { "Kontaktirajte nas": "Contact us" },
                { "Ime": "Name" },
                { "Naslov": " Subject" },
                { "Vas E-Mail": " E-Mail" },
                { "Poruka": "Message" },
                { "Pošalji": "Send" },
                { "Izadji": "Exit" },
                { "O nama": "About us" },
                { "O nama text": "some text" },
                { "Odabir teme aplikacije": "Choose color of the app" },
                { "Odabir jezika": "Choose language" },
                { "Srpski": "Srpski" },
                { "Engleski": "English" },
                { "Admin strana": "Admin page" },
                { "Vlasnik": "Owner" },
                /*31*/ { "zeli da Vam da ulogu": "Wants to employ you as:" },
                /*32*/ { "Finansije": "Notebook" },
                /*33*/ { "Pocetna strana": "Home page" },
                /*34*/ { "Posalji zahtev za vlasnistvo": "Send request for ownership" },
                /*35*/ { "Da": "Yes" },
                /*36*/ { "Sigurni": "Are you sure you want to send a request?" },
                /*37*/ { "forecast": "Forecast" },
                /*38*/ { "pravila": " Rules" },
                { "je promenio vašu ulogu u": "has changed your role to " },
                { "promena uloge": "Role change" },
                { "odbaci": "Dismiss" }
            ],
        };
        console.log(this.router.url);
        this.createSendEmailForm();
    }
    MeniComponent.prototype.ngAfterViewInit = function () {
        __WEBPACK_IMPORTED_MODULE_6_jquery__(document).ready(function () {
            var colorButton = __WEBPACK_IMPORTED_MODULE_6_jquery__(".colors li");
            colorButton.on("click", function () {
                // Remove class from currently active button
                __WEBPACK_IMPORTED_MODULE_6_jquery__(".colors > li").removeClass("active-color");
                // Add class active to clicked button
                __WEBPACK_IMPORTED_MODULE_6_jquery__(this).addClass("active-color");
                // Get background color of clicked
                var newColor = __WEBPACK_IMPORTED_MODULE_6_jquery__(this).attr("data-color");
                // Change background of everything with class .bg-color
                $(".navbar-nav> li.active > a").css("background-color", newColor);
                $(".panel-heading").css("background-color", newColor);
                // Change color of everything with class .text-color
                $(".text-color").css("color", newColor);
                ;
            });
        });
    };
    MeniComponent.prototype.createSendEmailForm = function () {
        this.sendEmailForm = this.fb.group({
            ime: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required],
            naslov: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required],
            email: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required],
            poruka: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["e" /* Validators */].required]
        });
    };
    MeniComponent.prototype.skarijMeni = function () {
        this.leviMeniVidljiv = !this.leviMeniVidljiv;
        if (this.leviMeniVidljiv)
            this.localStorageService.set("meniV", null);
        else
            this.localStorageService.set("meniV", this.leviMeniVidljiv);
        if (!this.leviMeniVidljiv) {
            $("#wrapper").css({
                paddingLeft: '0px'
            });
        }
        else {
            $("#wrapper").css({
                paddingLeft: '225px'
            });
        }
    };
    MeniComponent.prototype.toggleFullscreen = function () {
        var isInFullScreen = (document.fullscreenElement && document.fullscreenElement !== null) ||
            (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||
            (document.mozFullScreenElement && document.mozFullScreenElement !== null) ||
            (document.msFullscreenElement && document.msFullscreenElement !== null);
        var docElm = document.documentElement;
        if (!isInFullScreen) {
            if (docElm.requestFullscreen) {
                docElm.requestFullscreen();
            }
            else if (docElm.mozRequestFullScreen) {
                docElm.mozRequestFullScreen();
            }
            else if (docElm.webkitRequestFullScreen) {
                docElm.webkitRequestFullScreen();
            }
            else if (docElm.msRequestFullscreen) {
                docElm.msRequestFullscreen();
            }
        }
        else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            }
            else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            }
            else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            }
            else if (document.msExitFullscreen) {
                document.msExitFullscreen();
            }
        }
    };
    MeniComponent.prototype.logout = function () {
        var _this = this;
        this.http.get("sessions/logout")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.localStorageService.set("logged", false);
            _this.router.navigate(['./login']);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.odgovori = function (owner, worker, role, accepted) {
        var _this = this;
        this.http.get("users/dodajRadnika/" + owner + "/" + worker + "/" + role + "/" + accepted)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (accepted == 1)
                location.reload();
            else
                (_this.uzmiObavestenja());
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.obrisiObavestenje = function (id) {
        var _this = this;
        this.http.get("users/obrisiObavestenje/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data == true) {
                _this.uzmiObavestenja();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.goToMessage = function (poruka) {
        this.selectedMessage = { id: poruka.id };
        this.router.navigate(['./msg', this.selectedMessage]);
    };
    MeniComponent.prototype.prikaziPlantazu = function () {
        alert("prikazi je legendo!");
    };
    MeniComponent.prototype.meniToggle = function () {
        this.obavestenjaVidljiva = false;
        this.porukeVidljive = false;
        this.showMess = false;
        this.meniVidljiv = !this.meniVidljiv;
    };
    MeniComponent.prototype.obavestenjaToggle = function () {
        this.meniVidljiv = false;
        this.porukeVidljive = false;
        this.showMess = false;
        this.obavestenjaVidljiva = !this.obavestenjaVidljiva;
    };
    MeniComponent.prototype.porukeToggle = function () {
        this.meniVidljiv = false;
        this.obavestenjaVidljiva = false;
        this.showMess = !this.showMess;
        this.porukeVidljive = !this.porukeVidljive;
    };
    MeniComponent.prototype.ucitajPodatkeOKorisniku = function () {
        var _this = this;
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.pom = function () {
        window.alert("tu sam!");
    };
    MeniComponent.prototype.ngOnInit = function () {
        var _this = this;
        var i;
        this.selectedLang = this.meniMultiLang[this.lang];
        if (this.localStorageService.get("meniV") !== null) {
            console.log("uuuuuuuuuuuuuuuu");
            i = this.localStorageService.get("meniV");
            this.leviMeniVidljiv = i;
            if (!this.leviMeniVidljiv) {
                $("#wrapper").css({
                    paddingLeft: '0px'
                });
            }
            else {
                $("#wrapper").css({
                    paddingLeft: '225px'
                });
            }
        }
        this.permService.getPerms().subscribe(function (dat) {
            _this.dozvoleMeni = dat;
            console.log("dozvole");
            console.log(_this.dozvoleMeni.guest);
            if (_this.dozvoleMeni.guest != undefined)
                _this.localStorageService.set("guest", _this.dozvoleMeni.guest);
            _this.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                if (_this.color === undefined)
                    _this.cssStyle = "";
                _this.uzmiLang();
                if (_this.user.success === undefined) {
                    var pom3;
                    _this.http.get("users/proveriKoJeLogovan/" + _this.user.id)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        _this.http.get("permisions/userIsOwner")
                            .map(function (res) { return res.json(); })
                            .subscribe(function (data) {
                            _this.isOwner = data.owner;
                        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                        pom3 = data;
                        if (pom3.success) {
                            _this.admin = true;
                        }
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                    _this.vidljivost = true;
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            _this.uzmiObavestenja();
            _this.getMessages();
            _this.getSentMessages();
            _this.uzmiExpObavestenja();
        });
    };
    MeniComponent.prototype.uzmiObavestenja = function () {
        var _this = this;
        this.prvihPet = [];
        this.obavestenja = [];
        this.http.get("users/dohvatiObavestenja")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.obavestenja = data;
            if (_this.obavestenja !== undefined) {
                console.log("stiglo");
                for (var i = 0; i < 3; i++)
                    if (_this.obavestenja[i] !== undefined)
                        _this.prvihPet.push(_this.obavestenja[i]);
                    else
                        break;
                _this.obavestenjaStigla = true;
                _this.ukupnoObavestenja = _this.obavestenja.length;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.uzmiExpObavestenja = function () {
        var _this = this;
        this.prvihPetExp = [];
        this.expObavestenja = [];
        this.http.get("users/expNotifications")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.expObavestenja = data.not;
                if (_this.expObavestenja.length > 0) {
                    for (var i = 0; i < 3 - _this.obavestenja.length; i++)
                        if (_this.expObavestenja[i] !== undefined)
                            _this.prvihPetExp.push(_this.expObavestenja[i]);
                        else
                            break;
                    _this.obavestenjaStigla = true;
                    _this.ukupnoObavestenja = _this.expObavestenja.length + _this.obavestenja.length;
                    console.log(_this.expObavestenja);
                }
            }
            else {
                _this.ukupnoObavestenja = _this.obavestenja.length;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.notificationSeen = function (id) {
        var _this = this;
        this.http.get("users/expNotificationsSeen/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.uzmiExpObavestenja();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.getMessages = function () {
        var _this = this;
        this.http.get('messages/getMessages')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.primljenePoruke = data;
            for (var i = 0; i < _this.primljenePoruke.length && _this.prvihPetPoruka.length < 3; i++) {
                if (_this.primljenePoruke[i] !== undefined && _this.primljenePoruke[i] !== null && _this.primljenePoruke[i].read == 1)
                    _this.prvihPetPoruka.push(_this.primljenePoruke[i]);
            }
            _this.brojPrimljenih();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.getSentMessages = function () {
        var _this = this;
        this.http.get('messages/getSentMessages')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.poslatePoruke = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.brojPrimljenih = function () {
        var poruke = this.primljenePoruke.filter(function (x) { return x.read == 1; });
        this.brojPoruka = poruke.length;
        console.log(poruke.length);
    };
    MeniComponent.prototype.sendMessage = function (username, text) {
        var _this = this;
        this.http.get("messages/sendMessage/" + username + "/" + text)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success)
                _this.porukaPoslata = true;
            else
                _this.porukaPoslata = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.markAsRead = function (procitanePoruke) {
        var _this = this;
        this.http.get("messages/markAsRead/" + procitanePoruke)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success)
                _this.procitano = true;
            else
                _this.procitano = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.deleteMessages = function (porukeZaBrisanje) {
        var _this = this;
        this.http.get("messages/deleteMessages/" + porukeZaBrisanje)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success)
                _this.obrisano = true;
            else
                _this.obrisano = false;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.posalji = function () {
        var pom3;
        var sendEmail = this.sendEmailForm.value;
        this.http.get("users/posaljiMail2/" + sendEmail.ime + "/" + sendEmail.naslov + "/" + sendEmail.email + "/" + sendEmail.poruka)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            if (pom3.success) {
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.setBoje = function (color) {
        console.log(color);
        this.newestColor = color;
        this.newCss = true;
        this.cssStyle = "Green";
        console.log(this.cssStyle);
        console.log(this.newCss);
        console.log(this.user.id);
        this.http.get("users/insertColor/" + this.user.id + "/" + this.newestColor + "/" + this.newestColor)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            location.reload();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.onChangeLang = function (value) {
        this.selectedLangInOpt = value;
    };
    MeniComponent.prototype.setLang = function (setLang) {
        var _this = this;
        this.http.get("users/insertLang/" + this.user.id + "/" + setLang)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = setLang;
            _this.uzmiLang();
            location.reload();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent.prototype.posaljiZahtev1 = function () {
        var _this = this;
        var pom1;
        this.http.get("users/proveriZahtevv/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            if (pom1.success) {
                var pom;
                _this.http.get("users/posaljiZahtevAdminu/" + _this.user.id)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom = data;
                    if (pom.success) {
                        _this.poslatZahtev = true;
                        _this.postojiUBazi = false;
                    }
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            }
            else {
                _this.postojiUBazi = true;
                _this.poslatZahtev = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    MeniComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-meni',
            template: __webpack_require__(785),
            styles: [__webpack_require__(745)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_5__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_5__angular_router__["b" /* Router */]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormBuilder */]) === 'function' && _e) || Object])
    ], MeniComponent);
    return MeniComponent;
    var _a, _b, _c, _d, _e;
}());
//# sourceMappingURL=meni.component.js.map

/***/ }),

/***/ 668:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageNotFoundDComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PageNotFoundDComponent = (function () {
    function PageNotFoundDComponent(router) {
        this.router = router;
    }
    PageNotFoundDComponent.prototype.ngOnInit = function () {
    };
    PageNotFoundDComponent.prototype.vratiNaPrikaz = function () {
        this.router.navigate(['./user']);
    };
    PageNotFoundDComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-page-not-found-d',
            template: __webpack_require__(790),
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* Router */]) === 'function' && _a) || Object])
    ], PageNotFoundDComponent);
    return PageNotFoundDComponent;
    var _a;
}());
//# sourceMappingURL=page-not-found-d.component.js.map

/***/ }),

/***/ 669:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jquery__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RulesAdvanceComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var RulesAdvanceComponent = (function () {
    function RulesAdvanceComponent(permService, http, localStorageService, router) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.uspesnoUneti = false;
        this.istoIme = false;
        this.smeDaDodaje = false;
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        this.sviVlasnici = [];
        this.dozvoleKodGazde = [];
        this.podTipovi = [];
        this.atributi = [];
        this.criticalMaxS1 = 10;
        this.criticalMinS1 = 10;
        this.perm = [];
        this.dani = [];
        this.newCss = false;
        this.lang = "srb";
        this.unesiIme = false;
        this.unesiVlasnikaPlantaze = false;
        this.unesiImanje = false;
        this.unesiVrstu = false;
        this.unesiPodVrstu = false;
        this.unesiProizvodjaca = false;
        this.unesiPoligon = false;
        this.nijeDodato = false;
        this.tipovi = [];
        this.newDay = [];
        this.dayCount = 1;
        this.activeDay = 1;
        this.refDay = 1;
        this.dan1 = [];
        this.dan2 = [];
        this.dan3 = [];
        this.dan4 = [];
        this.dan5 = [];
        this.pom2 = false;
        this.pom3 = false;
        this.pom4 = false;
        this.pom5 = false;
        this.tu = false;
        this.nisuPopunjena = false;
        this.pravila = true;
        this.customPravila = false;
        this.napredno = false;
        this.meniMultiLang = {
            "srb": [
                { "num": "0", "text": "Unos pravila" },
                { "num": "1", "text": "Izaberite vrstu" },
                { "num": "2", "text": "Izaberite podvrstu" },
                { "num": "3", "text": "Izaberite vrstu merenja" },
                { "num": "4", "text": "Unesi podatke za dan" },
                { "num": "5", "text": "DAN" },
                { "num": "6", "text": "-referentni dan" },
                { "num": "7", "text": "Dodajte pravila za dan" },
                { "num": "8", "text": "Novi dan" },
                { "num": "9", "text": "Postavi kao referentni dan" },
                { "num": "10", "text": "Ime pravila " },
                { "num": "11", "text": "Obaveštenje " },
                { "num": "12", "text": "Posledica " },
                { "num": "13", "text": "Sačuvaj " },
                { "num": "14", "text": "Poništi " },
                { "num": "15", "text": "Pravilo je uspesno sacuvano." },
                { "num": "16", "text": "Već postoji Vaše pravilo sa takvim imenom." },
                { "num": "17", "text": "Morate popuniti sva polja." }
            ],
            "eng": [
                { "num": "0", "text": "Rules entry" },
                { "num": "1", "text": "Choose type" },
                { "num": "2", "text": "Choose subtype" },
                { "num": "3", "text": "Choose type of measurement" },
                { "num": "4", "text": "Add data for day" },
                { "num": "5", "text": "DAY" },
                { "num": "6", "text": "-reference day" },
                { "num": "7", "text": "Add rule for the day" },
                { "num": "8", "text": "New day" },
                { "num": "9", "text": "Set as reference day" },
                { "num": "10", "text": "Rule name" },
                { "num": "11", "text": "Notification" },
                { "num": "12", "text": "Consequence" },
                { "num": "13", "text": "Save" },
                { "num": "14", "text": "Dismiss" },
                { "num": "15", "text": "The rule was successfully saved." },
                { "num": "16", "text": "There is already your rule with that name." },
                { "num": "17", "text": "You must fill in all fields." }
            ]
        };
        console.log(this.router.url);
    }
    RulesAdvanceComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.dani = [];
        this.dan1 = [];
        this.dan2 = [];
        this.dan3 = [];
        this.dan4 = [];
        this.dan5 = [];
        this.dani.push(this.dan1);
        this.dani.push(this.dan2);
        this.dani.push(this.dan3);
        this.dani.push(this.dan4);
        this.dani.push(this.dan5);
        this.selectedLang = this.meniMultiLang[this.lang];
        this.newDay[1] = "";
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.permService.getPerms().subscribe(function (dat) {
            _this.dozvoleMeni = dat;
            var pom;
            var i;
            if (_this.dozvoleMeni.guest != undefined)
                _this.localStorageService.set("guest", _this.dozvoleMeni.guest);
            _this.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                if (_this.color === undefined)
                    _this.cssStyle = "";
                _this.uzmiLang();
                /*    this.http.get(`users/vratiTipove1/${this.user.id}`)
                      .map(res => res.json())
                      .subscribe(data => {
                        pom = data;
                        for (i = 0; i < pom.length; i++)
                          this.tipovi[i] = pom[i];
                        this.tipIzabran = pom[0].id;
                      },
                      err => console.log(err),
                      () => console.log('Completed'));*/
                _this.userIsOwner();
                _this.callType2();
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        });
    };
    RulesAdvanceComponent.prototype.ponovoPostavi = function () {
        this.dani = [];
        this.dan1 = [];
        this.dan2 = [];
        this.dan3 = [];
        this.dan4 = [];
        this.dan5 = [];
        this.dani.push(this.dan1);
        this.dani.push(this.dan2);
        this.dani.push(this.dan3);
        this.dani.push(this.dan4);
        this.dani.push(this.dan5);
    };
    RulesAdvanceComponent.prototype.userIsOwner = function () {
        var _this = this;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            console.log(_this.isOwner + " u ng on init add types");
            _this.getOwners();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent.prototype.getOwners = function () {
        var _this = this;
        this.http.get("users/getOwners")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviVlasnici = data;
            _this.getPerms();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent.prototype.getPerms = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " " + data.dozvole);
            _this.perm = data;
            if (data.dozvole !== undefined && data.dozvole.length > 0) {
                _this.dozvoleKodGazde = data.dozvole.filter(function (x) { return x.vrednosti.tipDodavanje == true; });
                if (_this.dozvoleKodGazde.length > 0 || _this.isOwner) {
                    _this.smeDaDodaje = true;
                    _this.spoji();
                }
            }
            else if (_this.isOwner) {
                _this.smeDaDodaje = true;
                _this.spoji();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent.prototype.spoji = function () {
        console.log("SPOJI");
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        for (var i = 0; this.sviVlasnici !== undefined && i < this.sviVlasnici.length; i++)
            for (var j = 0; this.dozvoleKodGazde !== undefined && j < this.dozvoleKodGazde.length; j++) {
                console.log(this.sviVlasnici[i].idOwner + " " + this.dozvoleKodGazde[j].vlasnik);
                if (this.sviVlasnici[i].idOwner == this.dozvoleKodGazde[j].vlasnik) {
                    console.log(this.sviVlasnici[i]);
                    // var noviID = {id:this.sviVlasnici[i].idOwner};
                    var noviG = {
                        id: this.sviVlasnici[i].idOwner,
                        name: this.sviVlasnici[i].name,
                        surname: this.sviVlasnici[i].surname,
                        username: this.sviVlasnici[i].username,
                        email: this.sviVlasnici[i].email
                    };
                    this.komeMozeDaDoda.push(noviG);
                    this.idVlasnika.push(this.sviVlasnici[i].idOwner);
                    console.log(this.komeMozeDaDoda[0]);
                }
            }
        if (this.isOwner) {
            var noviG = {
                id: this.user.id,
                name: this.user.name,
                surname: this.user.surname,
                username: this.user.username,
                email: this.user.email
            };
            this.komeMozeDaDoda.unshift(noviG);
            this.idVlasnika.unshift(this.user.id);
        }
        this.tipovi = this.getTypes(this.idVlasnika);
        // var prazanClan = { id: -1, name: "", idUser: -1 }
        //this.tipovi.unshift(prazanClan);
    };
    RulesAdvanceComponent.prototype.getTypes = function (id) {
        var _this = this;
        console.log(this.user.id + " get tajps");
        this.http.get("types/getTypes1/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tipovi = data;
            for (var i = 0; i < _this.tipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.tipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.tipovi[i].idUser))
                    _this.tipovi[i].smeDaBrise = true;
                else
                    _this.tipovi[i].smeDaBrise = false;
            }
            _this.callType(_this.tipovi[0] == undefined ? undefined : _this.tipovi[0].id);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.tipovi;
    };
    RulesAdvanceComponent.prototype.getSubtypesById = function (id) {
        var _this = this;
        this.http.get("types/getSubtypes/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.podTipovi = data;
            for (var i = 0; i < _this.podTipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.podTipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.podTipovi[i].idUser))
                    _this.podTipovi[i].smeDaBrise = true;
                else
                    _this.podTipovi[i].smeDaBrise = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        console.log(" pa podtipovi" + this.podTipovi);
        return this.podTipovi;
    };
    RulesAdvanceComponent.prototype.callType = function (value) {
        var _this = this;
        this.podTipovi = [];
        if (value == undefined)
            return;
        var pom;
        var i;
        this.http.get("users/prikaziPodtip2/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            for (i = 0; i < pom.length; i++)
                _this.podTipovi[i] = pom[i];
            if (pom[0] != undefined)
                _this.podtipIzabran = pom[0].id;
            else
                _this.podtipIzabran = undefined;
            _this.callType2();
            _this.callType3(_this.atributIzabran);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent.prototype.izaberiPodTip = function (value) {
        this.podtipIzabran = value;
    };
    RulesAdvanceComponent.prototype.callType2 = function () {
        var _this = this;
        var pom;
        var i;
        this.http.get("users/vratiAtribute")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            for (i = 0; i < pom.length; i++)
                _this.atributi[i] = pom[i];
            _this.atributIzabran = _this.atributi[0].name;
            _this.callType3(_this.atributIzabran);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent.prototype.callType3 = function (value) {
        var _this = this;
        if (value == undefined || this.podtipIzabran == undefined)
            return;
        this.atributIzabran = value;
        var pom7;
        var i;
        var pom8 = [];
        this.http.get("users/prikaziVrednostiSlajderrAdvance/" + value + "/" + this.podtipIzabran)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS1 = pom8[0].defaultCritMax;
                _this.criticalMinS1 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS1 = pom8[0].optimalMin;
                    _this.optMaxS1 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS1 = _this.criticalMinS1;
                    _this.optMaxS1 = _this.criticalMaxS1;
                }
            }
            _this.fuja();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent.prototype.unesiPravilo = function () {
        var pom2;
        document.getElementById('pravilo' + this.activeDay + '').innerHTML += '<link rel="stylesheet" href="css/mainStyle.css"><div class="col-md-3 no-left-padding no-right-padding clickMe"> <div  class="tile tile-primary">Pravilo</div>  <div  class="tile tile-primary">' + this.atributIzabran + '<p>Kriticne vrednosti: ' + this.criticalMinS1 + '-' + this.criticalMaxS1 + '</p><p>Optimalne vrednosti:' + this.optMinS1 + '-' + this.optMaxS1 + '</p> </div>  </div>';
        var pravilo = { merenje: this.atributIzabran, critMin: this.criticalMinS1, critMax: this.criticalMaxS1, optMin: this.optMinS1, optMax: this.optMaxS1 };
        /*  var dan = { nizMerenja: [], cekiran: false };*/
        if (this.activeDay == 1) {
            this.dani[0].push(pravilo);
        }
        if (this.activeDay == 2 && this.pom2 == false) {
            this.pom2 = true;
        }
        if (this.activeDay == 2) {
            this.dani[1].push(pravilo);
        }
        if (this.activeDay == 3 && this.pom3 == false) {
            this.pom3 = true;
        }
        if (this.activeDay == 3) {
            this.dani[2].push(pravilo);
        }
        if (this.activeDay == 4 && this.pom4 == false) {
            this.pom4 = true;
        }
        if (this.activeDay == 4) {
            this.dani[3].push(pravilo);
        }
        if (this.activeDay == 5 && this.pom5 == false) {
            this.pom3 = true;
        }
        if (this.activeDay == 5) {
            this.dani[4].push(pravilo);
        }
    };
    RulesAdvanceComponent.prototype.resetuj = function () {
        this.nisuPopunjena = false;
        this.istoIme = false;
    };
    RulesAdvanceComponent.prototype.Sacuvaj = function () {
        var _this = this;
        var pom2;
        var i;
        this.zaJSON = JSON.stringify(this.dani);
        if (this.ime == undefined || this.obavestenje == undefined || this.posledica == undefined || this.ime == "" || this.obavestenje == "" || this.posledica == "" || this.podtipIzabran == undefined) {
            this.nisuPopunjena = true;
            setTimeout(function () {
                _this.nisuPopunjena = false;
            }, 3000);
        }
        else {
            this.http.get("users/unesiPodatkee/" + this.zaJSON + "/" + this.refDay + "/" + this.ime + "/" + this.obavestenje + "/" + this.posledica + "/" + this.podtipIzabran + "/" + this.user.id)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                pom2 = data;
                if (pom2.success == true) {
                    _this.ime = "";
                    _this.posledica = "";
                    _this.obavestenje = "";
                    _this.uspesnoUneti = true;
                    _this.istoIme = false;
                    _this.dani = [];
                    setTimeout(function () {
                        _this.uspesnoUneti = false;
                    }, 3000);
                }
                else {
                    _this.istoIme = true;
                    _this.uspesnoUneti = false;
                    setTimeout(function () {
                        _this.istoIme = false;
                    }, 3000);
                }
                for (i = 1; i <= 5; i++) {
                    var a = document.getElementById('pravilo' + i + '');
                    while (a !== undefined && a !== null && a.firstChild) {
                        a.removeChild(a.firstChild);
                    }
                }
                _this.ponovoPostavi();
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
            this.dani = [];
        }
    };
    /* Ponisti() {
       var i: number;
       for (i = 1; i <= 5; i++) {
         var a = document.getElementById('pravilo' + i);
         while (a.firstChild) {
           a.removeChild(a.firstChild);
         }
       }
       this.ponovoPostavi();
     }*/
    RulesAdvanceComponent.prototype.Ponisti = function () {
        var i;
        for (i = 1; i <= 5; i++) {
            var a = document.getElementById('pravilo' + i + '');
            while (a !== undefined && a !== null && a.firstChild) {
                a.removeChild(a.firstChild);
            }
        }
        this.ponovoPostavi();
    };
    RulesAdvanceComponent.prototype.test = function () {
        console.log("klikkkk");
    };
    RulesAdvanceComponent.prototype.ref = function (dan) {
        var i;
        this.refDay = dan;
        for (i = 1; i <= 5; i++)
            __WEBPACK_IMPORTED_MODULE_1_jquery__('.ref' + i + '').removeClass('ref');
        __WEBPACK_IMPORTED_MODULE_1_jquery__('.ref' + dan + '').addClass('ref');
    };
    RulesAdvanceComponent.prototype.changeDay = function (dan) {
        this.activeDay = dan;
        /*  var i;
        for(i=1;i<=5;i++)
            jQuery('.dan'+i+'').addClass('danD'+i+'');
    
        jQuery('.dan'+i+'').removeClass('danD'+i+'');*/
    };
    RulesAdvanceComponent.prototype.anotherDay = function () {
        this.dayCount++;
        console.log(this.dayCount);
        $('.dan' + this.dayCount + '').show();
    };
    RulesAdvanceComponent.prototype.promeniTab = function () {
        this.customPravila = false;
        this.pravila = true;
    };
    RulesAdvanceComponent.prototype.promeniTab1 = function () {
        this.pravila = false;
        this.customPravila = true;
    };
    RulesAdvanceComponent.prototype.napredneOpcije = function () {
        this.napredno = !this.napredno;
    };
    RulesAdvanceComponent.prototype.ngAfterViewInit = function () {
        var i = 0;
        var j = 200;
        __WEBPACK_IMPORTED_MODULE_1_jquery__(document).ready(function () {
            //slider 1
            $(".clickMe").click(function () {
                alert("Handler for .click() called.");
            });
            $('#rangerMin').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider;
                doubleSlider = document.getElementById('doubleSlider');
                doubleSlider.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider;
                doubleSlider = document.getElementById('doubleSlider');
                doubleSlider.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider 1
        });
    };
    /*
      menjaj(i) {
       
        var doubleSlider;
        doubleSlider = document.getElementById('doubleSlider');
        doubleSlider.noUiSlider.updateOptions({
    
          range: {
            'min': i,
            'max': 400
          }
        });
      }*/
    RulesAdvanceComponent.prototype.fuja = function () {
        this.tu = true;
        if (this.optMaxS1 == undefined)
            return;
        if (this.optMinS1 == undefined)
            return;
        var connectedSlider, doubleSlider, doubleSlider2, updateSliderValue;
        var self = this;
        updateSliderValue = function (slider, handle) {
            var children, i, results, val, values;
            if (handle == null) {
                handle = 0;
            }
            children = slider.getElementsByClassName('noUi-handle');
            values = slider.noUiSlider.get();
            i = 0;
            results = [];
            while (i < children.length) {
                if (children.length === 1) {
                    val = parseInt(values);
                }
                else {
                    val = parseInt(values[i]);
                }
                children[i].dataset.value = val;
                results.push(i++);
            }
            return results;
        };
        //slider 1
        doubleSlider = document.getElementById('doubleSlider');
        if (doubleSlider !== undefined && doubleSlider.noUiSlider !== undefined)
            doubleSlider.noUiSlider.destroy();
        noUiSlider.create(doubleSlider, {
            animationDuration: 300,
            start: [this.optMinS1, this.optMaxS1],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS1,
                'max': this.criticalMaxS1
            }
        });
        doubleSlider.noUiSlider.on('update', function () {
            self.optMinS1 = doubleSlider.noUiSlider.get()[0];
            self.optMaxS1 = doubleSlider.noUiSlider.get()[1];
            console.log("JAO: " + doubleSlider.noUiSlider.get());
            return updateSliderValue(doubleSlider);
        });
        // end slider 1
    };
    RulesAdvanceComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
                _this.cssStyleC = _this.color[0].colorOne + "Check";
                console.log(_this.cssStyle);
            }
            if (_this.cssStyle == "green")
                $(".noUi-connect").css('background-color', '#2CC185');
            else
                $(".noUi-connect").css('background-color', '#8f2846');
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            console.log(_this.lang);
            console.log(_this.lang[0]["lang"]);
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesAdvanceComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-rules-advance',
            template: __webpack_require__(794),
            styles: [__webpack_require__(752)]
        }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({ selector: '[mouseWheel]' }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_5__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_5__angular_router__["b" /* Router */]) === 'function' && _d) || Object])
    ], RulesAdvanceComponent);
    return RulesAdvanceComponent;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=rules-advance.component.js.map

/***/ }),

/***/ 670:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RulesDeleteComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var RulesDeleteComponent = (function () {
    function RulesDeleteComponent(permService, http, localStorageService, router) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.perm = [];
        this.smeDaDodaje = false;
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        this.sviVlasnici = [];
        this.dozvoleKodGazde = [];
        this.tipovi = [];
        this.podtipovi = [];
        this.podTipovi = [];
        this.uspesnoObrisano = false;
        this.newCss = false;
        this.lang = "srb";
        console.log(this.router.url);
    }
    RulesDeleteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.permService.getPerms().subscribe(function (dat) {
            _this.dozvoleMeni = dat;
            var self = _this;
            self.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                _this.uzmiLang();
                console.log(_this.user);
                if (_this.user.id) {
                    _this.userIsOwner();
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        });
    };
    RulesDeleteComponent.prototype.userIsOwner = function () {
        var _this = this;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            console.log(_this.isOwner + " u ng on init add types");
            _this.getOwners();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesDeleteComponent.prototype.getOwners = function () {
        var _this = this;
        this.http.get("users/getOwners")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviVlasnici = data;
            _this.getPerms();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesDeleteComponent.prototype.getPerms = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " " + data.dozvole);
            _this.perm = data;
            if (data.dozvole !== undefined && data.dozvole.length > 0) {
                _this.dozvoleKodGazde = data.dozvole.filter(function (x) { return x.vrednosti.tipDodavanje == true; });
                if (_this.dozvoleKodGazde.length > 0 || _this.isOwner) {
                    _this.smeDaDodaje = true;
                    _this.spoji();
                }
            }
            else if (_this.isOwner) {
                _this.smeDaDodaje = true;
                _this.spoji();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesDeleteComponent.prototype.spoji = function () {
        console.log("SPOJI");
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        for (var i = 0; this.sviVlasnici !== undefined && i < this.sviVlasnici.length; i++)
            for (var j = 0; this.dozvoleKodGazde !== undefined && j < this.dozvoleKodGazde.length; j++) {
                console.log(this.sviVlasnici[i].idOwner + " " + this.dozvoleKodGazde[j].vlasnik);
                if (this.sviVlasnici[i].idOwner == this.dozvoleKodGazde[j].vlasnik) {
                    console.log(this.sviVlasnici[i]);
                    // var noviID = {id:this.sviVlasnici[i].idOwner};
                    var noviG = {
                        id: this.sviVlasnici[i].idOwner,
                        name: this.sviVlasnici[i].name,
                        surname: this.sviVlasnici[i].surname,
                        username: this.sviVlasnici[i].username,
                        email: this.sviVlasnici[i].email
                    };
                    this.komeMozeDaDoda.push(noviG);
                    this.idVlasnika.push(this.sviVlasnici[i].idOwner);
                    console.log(this.komeMozeDaDoda[0]);
                }
            }
        if (this.isOwner) {
            var noviG = {
                id: this.user.id,
                name: this.user.name,
                surname: this.user.surname,
                username: this.user.username,
                email: this.user.email
            };
            this.komeMozeDaDoda.unshift(noviG);
            this.idVlasnika.unshift(this.user.id);
        }
        this.tipovi = this.getTypes(this.idVlasnika);
        this.podtipovi = this.getSubtypesById(this.idVlasnika);
    };
    RulesDeleteComponent.prototype.getTypes = function (id) {
        var _this = this;
        console.log(this.user.id + " get tajps");
        this.http.get("types/getTypes1/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tipovi = data;
            for (var i = 0; i < _this.tipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.tipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.tipovi[i].idUser))
                    _this.tipovi[i].smeDaBrise = true;
                else
                    _this.tipovi[i].smeDaBrise = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.tipovi;
    };
    RulesDeleteComponent.prototype.getSubtypesById = function (id) {
        var _this = this;
        this.http.get("types/getSubtypesPom/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.podtipovi = data;
            for (var i = 0; i < _this.podtipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.podtipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.podtipovi[i].idUser))
                    _this.podtipovi[i].smeDaBrise = true;
                else
                    _this.podtipovi[i].smeDaBrise = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        console.log(" pa podtipovi" + this.podtipovi);
        return this.podtipovi;
    };
    RulesDeleteComponent.prototype.obrisiPravilo = function (value) {
        var _this = this;
        var status;
        this.http.get("types/obrisiPravilo/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            status = data;
            if (status.success) {
                _this.uspesnoObrisano = true;
                _this.spoji();
                setTimeout(function () {
                    _this.uspesnoObrisano = false;
                }, 3000);
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed a'); });
    };
    RulesDeleteComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesDeleteComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data[0]["lang"];
            console.log(_this.lang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesDeleteComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-rules-delete',
            template: __webpack_require__(795),
            styles: [__webpack_require__(753)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__angular_router__["b" /* Router */]) === 'function' && _d) || Object])
    ], RulesDeleteComponent);
    return RulesDeleteComponent;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=rules-delete.component.js.map

/***/ }),

/***/ 671:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jquery__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__(9);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RulesComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var RulesComponent = (function () {
    function RulesComponent(permService, http, localStorageService, router) {
        this.permService = permService;
        this.http = http;
        this.localStorageService = localStorageService;
        this.router = router;
        this.atr1 = [];
        this.atr2 = [];
        this.perm = [];
        this.smeDaDodaje = false;
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        this.sviVlasnici = [];
        this.dozvoleKodGazde = [];
        this.tipovi = [];
        this.podtipovi = [];
        this.atr3 = []; //C
        this.atr4 = []; //Na
        this.atr5 = []; //N
        this.atr6 = []; //O
        this.atr7 = []; //H
        this.atr8 = []; //S
        this.atr9 = []; //Pi
        this.atr10 = []; //Si
        this.atr11 = []; //Cl
        this.atr12 = []; //Mg
        this.atr13 = []; //Al
        this.atr14 = []; //Fe
        this.atr15 = []; //Mn
        this.newCss = false;
        this.lang = "srb";
        this.unesiIme = false;
        this.unesiVlasnikaPlantaze = false;
        this.unesiImanje = false;
        this.unesiVrstu = false;
        this.unesiPodVrstu = false;
        this.unesiProizvodjaca = false;
        this.unesiPoligon = false;
        this.nijeDodato = false;
        this.uspesnoUneti = false;
        this.nijeIzabranPodtip = false;
        this.podTipovi = [];
        this.jednakeVrednosti = false;
        this.neSmeVeca = false;
        this.criticalMinS1 = 10;
        this.criticalMaxS1 = 100;
        this.criticalMinS2 = 10;
        this.criticalMaxS2 = 100;
        this.criticalMinS3 = 10;
        this.criticalMaxS3 = 100;
        this.criticalMinS4 = 10;
        this.criticalMaxS4 = 100;
        this.criticalMinS5 = 10;
        this.criticalMaxS5 = 100;
        this.criticalMinS6 = 10;
        this.criticalMaxS6 = 100;
        this.criticalMinS7 = 10;
        this.criticalMaxS7 = 100;
        this.criticalMinS8 = 10;
        this.criticalMaxS8 = 100;
        this.criticalMinS9 = 10;
        this.criticalMaxS9 = 100;
        this.criticalMinS10 = 10;
        this.criticalMaxS10 = 100;
        this.criticalMinS11 = 10;
        this.criticalMaxS11 = 100;
        this.criticalMinS12 = 10;
        this.criticalMaxS12 = 100;
        this.criticalMinS13 = 10;
        this.criticalMaxS13 = 100;
        this.criticalMinS14 = 10;
        this.criticalMaxS14 = 100;
        this.criticalMinS15 = 10;
        this.criticalMaxS15 = 100;
        this.meniMultiLang = {
            "srb": [
                { "num": "0", "text": "Unos pravila" },
                { "num": "1", "text": "Izaberite vrstu" },
                { "num": "2", "text": "Izaberite podvrstu" },
                { "num": "3", "text": "Unesi podatke" },
                { "num": "4", "text": "Napredne opcije" },
                { "num": "5", "text": "Leva i desna kritična vrednost ne smeju biti jednake." },
                { "num": "6", "text": "Minimalna kritična vrednost ne sme biti veća od maksimalne." },
                { "num": "7", "text": "Podtip mora biti izabran." },
                { "num": "8", "text": "Vasi podaci su sačuvani." },
                { "num": "9", "text": "Vlažnost zemljišta" },
                { "num": "10", "text": "Temperatura" },
            ],
            "eng": [
                { "num": "0", "text": "Rules entry" },
                { "num": "1", "text": "Choose type" },
                { "num": "2", "text": "Choose subtype" },
                { "num": "3", "text": "Add data" },
                { "num": "4", "text": "Advanced options" },
                { "num": "5", "text": "Left and right critical value can't be the same." },
                { "num": "6", "text": "Minimal critical value can't be higher than maximum value." },
                { "num": "7", "text": "Subtype must be chosen." },
                { "num": "8", "text": "Data saved." },
                { "num": "9", "text": "Soil moisture" },
                { "num": "10", "text": "Temperature" },
            ]
        };
        this.pravila = true;
        this.customPravila = false;
        this.napredno = false;
        console.log(this.router.url);
    }
    RulesComponent.prototype.resetuj = function () {
        this.uspesnoUneti = false;
        this.jednakeVrednosti = false;
        this.neSmeVeca = false;
    };
    RulesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selectedLang = this.meniMultiLang[this.lang];
        this.permService.getPerms().subscribe(function (data) {
            _this.dozvole = data;
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        this.permService.getPerms().subscribe(function (dat) {
            _this.dozvoleMeni = dat;
            if (_this.dozvoleMeni.guest != undefined)
                _this.localStorageService.set("guest", _this.dozvoleMeni.guest);
            /*  this.http.get(`sessions/LogovaniKorisnik`)
                .map(res => res.json())
                .subscribe(data => {
                  this.user = data;
                  this.uzmiBoje();
                  if (this.color === undefined)
                    this.cssStyle = "";
                  this.uzmiLang();
                  var pom: any;
                  var i: number;
                  this.http.get(`users/vratiTipove1/${this.user.id}`)
                    .map(res => res.json())
                    .subscribe(data => {
                      pom = data;
                      for (i = 0; i < pom.length; i++)
                        this.tipovi[i] = pom[i];
                      this.pomocna2('moisture');
                      this.pomocna3('temperature');
                    },
                    err => console.log(err),
                    () => console.log('Completed'));
                },
                err => console.log(err),
                () => console.log('Completed'));*/
            var self = _this;
            self.http.get("sessions/LogovaniKorisnik")
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                _this.user = data;
                _this.uzmiBoje();
                _this.uzmiLang();
                console.log(_this.user);
                if (_this.user.id) {
                    _this.userIsOwner();
                }
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        });
        this.pomocna2('moisture');
        this.pomocna3('temperature');
        /*     this.spoji();*/
    };
    RulesComponent.prototype.uzmiLang = function () {
        var _this = this;
        console.log(this.lang);
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            console.log(_this.lang[0]["lang"]);
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.userIsOwner = function () {
        var _this = this;
        this.http.get("permisions/userIsOwner")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.isOwner = data.owner;
            console.log(_this.isOwner + " u ng on init add types");
            _this.getOwners();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.getOwners = function () {
        var _this = this;
        this.http.get("users/getOwners")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.sviVlasnici = data;
            _this.getPerms();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.getPerms = function () {
        var _this = this;
        this.http.get("permisions/dozvoleKodVlasnika")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            console.log(data.success + " " + data.dozvole);
            _this.perm = data;
            if (data.dozvole !== undefined && data.dozvole.length > 0) {
                _this.dozvoleKodGazde = data.dozvole.filter(function (x) { return x.vrednosti.tipDodavanje == true; });
                if (_this.dozvoleKodGazde.length > 0 || _this.isOwner) {
                    _this.smeDaDodaje = true;
                    _this.spoji();
                }
            }
            else if (_this.isOwner) {
                _this.smeDaDodaje = true;
                _this.spoji();
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.callType = function (value) {
        var _this = this;
        this.podTipovi = [];
        var pom;
        var i;
        if (value == undefined)
            return;
        this.http.get("users/prikaziPodtip2/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            _this.podTipovi = [];
            for (i = 0; i < pom.length; i++)
                _this.podTipovi[i] = pom[i];
            if (pom !== undefined && pom.length > 0)
                _this.podtipIzabran = pom[0].id;
            //window.alert("TU SAM!");
            _this.callType2(_this.podtipIzabran);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.callType2 = function (value) {
        var _this = this;
        this.podtipIzabran = value;
        var pom;
        var pom2 = [];
        var i;
        if (value == undefined)
            return;
        this.http.get("users/prikaziVrednostiSlajderZemljiste/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            for (i = 0; i < pom.length; i++)
                pom2[i] = pom[i];
            if (pom.length > 0) {
                _this.criticalMaxS1 = pom2[0].defaultCritMax;
                _this.criticalMinS1 = pom2[0].defaultCritMin;
                if (pom2[0].optimalMin) {
                    _this.optMinS1 = pom2[0].optimalMin;
                    _this.optMaxS1 = pom2[0].optimalMax;
                }
                else {
                    _this.optMinS1 = _this.criticalMinS1;
                    _this.optMaxS1 = _this.criticalMaxS1;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        var pom3;
        var pom4 = [];
        this.http.get("users/prikaziVrednostiSlajderTemperatura/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom3 = data;
            for (i = 0; i < pom3.length; i++)
                pom4[i] = pom3[i];
            if (pom3.length > 0) {
                _this.criticalMaxS2 = pom4[0].defaultCritMax;
                _this.criticalMinS2 = pom4[0].defaultCritMin;
                if (pom4[0].optimalMin) {
                    _this.optMinS2 = pom4[0].optimalMin;
                    _this.optMaxS2 = pom4[0].optimalMax;
                }
                else {
                    _this.optMinS2 = _this.criticalMinS2;
                    _this.optMaxS2 = _this.criticalMaxS2;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        var pom5;
        var pom6 = [];
        this.http.get("users/prikaziVrednostiSlajderC/" + value)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom5 = data;
            for (i = 0; i < pom5.length; i++)
                pom6[i] = pom5[i];
            if (pom5.length > 0) {
                _this.criticalMaxS3 = pom6[0].defaultCritMax;
                _this.criticalMinS3 = pom6[0].defaultCritMin;
                if (pom6[0].optimalMin) {
                    _this.optMinS3 = pom6[0].optimalMin;
                    _this.optMaxS3 = pom6[0].optimalMax;
                }
                else {
                    _this.optMinS3 = _this.criticalMinS3;
                    _this.optMaxS3 = _this.criticalMaxS3;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        var pom7;
        var pom8 = [];
        var imee = 'Na';
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + imee)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS4 = pom8[0].defaultCritMax;
                _this.criticalMinS4 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS4 = pom8[0].optimalMin;
                    _this.optMaxS4 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS4 = _this.criticalMinS4;
                    _this.optMaxS4 = _this.criticalMaxS4;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'N')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS5 = pom8[0].defaultCritMax;
                _this.criticalMinS5 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS5 = pom8[0].optimalMin;
                    _this.optMaxS5 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS5 = _this.criticalMinS5;
                    _this.optMaxS5 = _this.criticalMaxS5;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'O')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS6 = pom8[0].defaultCritMax;
                _this.criticalMinS6 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS6 = pom8[0].optimalMin;
                    _this.optMaxS6 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS6 = _this.criticalMinS6;
                    _this.optMaxS6 = _this.criticalMaxS6;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'H')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS7 = pom8[0].defaultCritMax;
                _this.criticalMinS7 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS7 = pom8[0].optimalMin;
                    _this.optMaxS7 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS7 = _this.criticalMinS7;
                    _this.optMaxS7 = _this.criticalMaxS7;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'S')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS8 = pom8[0].defaultCritMax;
                _this.criticalMinS8 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS8 = pom8[0].optimalMin;
                    _this.optMaxS8 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS8 = _this.criticalMinS8;
                    _this.optMaxS8 = _this.criticalMaxS8;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'Pi')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS9 = pom8[0].defaultCritMax;
                _this.criticalMinS9 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS9 = pom8[0].optimalMin;
                    _this.optMaxS9 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS9 = _this.criticalMinS9;
                    _this.optMaxS9 = _this.criticalMaxS9;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'Si')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS10 = pom8[0].defaultCritMax;
                _this.criticalMinS10 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS10 = pom8[0].optimalMin;
                    _this.optMaxS10 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS10 = _this.criticalMinS10;
                    _this.optMaxS10 = _this.criticalMaxS10;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'Cl')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS11 = pom8[0].defaultCritMax;
                _this.criticalMinS11 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS11 = pom8[0].optimalMin;
                    _this.optMaxS11 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS11 = _this.criticalMinS11;
                    _this.optMaxS11 = _this.criticalMaxS11;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'Mg')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS12 = pom8[0].defaultCritMax;
                _this.criticalMinS12 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS12 = pom8[0].optimalMin;
                    _this.optMaxS12 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS12 = _this.criticalMinS12;
                    _this.optMaxS12 = _this.criticalMaxS12;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'Al')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS13 = pom8[0].defaultCritMax;
                _this.criticalMinS13 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS13 = pom8[0].optimalMin;
                    _this.optMaxS13 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS13 = _this.criticalMinS13;
                    _this.optMaxS13 = _this.criticalMaxS13;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'Fe')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS14 = pom8[0].defaultCritMax;
                _this.criticalMinS14 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS14 = pom8[0].optimalMin;
                    _this.optMaxS14 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS14 = _this.criticalMinS14;
                    _this.optMaxS14 = _this.criticalMaxS14;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
        this.http.get("users/prikaziVrednostiSlajderr/" + value + "/" + 'Mn')
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom7 = data;
            for (i = 0; i < pom7.length; i++)
                pom8[i] = pom7[i];
            if (pom7.length > 0) {
                _this.criticalMaxS15 = pom8[0].defaultCritMax;
                _this.criticalMinS15 = pom8[0].defaultCritMin;
                if (pom8[0].optimalMin) {
                    _this.optMinS15 = pom8[0].optimalMin;
                    _this.optMaxS15 = pom8[0].optimalMax;
                }
                else {
                    _this.optMinS15 = _this.criticalMinS15;
                    _this.optMaxS15 = _this.criticalMaxS15;
                }
            }
        }, function (err) { return console.log(err); }, function () { return _this.fuja(); });
    };
    RulesComponent.prototype.promeniTab = function () {
        this.customPravila = false;
        this.pravila = true;
    };
    RulesComponent.prototype.promeniTab1 = function () {
        this.pravila = false;
        this.customPravila = true;
    };
    RulesComponent.prototype.napredneOpcije = function () {
        this.napredno = !this.napredno;
        if (this.napredno == true) {
            this.pomocna4('C');
            this.pomocna5('Na');
            this.pomocna6('N');
            this.pomocna7('O');
            this.pomocna8('H');
            this.pomocna9('S');
            this.pomocna10('Pi');
            this.pomocna11('Si');
            this.pomocna12('Cl');
            this.pomocna13('Mg');
            this.pomocna14('Al');
            this.pomocna15('Fe');
            this.pomocna16('Mn');
        }
    };
    RulesComponent.prototype.spoji = function () {
        console.log("SPOJI");
        this.komeMozeDaDoda = [];
        this.idVlasnika = [];
        for (var i = 0; this.sviVlasnici !== undefined && i < this.sviVlasnici.length; i++)
            for (var j = 0; this.dozvoleKodGazde !== undefined && j < this.dozvoleKodGazde.length; j++) {
                console.log(this.sviVlasnici[i].idOwner + " " + this.dozvoleKodGazde[j].vlasnik);
                if (this.sviVlasnici[i].idOwner == this.dozvoleKodGazde[j].vlasnik) {
                    console.log(this.sviVlasnici[i]);
                    // var noviID = {id:this.sviVlasnici[i].idOwner};
                    var noviG = {
                        id: this.sviVlasnici[i].idOwner,
                        name: this.sviVlasnici[i].name,
                        surname: this.sviVlasnici[i].surname,
                        username: this.sviVlasnici[i].username,
                        email: this.sviVlasnici[i].email
                    };
                    this.komeMozeDaDoda.push(noviG);
                    this.idVlasnika.push(this.sviVlasnici[i].idOwner);
                    console.log(this.komeMozeDaDoda[0]);
                }
            }
        if (this.isOwner) {
            var noviG = {
                id: this.user.id,
                name: this.user.name,
                surname: this.user.surname,
                username: this.user.username,
                email: this.user.email
            };
            this.komeMozeDaDoda.unshift(noviG);
            this.idVlasnika.unshift(this.user.id);
        }
        this.tipovi = this.getTypes(this.idVlasnika);
        this.podtipovi = this.getSubtypesById(this.idVlasnika);
    };
    RulesComponent.prototype.getTypes = function (id) {
        var _this = this;
        console.log(this.user.id + " get tajps");
        this.http.get("types/getTypes1/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.tipovi = data;
            for (var i = 0; i < _this.tipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.tipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.tipovi[i].idUser))
                    _this.tipovi[i].smeDaBrise = true;
                else
                    _this.tipovi[i].smeDaBrise = false;
            }
            _this.callType(_this.tipovi[0].id);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        return this.tipovi;
    };
    RulesComponent.prototype.getSubtypesById = function (id) {
        var _this = this;
        this.http.get("types/getSubtypes/" + id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.podtipovi = data;
            for (var i = 0; i < _this.podtipovi.length; i++) {
                var dozvola = _this.dozvoleKodGazde.find(function (x) { return x.vlasnik == _this.podtipovi[i].idUser; });
                if ((dozvola !== undefined && dozvola !== null) || (_this.user.id == _this.podtipovi[i].idUser))
                    _this.podtipovi[i].smeDaBrise = true;
                else
                    _this.podtipovi[i].smeDaBrise = false;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        console.log(" pa podtipovi" + this.podtipovi);
        return this.podtipovi;
    };
    RulesComponent.prototype.pomocna2 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*      window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr1 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr1);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna3 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr2 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna4 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr3 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna5 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr4 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna6 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr5 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna7 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr6 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna8 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr7 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna9 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr8 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna10 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr9 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna11 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr10 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna12 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr11 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna13 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr12 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna14 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr13 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna15 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr14 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna16 = function (ime1) {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        /* window.alert("U POMOCNOJ2 SAM! "+ime1);*/
        this.http.get("users/vratiIdAtributa/" + ime1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            /*    window.alert("aaaaaa");*/
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.atr15 = pom4[0].id;
            /*    window.alert("ATRIBUT1 JE "+this.atr2);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocna1 = function () {
        var _this = this;
        var pom;
        var pom4 = [];
        var i;
        window.alert(" U POMOCNOJ1 SAM Atr " + this.atr1 + " podt " + this.podtipIzabran);
        this.http.get("users/nadjiIdSpec/" + this.podtipIzabran + "/" + this.atr1)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom = data;
            for (i = 0; i < pom.length; i++)
                pom4[i] = pom[i];
            _this.podt = pom4[0].id;
            /*     window.alert("SPEEEEEC "+this.podt);*/
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.pomocnaZaUnos = function (ime, atr, crit1, crit2, opt1, opt2) {
        var _this = this;
        /* var ime2 = 'temperature';*/
        var pom;
        var pom1;
        var pom5 = [];
        var i;
        var ime2 = ime;
        var atr2 = atr;
        /*   window.alert("Atribut 2 jeeeeeeeeeeee"+this.atr2);*/
        this.http.get("users/nadjiIdSpec/" + this.podtipIzabran + "/" + atr2)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            pom1 = data;
            for (i = 0; i < pom1.length; i++)
                pom5[i] = pom1[i];
            _this.podt1 = pom5[0].id;
            /*  window.alert("Podaci su: "+this.atr2+" iii "+this.podt1+" iiiiiii "+ime2);*/
            /*    window.alert("ovde sam za idSpec temp "+this.podt1);*/
            /*   window.alert("OVDE SAM "+this.atr2);*/
            _this.http.get("users/sacuvajPodatkeZaPraviloZemljiste/" + crit1 + "/" + crit2 + "/" + opt1 + "/" + opt2 + "/" + _this.podtipIzabran + "/" + atr2 + "/" + _this.podt1 + "/" + ime2)
                .map(function (res) { return res.json(); })
                .subscribe(function (data) {
                pom = data;
                _this.uspesnoUneti = true;
                setTimeout(function () {
                    _this.uspesnoUneti = false;
                }, 3000);
                /*  if (pom.success = true)*/
                /*   window.alert("Ubacio sam!");*/
            }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent.prototype.Unesi = function () {
        var _this = this;
        if (this.podtipIzabran) {
            var ime1 = 'moisture';
            var pom2;
            var pom;
            var pom1;
            var pom4 = [];
            var pom5 = [];
            var i;
            /* window.alert("U POMOCNOJ2 SAM! "+ime1);
                this.http.get(`users/vratiIdAtributa/${ime1}`)
                 .map(res => res.json())
                 .subscribe(data => {
                  pom = data;
                  window.alert("aaaaaa");
                   for (i = 0; i < pom.length; i++)
                     pom4[i] = pom[i];
                  this.atr1=pom4[0].id;
                  window.alert("ATRIBUT1 JE "+this.atr1);*/
            /*  window.alert(" U PONCOJ1 SAM Atr "+this.atr1+" podt "+this.podtipIzabran);*/
            if (this.criticalMinS1 < this.criticalMaxS1 && this.criticalMinS2 < this.criticalMaxS2) {
                this.http.get("users/nadjiIdSpec/" + this.podtipIzabran + "/" + this.atr1)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    pom1 = data;
                    for (i = 0; i < pom1.length; i++)
                        pom5[i] = pom1[i];
                    _this.podt = pom5[0].id;
                    _this.http.get("users/sacuvajPodatkeZaPraviloZemljiste/" + _this.criticalMinS1 + "/" + _this.criticalMaxS1 + "/" + _this.optMinS1 + "/" + _this.optMaxS1 + "/" + _this.podtipIzabran + "/" + _this.atr1 + "/" + _this.podt + "/" + ime1)
                        .map(function (res) { return res.json(); })
                        .subscribe(function (data) {
                        pom2 = data;
                        /*     if (pom2.success)*/
                        _this.uspesnoUneti = true;
                        setTimeout(function () {
                            _this.uspesnoUneti = false;
                        }, 3000);
                    }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
                this.pomocnaZaUnos('temperature', this.atr2, this.criticalMinS2, this.criticalMaxS2, this.optMinS2, this.optMaxS2);
            }
            else if (this.criticalMinS1 == this.criticalMaxS1 || this.criticalMinS2 == this.criticalMaxS2) {
                this.jednakeVrednosti = true;
                setTimeout(function () {
                    _this.jednakeVrednosti = false;
                }, 3000);
            }
            else if (this.criticalMinS1 > this.criticalMaxS1 || this.criticalMinS2 > this.criticalMaxS2) {
                this.neSmeVeca = true;
                setTimeout(function () {
                    _this.neSmeVeca = false;
                }, 3000);
            }
            console.log("!");
            console.log(this.napredno);
            if (this.napredno == true) {
                if (this.criticalMinS3 < this.criticalMaxS3 && this.criticalMinS4 < this.criticalMaxS4 && this.criticalMinS5 < this.criticalMaxS5 && this.criticalMinS6 < this.criticalMaxS6 && this.criticalMinS7 < this.criticalMaxS7 && this.criticalMinS8 < this.criticalMaxS8 && this.criticalMinS9 < this.criticalMaxS9 && this.criticalMinS10 < this.criticalMaxS10 && this.criticalMinS11 < this.criticalMaxS11 && this.criticalMinS12 < this.criticalMaxS12 && this.criticalMinS13 < this.criticalMaxS13 && this.criticalMinS14 < this.criticalMaxS14 && this.criticalMinS15 < this.criticalMaxS15) {
                    this.pomocnaZaUnos('C', this.atr3, this.criticalMinS3, this.criticalMaxS3, this.optMinS3, this.optMaxS3);
                    this.pomocnaZaUnos('Na', this.atr4, this.criticalMinS4, this.criticalMaxS4, this.optMinS4, this.optMaxS4);
                    this.pomocnaZaUnos('N', this.atr5, this.criticalMinS5, this.criticalMaxS5, this.optMinS5, this.optMaxS5);
                    this.pomocnaZaUnos('O', this.atr6, this.criticalMinS6, this.criticalMaxS6, this.optMinS6, this.optMaxS6);
                    this.pomocnaZaUnos('H', this.atr7, this.criticalMinS7, this.criticalMaxS7, this.optMinS7, this.optMaxS7);
                    this.pomocnaZaUnos('S', this.atr8, this.criticalMinS8, this.criticalMaxS8, this.optMinS8, this.optMaxS8);
                    this.pomocnaZaUnos('Pi', this.atr9, this.criticalMinS9, this.criticalMaxS9, this.optMinS9, this.optMaxS9);
                    this.pomocnaZaUnos('Si', this.atr10, this.criticalMinS10, this.criticalMaxS10, this.optMinS10, this.optMaxS10);
                    this.pomocnaZaUnos('Cl', this.atr11, this.criticalMinS11, this.criticalMaxS11, this.optMinS11, this.optMaxS11);
                    this.pomocnaZaUnos('Mg', this.atr12, this.criticalMinS12, this.criticalMaxS12, this.optMinS12, this.optMaxS12);
                    this.pomocnaZaUnos('Al', this.atr13, this.criticalMinS13, this.criticalMaxS13, this.optMinS13, this.optMaxS13);
                    this.pomocnaZaUnos('Fe', this.atr14, this.criticalMinS14, this.criticalMaxS14, this.optMinS14, this.optMaxS14);
                    this.pomocnaZaUnos('Mn', this.atr15, this.criticalMinS15, this.criticalMaxS15, this.optMinS15, this.optMaxS15);
                    console.log("OVDE SAM !!!!");
                }
                else if (this.criticalMinS3 == this.criticalMaxS3 || this.criticalMinS4 == this.criticalMaxS4 || this.criticalMinS5 == this.criticalMaxS5 || this.criticalMinS6 == this.criticalMaxS6 || this.criticalMinS7 == this.criticalMaxS7 || this.criticalMinS8 == this.criticalMaxS8 || this.criticalMinS9 == this.criticalMaxS9 || this.criticalMinS10 == this.criticalMaxS10 || this.criticalMinS11 == this.criticalMaxS11 || this.criticalMinS12 == this.criticalMaxS12 || this.criticalMinS13 == this.criticalMaxS13 || this.criticalMinS14 == this.criticalMaxS14 || this.criticalMinS15 == this.criticalMaxS15) {
                    this.jednakeVrednosti = true;
                    setTimeout(function () {
                        _this.jednakeVrednosti = false;
                    }, 3000);
                }
                else if (this.criticalMinS3 > this.criticalMaxS3 && this.criticalMinS4 > this.criticalMaxS4 && this.criticalMinS5 > this.criticalMaxS5 && this.criticalMinS6 > this.criticalMaxS6 && this.criticalMinS7 > this.criticalMaxS7 && this.criticalMinS8 > this.criticalMaxS8 && this.criticalMinS9 > this.criticalMaxS9 && this.criticalMinS10 > this.criticalMaxS10 && this.criticalMinS11 > this.criticalMaxS11 && this.criticalMinS12 > this.criticalMaxS12 && this.criticalMinS13 > this.criticalMaxS13 && this.criticalMinS14 > this.criticalMaxS14 && this.criticalMinS15 > this.criticalMaxS15) {
                    this.neSmeVeca = true;
                    setTimeout(function () {
                        _this.neSmeVeca = false;
                    }, 3000);
                }
            }
        }
        else {
            this.nijeIzabranPodtip = true;
            setTimeout(function () {
                _this.nijeIzabranPodtip = false;
            }, 3000);
        }
    };
    RulesComponent.prototype.ngAfterViewInit = function () {
        var i = 0;
        var j = 200;
        __WEBPACK_IMPORTED_MODULE_1_jquery__(document).ready(function () {
            //slider 1
            $('#rangerMin').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider;
                doubleSlider = document.getElementById('doubleSlider');
                doubleSlider.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider;
                doubleSlider = document.getElementById('doubleSlider');
                doubleSlider.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider 1
            //slider 2
            $('#rangerMin2').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider2;
                doubleSlider2 = document.getElementById('doubleSlider2');
                doubleSlider2.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax2').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider2;
                doubleSlider2 = document.getElementById('doubleSlider2');
                doubleSlider2.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider 2
            //slider 3
            $('#rangerMin3').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider3;
                doubleSlider3 = document.getElementById('doubleSlider3');
                doubleSlider3.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax3').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider3;
                doubleSlider3 = document.getElementById('doubleSlider3');
                doubleSlider3.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider 3
            //slider 4
            $('#rangerMin4').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider4;
                doubleSlider4 = document.getElementById('doubleSlider4');
                doubleSlider4.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax4').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider4;
                doubleSlider4 = document.getElementById('doubleSlider4');
                doubleSlider4.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider 4
            //slider5
            $('#rangerMin5').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider5;
                doubleSlider5 = document.getElementById('doubleSlider5');
                doubleSlider5.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax5').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider5;
                doubleSlider5 = document.getElementById('doubleSlider5');
                doubleSlider5.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider5
            //slider6
            $('#rangerMin6').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider6;
                doubleSlider6 = document.getElementById('doubleSlider6');
                doubleSlider6.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax6').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider6;
                doubleSlider6 = document.getElementById('doubleSlider6');
                doubleSlider6.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider6
            //slider7
            $('#rangerMin7').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider7;
                doubleSlider7 = document.getElementById('doubleSlider7');
                doubleSlider7.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax7').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider7;
                doubleSlider7 = document.getElementById('doubleSlider7');
                doubleSlider7.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider7
            //slider8
            $('#rangerMin8').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider8;
                doubleSlider8 = document.getElementById('doubleSlider8');
                doubleSlider8.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax8').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider8;
                doubleSlider8 = document.getElementById('doubleSlider8');
                doubleSlider8.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider8
            //slider9
            $('#rangerMin9').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider9;
                doubleSlider9 = document.getElementById('doubleSlider9');
                doubleSlider9.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax9').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider9;
                doubleSlider9 = document.getElementById('doubleSlider9');
                doubleSlider9.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider9
            //slider10
            $('#rangerMin10').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider10;
                doubleSlider10 = document.getElementById('doubleSlider10');
                doubleSlider10.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax10').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider10;
                doubleSlider10 = document.getElementById('doubleSlider10');
                doubleSlider10.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider10
            //slider11
            $('#rangerMin11').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider11;
                doubleSlider11 = document.getElementById('doubleSlider11');
                doubleSlider11.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax11').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider11;
                doubleSlider11 = document.getElementById('doubleSlider11');
                doubleSlider11.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider11
            //slider12
            $('#rangerMin12').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider12;
                doubleSlider12 = document.getElementById('doubleSlider12');
                doubleSlider12.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax12').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider12;
                doubleSlider12 = document.getElementById('doubleSlider12');
                doubleSlider12.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider12
            //slider13
            $('#rangerMin13').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider13;
                doubleSlider13 = document.getElementById('doubleSlider13');
                doubleSlider13.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax13').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider13;
                doubleSlider13 = document.getElementById('doubleSlider13');
                doubleSlider13.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider13
            //slider14
            $('#rangerMin14').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider14;
                doubleSlider14 = document.getElementById('doubleSlider14');
                doubleSlider14.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax14').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider14;
                doubleSlider14 = document.getElementById('doubleSlider14');
                doubleSlider14.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider14
            //slider15
            $('#rangerMin15').on("input", function () {
                i = parseInt($(this).val());
                var doubleSlider15;
                doubleSlider15 = document.getElementById('doubleSlider15');
                doubleSlider15.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            $('#rangerMax14').on("input", function () {
                j = parseInt($(this).val());
                var doubleSlider15;
                doubleSlider15 = document.getElementById('doubleSlider15');
                doubleSlider15.noUiSlider.updateOptions({
                    range: {
                        'min': i,
                        'max': j
                    }
                });
            });
            //end slider15
        });
    };
    /*
      menjaj(i) {
       
        var doubleSlider;
        doubleSlider = document.getElementById('doubleSlider');
        doubleSlider.noUiSlider.updateOptions({
    
          range: {
            'min': i,
            'max': 400
          }
        });
      }*/
    RulesComponent.prototype.fuja = function () {
        if (this.optMaxS1 == undefined)
            return;
        if (this.optMaxS2 == undefined)
            return;
        if (this.optMaxS3 == undefined)
            return;
        if (this.optMaxS4 == undefined)
            return;
        if (this.optMaxS5 == undefined)
            return;
        if (this.optMaxS6 == undefined)
            return;
        if (this.optMaxS7 == undefined)
            return;
        if (this.optMaxS8 == undefined)
            return;
        if (this.optMaxS9 == undefined)
            return;
        if (this.optMaxS10 == undefined)
            return;
        if (this.optMaxS11 == undefined)
            return;
        if (this.optMaxS12 == undefined)
            return;
        if (this.optMaxS13 == undefined)
            return;
        if (this.optMaxS14 == undefined)
            return;
        if (this.optMaxS15 == undefined)
            return;
        var connectedSlider, doubleSlider, doubleSlider2, updateSliderValue, doubleSlider3, doubleSlider4, doubleSlider5, doubleSlider6, doubleSlider7, doubleSlider8, doubleSlider9, doubleSlider10, doubleSlider11, doubleSlider12, doubleSlider13, doubleSlider14, doubleSlider15;
        var self = this;
        updateSliderValue = function (slider, handle) {
            var children, i, results, val, values;
            if (handle == null) {
                handle = 0;
            }
            children = slider.getElementsByClassName('noUi-handle');
            values = slider.noUiSlider.get();
            i = 0;
            results = [];
            while (i < children.length) {
                if (children.length === 1) {
                    val = parseInt(values);
                }
                else {
                    val = parseInt(values[i]);
                }
                children[i].dataset.value = val;
                results.push(i++);
            }
            return results;
        };
        //slider 1
        doubleSlider = document.getElementById('doubleSlider');
        if (doubleSlider !== undefined && doubleSlider.noUiSlider !== undefined)
            doubleSlider.noUiSlider.destroy();
        noUiSlider.create(doubleSlider, {
            animationDuration: 300,
            start: [this.optMinS1, this.optMaxS1],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS1,
                'max': this.criticalMaxS1
            }
        });
        doubleSlider.noUiSlider.on('update', function () {
            self.optMinS1 = doubleSlider.noUiSlider.get()[0];
            self.optMaxS1 = doubleSlider.noUiSlider.get()[1];
            console.log("JAO: " + doubleSlider.noUiSlider.get());
            return updateSliderValue(doubleSlider);
        });
        // end slider 1
        //slider 2
        doubleSlider2 = document.getElementById('doubleSlider2');
        if (doubleSlider2 !== undefined && doubleSlider2.noUiSlider !== undefined)
            doubleSlider2.noUiSlider.destroy();
        noUiSlider.create(doubleSlider2, {
            animationDuration: 300,
            start: [this.optMinS2, this.optMaxS2],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS2,
                'max': this.criticalMaxS2
            }
        });
        doubleSlider2.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider2.noUiSlider.get());
            self.optMinS2 = doubleSlider2.noUiSlider.get()[0];
            self.optMaxS2 = doubleSlider2.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider2);
        });
        // end slider 2
        //slider 3
        doubleSlider3 = document.getElementById('doubleSlider3');
        if (doubleSlider3 !== undefined && doubleSlider3.noUiSlider !== undefined)
            doubleSlider3.noUiSlider.destroy();
        noUiSlider.create(doubleSlider3, {
            animationDuration: 300,
            start: [this.optMinS3, this.optMaxS3],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS3,
                'max': this.criticalMaxS3
            }
        });
        doubleSlider3.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider3.noUiSlider.get());
            self.optMinS3 = doubleSlider3.noUiSlider.get()[0];
            self.optMaxS3 = doubleSlider3.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider3);
        });
        //end slider3
        //slider 4
        doubleSlider4 = document.getElementById('doubleSlider4');
        if (doubleSlider4 !== undefined && doubleSlider4.noUiSlider !== undefined)
            doubleSlider4.noUiSlider.destroy();
        noUiSlider.create(doubleSlider4, {
            animationDuration: 300,
            start: [this.optMinS4, this.optMaxS4],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS4,
                'max': this.criticalMaxS4
            }
        });
        doubleSlider4.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider4.noUiSlider.get());
            self.optMinS4 = doubleSlider4.noUiSlider.get()[0];
            self.optMaxS4 = doubleSlider4.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider4);
        });
        //end slider4
        //slider 5
        doubleSlider5 = document.getElementById('doubleSlider5');
        if (doubleSlider5 !== undefined && doubleSlider5.noUiSlider !== undefined)
            doubleSlider5.noUiSlider.destroy();
        noUiSlider.create(doubleSlider5, {
            animationDuration: 300,
            start: [this.optMinS5, this.optMaxS5],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS5,
                'max': this.criticalMaxS5
            }
        });
        doubleSlider5.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider5.noUiSlider.get());
            self.optMinS5 = doubleSlider5.noUiSlider.get()[0];
            self.optMaxS5 = doubleSlider5.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider5);
        });
        //end slider5
        //slider6
        doubleSlider6 = document.getElementById('doubleSlider6');
        if (doubleSlider6 !== undefined && doubleSlider6.noUiSlider !== undefined)
            doubleSlider6.noUiSlider.destroy();
        noUiSlider.create(doubleSlider6, {
            animationDuration: 300,
            start: [this.optMinS6, this.optMaxS6],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS6,
                'max': this.criticalMaxS6
            }
        });
        doubleSlider6.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider6.noUiSlider.get());
            self.optMinS6 = doubleSlider6.noUiSlider.get()[0];
            self.optMaxS6 = doubleSlider6.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider6);
        });
        //end slider6
        //slider7
        doubleSlider7 = document.getElementById('doubleSlider7');
        if (doubleSlider7 !== undefined && doubleSlider7.noUiSlider !== undefined)
            doubleSlider7.noUiSlider.destroy();
        noUiSlider.create(doubleSlider7, {
            animationDuration: 300,
            start: [this.optMinS7, this.optMaxS7],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS7,
                'max': this.criticalMaxS7
            }
        });
        doubleSlider7.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider7.noUiSlider.get());
            self.optMinS7 = doubleSlider7.noUiSlider.get()[0];
            self.optMaxS7 = doubleSlider7.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider7);
        });
        //end slider7
        //slider8
        doubleSlider8 = document.getElementById('doubleSlider8');
        if (doubleSlider8 !== undefined && doubleSlider8.noUiSlider !== undefined)
            doubleSlider8.noUiSlider.destroy();
        noUiSlider.create(doubleSlider8, {
            animationDuration: 300,
            start: [this.optMinS8, this.optMaxS8],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS8,
                'max': this.criticalMaxS8
            }
        });
        doubleSlider8.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider8.noUiSlider.get());
            self.optMinS8 = doubleSlider8.noUiSlider.get()[0];
            self.optMaxS8 = doubleSlider8.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider8);
        });
        //end slider8
        //slider9
        doubleSlider9 = document.getElementById('doubleSlider9');
        if (doubleSlider9 !== undefined && doubleSlider9.noUiSlider !== undefined)
            doubleSlider9.noUiSlider.destroy();
        noUiSlider.create(doubleSlider9, {
            animationDuration: 300,
            start: [this.optMinS9, this.optMaxS9],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS9,
                'max': this.criticalMaxS9
            }
        });
        doubleSlider9.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider9.noUiSlider.get());
            self.optMinS9 = doubleSlider9.noUiSlider.get()[0];
            self.optMaxS9 = doubleSlider9.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider9);
        });
        //end slider9
        //slider 10
        doubleSlider10 = document.getElementById('doubleSlider10');
        if (doubleSlider10 !== undefined && doubleSlider10.noUiSlider !== undefined)
            doubleSlider10.noUiSlider.destroy();
        noUiSlider.create(doubleSlider10, {
            animationDuration: 300,
            start: [this.optMinS10, this.optMaxS10],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS10,
                'max': this.criticalMaxS10
            }
        });
        doubleSlider10.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider10.noUiSlider.get());
            self.optMinS10 = doubleSlider10.noUiSlider.get()[0];
            self.optMaxS10 = doubleSlider10.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider10);
        });
        //end slider 10
        //slider11
        doubleSlider11 = document.getElementById('doubleSlider11');
        if (doubleSlider11 !== undefined && doubleSlider11.noUiSlider !== undefined)
            doubleSlider11.noUiSlider.destroy();
        noUiSlider.create(doubleSlider11, {
            animationDuration: 300,
            start: [this.optMinS11, this.optMaxS11],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS11,
                'max': this.criticalMaxS11
            }
        });
        doubleSlider11.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider11.noUiSlider.get());
            self.optMinS11 = doubleSlider11.noUiSlider.get()[0];
            self.optMaxS11 = doubleSlider11.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider11);
        });
        //end slider11
        //slider12
        doubleSlider12 = document.getElementById('doubleSlider12');
        if (doubleSlider12 !== undefined && doubleSlider12.noUiSlider !== undefined)
            doubleSlider12.noUiSlider.destroy();
        noUiSlider.create(doubleSlider12, {
            animationDuration: 300,
            start: [this.optMinS12, this.optMaxS12],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS12,
                'max': this.criticalMaxS12
            }
        });
        doubleSlider12.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider12.noUiSlider.get());
            self.optMinS12 = doubleSlider12.noUiSlider.get()[0];
            self.optMaxS12 = doubleSlider12.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider12);
        });
        //end slider12
        //slider13
        doubleSlider13 = document.getElementById('doubleSlider13');
        if (doubleSlider13 !== undefined && doubleSlider13.noUiSlider !== undefined)
            doubleSlider13.noUiSlider.destroy();
        noUiSlider.create(doubleSlider13, {
            animationDuration: 300,
            start: [this.optMinS13, this.optMaxS13],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS13,
                'max': this.criticalMaxS13
            }
        });
        doubleSlider13.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider13.noUiSlider.get());
            self.optMinS13 = doubleSlider13.noUiSlider.get()[0];
            self.optMaxS13 = doubleSlider13.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider13);
        });
        //end slider13
        //slider14
        doubleSlider14 = document.getElementById('doubleSlider14');
        if (doubleSlider14 !== undefined && doubleSlider14.noUiSlider !== undefined)
            doubleSlider14.noUiSlider.destroy();
        noUiSlider.create(doubleSlider14, {
            animationDuration: 300,
            start: [this.optMinS14, this.optMaxS14],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS14,
                'max': this.criticalMaxS14
            }
        });
        doubleSlider14.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider14.noUiSlider.get());
            self.optMinS14 = doubleSlider14.noUiSlider.get()[0];
            self.optMaxS14 = doubleSlider14.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider14);
        });
        //end slider14
        //slider 15
        doubleSlider15 = document.getElementById('doubleSlider15');
        if (doubleSlider15 !== undefined && doubleSlider15.noUiSlider !== undefined)
            doubleSlider15.noUiSlider.destroy();
        noUiSlider.create(doubleSlider15, {
            animationDuration: 300,
            start: [this.optMinS15, this.optMaxS15],
            connect: true,
            behaviour: 'tap-drag',
            step: 1,
            tooltips: true,
            pips: {
                mode: 'values',
                values: [0, 0],
                density: 4
            },
            range: {
                'min': this.criticalMinS15,
                'max': this.criticalMaxS15
            }
        });
        doubleSlider15.noUiSlider.on('update', function () {
            console.log("JAO: " + doubleSlider15.noUiSlider.get());
            self.optMinS15 = doubleSlider15.noUiSlider.get()[0];
            self.optMaxS15 = doubleSlider15.noUiSlider.get()[1];
            return updateSliderValue(doubleSlider15);
        });
    };
    RulesComponent.prototype.uzmiBoje = function () {
        var _this = this;
        this.http.get("users/getUserColor/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.color = data;
            console.log(_this.color);
            if (_this.color[0].colorOne == "default")
                _this.cssStyle = "";
            else {
                _this.cssStyle = _this.color[0].colorOne;
                _this.cssStyleH = _this.color[0].colorOne + "Header";
                _this.cssStyleT = _this.color[0].colorOne + "Tab";
                _this.cssStyleC = _this.color[0].colorOne + "Check";
                console.log(_this.cssStyle);
            }
            if (_this.cssStyle == "green")
                $(".noUi-connect").css('background-color', '#2CC185');
            else
                $(".noUi-connect").css('background-color', '#8f2846');
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    RulesComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-rules',
            template: __webpack_require__(796),
            styles: [__webpack_require__(754)]
        }),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({ selector: '[mouseWheel]' }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__services_perm_service_service__["a" /* PermService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_http__["d" /* Http */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_5__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_5__angular_router__["b" /* Router */]) === 'function' && _d) || Object])
    ], RulesComponent);
    return RulesComponent;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=rules.component.js.map

/***/ }),

/***/ 672:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StatsWidgets; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var StatsWidgets = (function () {
    function StatsWidgets(http, router, localStorageService) {
        this.http = http;
        this.router = router;
        this.localStorageService = localStorageService;
        this.vidljiv = true;
        this.widget = "hideWidget";
        this.lang = "srb";
        this.prvihPet = [];
        this.prvihPetExp = [];
        this.prvihPetPoruka = [];
        this.poslatePoruke = [];
        this.primljenePoruke = [];
        this.porukaPoslata = false;
        this.obavestenjaVidljiva = false;
        this.obavestenjaStigla = false;
        this.obavestenja = [];
        this.expObavestenja = [];
        this.ukupnoObavestenja = 0;
        this.meniMultiLang = {
            "srb": [
                /*0*/ { "registrovanih plantaza": " registrovanih plantaža" },
                /*1*/ { "registrovane plantaze": " registrovane plantaže" },
                /*2*/ { "nemate registrovanih plantaza": " nemate registrovanih plantaža" },
                /*3*/ { "registrovan radnik": "registrovan radnik" },
                /*4*/ { "registrovana radnika": "registrovana radnika" },
                /*5*/ { "registrovanih radnika": "registrovanih radnika" },
                /*6*/ { "nemate registrovanih radnika": "nemate registrovanih radnika" },
                /*7*/ { "registrovan ekspert": "registrovan ekspert" },
                /*8*/ { "registrovana eksperta": "registrovana eksperta" },
                /*9*/ { "registrovanih eksperata": "registrovanih eksperata" },
                /*10*/ { "nemate registrovanih eksperata": "nemate registrovanih eksperata" },
                /*11*/ { "obavestenje": "obaveštenje" },
                /*12*/ { "obavestenja": "obaveštenja" },
                /*13*/ { "nemate obavestenja": "nemate obaveštenja" },
            ],
            "eng": [
                /*0*/ { "registrovanih plantaza": " registered plantation" },
                /*1*/ { "registrovane plantaze": "registered plantations" },
                /*2*/ { "nemate registrovanih plantaza": "you do not have registered plantation" },
                /*3*/ { "registrovan radnik": "registered worker" },
                /*4*/ { "registrovana radnika": "registered workers" },
                /*5*/ { "registrovanih radnika": "registered workers" },
                /*6*/ { "nemate registrovanih radnika": "you do not have registered workers" },
                /*7*/ { "registrovan ekspert": "registered expert" },
                /*8*/ { "registrovana eksperta": "registered experts" },
                /*9*/ { "registrovanih eksperata": "registered experts" },
                /*10*/ { "nemate registrovanih eksperata": "you do not have any registered experts" },
                /*11*/ { "obavestenje": "Notification" },
                /*12*/ { "obavestenja": "Notifications" },
                /*13*/ { "nemate obavestenja": "you do not have any notification" },
            ],
        };
    }
    StatsWidgets.prototype.skarijMeni = function () {
        this.vidljiv = !this.vidljiv;
        this.localStorageService.set("meniS", this.vidljiv);
        if (!this.vidljiv) {
            this.widget = "showWidget";
        }
        else {
            this.widget = "hideWidget";
        }
    };
    StatsWidgets.prototype.ngOnInit = function () {
        var _this = this;
        var i;
        i = this.localStorageService.get("meniS");
        this.vidljiv = i;
        if (!this.vidljiv) {
            this.widget = "showWidget";
        }
        else {
            this.widget = "hideWidget";
        }
        this.preuzmiStatistiku();
        this.selectedLang = this.meniMultiLang[this.lang];
        this.uzmiObavestenja();
        this.uzmiExpObavestenja();
        this.http.get("sessions/LogovaniKorisnik")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.user = data;
            _this.uzmiLang();
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatsWidgets.prototype.preuzmiStatistiku = function () {
        var _this = this;
        this.http.get("stats/stats")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.stats = data;
            console.log(data);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatsWidgets.prototype.uzmiObavestenja = function () {
        var _this = this;
        this.prvihPet = [];
        this.obavestenja = [];
        this.http.get("users/dohvatiObavestenja")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.obavestenja = data;
            if (_this.obavestenja !== undefined) {
                console.log("stiglo");
                for (var i = 0; i < 3; i++)
                    if (_this.obavestenja[i] !== undefined)
                        _this.prvihPet.push(_this.obavestenja[i]);
                    else
                        break;
                _this.obavestenjaStigla = true;
                _this.ukupnoObavestenja = _this.obavestenja.length;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatsWidgets.prototype.uzmiExpObavestenja = function () {
        var _this = this;
        this.prvihPetExp = [];
        this.expObavestenja = [];
        this.http.get("users/expNotifications")
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            if (data.success) {
                _this.expObavestenja = data.not;
                if (_this.expObavestenja.length > 0) {
                    for (var i = 0; i < 3 - _this.obavestenja.length; i++)
                        if (_this.expObavestenja[i] !== undefined)
                            _this.prvihPetExp.push(_this.expObavestenja[i]);
                        else
                            break;
                    _this.obavestenjaStigla = true;
                    _this.ukupnoObavestenja = _this.expObavestenja.length + _this.obavestenja.length;
                    console.log(_this.expObavestenja);
                }
            }
            else {
                _this.ukupnoObavestenja = _this.obavestenja.length;
            }
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatsWidgets.prototype.promeniStranu = function (br) {
        if (br == 1)
            this.router.navigate(['./user']);
        else if (br == 2)
            this.router.navigate(['./addworker']);
        else if (br == 3)
            this.router.navigate(['./addworker']);
        else if (br == 4)
            this.router.navigate(['./notifications']);
    };
    StatsWidgets.prototype.uzmiLang = function () {
        var _this = this;
        this.http.get("users/getUserLang/" + this.user.id)
            .map(function (res) { return res.json(); })
            .subscribe(function (data) {
            _this.lang = data;
            _this.selectedLang = _this.meniMultiLang[_this.lang[0]["lang"]];
            console.log(_this.selectedLang);
        }, function (err) { return console.log(err); }, function () { return console.log('Completed'); });
    };
    StatsWidgets = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-widgets',
            template: __webpack_require__(798)
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__angular_router__["b" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_router__["b" /* Router */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3_angular_2_local_storage__["LocalStorageService"]) === 'function' && _c) || Object])
    ], StatsWidgets);
    return StatsWidgets;
    var _a, _b, _c;
}());
//# sourceMappingURL=stats-widgets.js.map

/***/ }),

/***/ 673:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(247);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UniquePipe; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var UniquePipe = (function () {
    function UniquePipe() {
    }
    UniquePipe.prototype.transform = function (value) {
        if (value !== undefined && value !== null) {
            return __WEBPACK_IMPORTED_MODULE_1_lodash__["uniqBy"](value, 'name');
        }
        return value;
    };
    UniquePipe = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'unique',
            pure: false
        }), 
        __metadata('design:paramtypes', [])
    ], UniquePipe);
    return UniquePipe;
}());
//# sourceMappingURL=unique.pipe.js.map

/***/ }),

/***/ 674:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};
//# sourceMappingURL=environment.js.map

/***/ }),

/***/ 735:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 736:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 737:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 738:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 739:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 740:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 741:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 742:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 743:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 744:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 745:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 746:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 747:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 748:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 749:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 750:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 751:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 752:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 753:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 754:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 755:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 756:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(13)();
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ 757:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 396,
	"./af.js": 396,
	"./ar": 402,
	"./ar-dz": 397,
	"./ar-dz.js": 397,
	"./ar-ly": 398,
	"./ar-ly.js": 398,
	"./ar-ma": 399,
	"./ar-ma.js": 399,
	"./ar-sa": 400,
	"./ar-sa.js": 400,
	"./ar-tn": 401,
	"./ar-tn.js": 401,
	"./ar.js": 402,
	"./az": 403,
	"./az.js": 403,
	"./be": 404,
	"./be.js": 404,
	"./bg": 405,
	"./bg.js": 405,
	"./bn": 406,
	"./bn.js": 406,
	"./bo": 407,
	"./bo.js": 407,
	"./br": 408,
	"./br.js": 408,
	"./bs": 409,
	"./bs.js": 409,
	"./ca": 410,
	"./ca.js": 410,
	"./cs": 411,
	"./cs.js": 411,
	"./cv": 412,
	"./cv.js": 412,
	"./cy": 413,
	"./cy.js": 413,
	"./da": 414,
	"./da.js": 414,
	"./de": 416,
	"./de-at": 415,
	"./de-at.js": 415,
	"./de.js": 416,
	"./dv": 417,
	"./dv.js": 417,
	"./el": 418,
	"./el.js": 418,
	"./en-au": 419,
	"./en-au.js": 419,
	"./en-ca": 420,
	"./en-ca.js": 420,
	"./en-gb": 421,
	"./en-gb.js": 421,
	"./en-ie": 422,
	"./en-ie.js": 422,
	"./en-nz": 423,
	"./en-nz.js": 423,
	"./eo": 424,
	"./eo.js": 424,
	"./es": 426,
	"./es-do": 425,
	"./es-do.js": 425,
	"./es.js": 426,
	"./et": 427,
	"./et.js": 427,
	"./eu": 428,
	"./eu.js": 428,
	"./fa": 429,
	"./fa.js": 429,
	"./fi": 430,
	"./fi.js": 430,
	"./fo": 431,
	"./fo.js": 431,
	"./fr": 434,
	"./fr-ca": 432,
	"./fr-ca.js": 432,
	"./fr-ch": 433,
	"./fr-ch.js": 433,
	"./fr.js": 434,
	"./fy": 435,
	"./fy.js": 435,
	"./gd": 436,
	"./gd.js": 436,
	"./gl": 437,
	"./gl.js": 437,
	"./he": 438,
	"./he.js": 438,
	"./hi": 439,
	"./hi.js": 439,
	"./hr": 440,
	"./hr.js": 440,
	"./hu": 441,
	"./hu.js": 441,
	"./hy-am": 442,
	"./hy-am.js": 442,
	"./id": 443,
	"./id.js": 443,
	"./is": 444,
	"./is.js": 444,
	"./it": 445,
	"./it.js": 445,
	"./ja": 446,
	"./ja.js": 446,
	"./jv": 447,
	"./jv.js": 447,
	"./ka": 448,
	"./ka.js": 448,
	"./kk": 449,
	"./kk.js": 449,
	"./km": 450,
	"./km.js": 450,
	"./ko": 451,
	"./ko.js": 451,
	"./ky": 452,
	"./ky.js": 452,
	"./lb": 453,
	"./lb.js": 453,
	"./lo": 454,
	"./lo.js": 454,
	"./lt": 455,
	"./lt.js": 455,
	"./lv": 456,
	"./lv.js": 456,
	"./me": 457,
	"./me.js": 457,
	"./mi": 458,
	"./mi.js": 458,
	"./mk": 459,
	"./mk.js": 459,
	"./ml": 460,
	"./ml.js": 460,
	"./mr": 461,
	"./mr.js": 461,
	"./ms": 463,
	"./ms-my": 462,
	"./ms-my.js": 462,
	"./ms.js": 463,
	"./my": 464,
	"./my.js": 464,
	"./nb": 465,
	"./nb.js": 465,
	"./ne": 466,
	"./ne.js": 466,
	"./nl": 468,
	"./nl-be": 467,
	"./nl-be.js": 467,
	"./nl.js": 468,
	"./nn": 469,
	"./nn.js": 469,
	"./pa-in": 470,
	"./pa-in.js": 470,
	"./pl": 471,
	"./pl.js": 471,
	"./pt": 473,
	"./pt-br": 472,
	"./pt-br.js": 472,
	"./pt.js": 473,
	"./ro": 474,
	"./ro.js": 474,
	"./ru": 475,
	"./ru.js": 475,
	"./se": 476,
	"./se.js": 476,
	"./si": 477,
	"./si.js": 477,
	"./sk": 478,
	"./sk.js": 478,
	"./sl": 479,
	"./sl.js": 479,
	"./sq": 480,
	"./sq.js": 480,
	"./sr": 482,
	"./sr-cyrl": 481,
	"./sr-cyrl.js": 481,
	"./sr.js": 482,
	"./ss": 483,
	"./ss.js": 483,
	"./sv": 484,
	"./sv.js": 484,
	"./sw": 485,
	"./sw.js": 485,
	"./ta": 486,
	"./ta.js": 486,
	"./te": 487,
	"./te.js": 487,
	"./tet": 488,
	"./tet.js": 488,
	"./th": 489,
	"./th.js": 489,
	"./tl-ph": 490,
	"./tl-ph.js": 490,
	"./tlh": 491,
	"./tlh.js": 491,
	"./tr": 492,
	"./tr.js": 492,
	"./tzl": 493,
	"./tzl.js": 493,
	"./tzm": 495,
	"./tzm-latn": 494,
	"./tzm-latn.js": 494,
	"./tzm.js": 495,
	"./uk": 496,
	"./uk.js": 496,
	"./uz": 497,
	"./uz.js": 497,
	"./vi": 498,
	"./vi.js": 498,
	"./x-pseudo": 499,
	"./x-pseudo.js": 499,
	"./yo": 500,
	"./yo.js": 500,
	"./zh-cn": 501,
	"./zh-cn.js": 501,
	"./zh-hk": 502,
	"./zh-hk.js": 502,
	"./zh-tw": 503,
	"./zh-tw.js": 503
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 757;


/***/ }),

/***/ 765:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n<style type=\"text/css\">\n\t\t@font-face {\n\t\t    font-family: 'Forte';\n\t\t    src:url('Forte.ttf.woff') format('woff'),\n\t\t        url('Forte.ttf.svg#Forte') format('svg'),\n\t\t        url('Forte.ttf.eot'),\n\t\t        url('Forte.ttf.eot?#iefix') format('embedded-opentype'); \n\t\t        font-weight: normal;\n\t\t        font-style: normal;\n\t\t}\n    </style>\n \n\n\n</head>\n\n<body>\n\n    <div id=\"wrapper\" >\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div [hidden]=\"(dozvole!==undefined&&dozvole.guest==true)||(smeDaPise==false&&isOwner==false)\" id=\"page-wrapper\">\n            <app-widgets></app-widgets>\n\n            <div class=\"container-fluid\">\n                <!-- ODABIR PARCELA -->\n                <div class=\"col-md-12 \" style=\"text-align:center\">\n                    <div class=\"col-md-12  \" style=\"text-align:center;\">\n                        <div id=\"togglable-tabs\" id=\"opcije\">\n                            <!-- meni za podesavanja  -->\n\t\t\t\t\t\n\t\t\t\t  <div class=\"tab\" role=\"tabpanel\">\n\t\t\t\t\t\t<!-- Nav tabs -->\n\t\t\t\t\t\t<ul class=\"nav nav-tabs\" role=\"tablist\">\n\t\t\t\t\t\t\t<li role=\"presentation\" class=\"{{cssStyleT}} {{plantazaVidljiva ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[0][\"text\"]}}</a></li>\n\t\t\t\t\t\t\t<li role=\"presentation\" class=\"{{cssStyleT}} {{imanjeVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab1()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[1][\"text\"]}}</a></li>\n\t\t\t\t\t\t   \n\t\t\t\t\t\t</ul>\n\t\t\t\t</div>   \n\n                            <form [formGroup]=\"plantForm\" (ngSubmit)=\"onSubmit(plantForm.value)\" [hidden]=\"!plantazaVidljiva\">\n\n                                <div class=\"panel panel-primary panelDef{{cssStyle}}\">\n                                    <div class=\"panel-heading highFivePanel{{cssStyle}}\" >{{selectedLang[2][\"text\"]}}</div>\n\t\t\t\t\t\t\t\t\t   <div *ngIf=\"unesiIme\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[15][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unesiVlasnikaPlantaze\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[16][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unesiImanje\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[17][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unesiVrstu\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[18][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unesiPodVrstu\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[19][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unesiProizvodjaca\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[20][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unesiPoligon\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[21][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n                                        <div *ngIf=\"dodataPlantaza\" class=\"panel-footer \" style=\"height:100% \">\n\t\t\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\" >\n\t\t\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \n\t\t\t\t\t\t\t\t\t\t\t\t{{selectedLang[22][\"text\"]}}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n                                    <div class=\"panel-body \" style=\"height:100% \">\n                                        <div class=\"col-md-12 \" style=\"text-align:center;\">\n                                            <div class=\"col-md-4 \" style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">{{selectedLang[3][\"text\"]}}</label>\n                                                <div class=\"input-group col-md-7\">\n                                                    <input class=\"form-control\" formControlName=\"name\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\n                                                </div>\n\n                                            </div>\n\t\t\t\t\t\t\t\t\t\t\t <div class=\"col-md-4 \" *ngIf=\"isOwner||dozvoleKodGazde.length!=0\">\n                                                <label class=\"col-md-5 \">{{selectedLang[4][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                    <select class=\"form-control\" formControlName=\"vlasnikPlantaze\" id='vlasnici'>\n                                                        <option  *ngFor=\"let ow of komeMozeDaDoda\" value=\"{{ow.id}}\">{{ow.name}} {{ow.surname}}</option>\n                                                    </select>\n                                                </div>\n\n                                            </div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4 \" *ngIf=\"imanja!==undefined\">\n                                                <label class=\"col-md-5 \">{{selectedLang[5][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                    <select class=\"form-control\" id='imanje'>\n                                                        <option *ngFor=\"let im of imanja\" value=\"{{im.idparc}}\">{{im.name}}</option>\n                                                    </select>\n                                                </div>\n\n                                            </div>\n\t\t\t\t\t\t\t\t\t </div>\n\t\t\t\t\t\t\t\t\t <div class=\"col-md-12 \" style=\"text-align:center;\">\n                                            <div class=\"col-md-4 \" style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">{{selectedLang[6][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                    <select class=\"form-control\" (change)=\"onSelect($event.target.value)\" formControlName=\"vrsta\">\n                                                         <option *ngFor=\"let tip of tipovi\"  [value]=\"tip.id\">{{tip.name}}</option>\n                                                    </select>\n                                                </div>\n\n                                            </div>\n\n                                            <div class=\"col-md-4 \" *ngIf=\"ddVisible\" style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \">{{selectedLang[7][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                    <select class=\"form-control \" formControlName=\"podvrsta\">\n                                                        <option *ngFor=\"let podtip of podtipovi\" [value]=\"podtip.id\" >{{podtip.name}}</option>\n                                                    </select>\n                                                </div>\n\n\n                                            </div>\n                                            <div class=\"col-md-4 \">\n                                                <label class=\"col-md-5 \">{{selectedLang[8][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                    <select class=\"form-control\" formControlName=\"proizvodjacSemena\">\n                                                        <option *ngFor=\"let pr of proizvodjaci\" [value]=\"pr.id\">{{pr.name}}</option>\n                                                    </select>\n                                                </div>\n\n                                            </div>\n                                           \n                                            \n\n\n\n\n                                        </div>\n\n                                    </div>\n\t\t\t\t\t\t\t\t\t<div class=\"panel-footer \" style=\"height:100%;width:100%\">\n                                        <button *ngIf=\"(dozvole!==undefined&&dozvole.guest==false&&smeDaPise)||isOwner\" type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\">{{selectedLang[9][\"text\"]}}</button>\n                                       \n                                    </div>\n                                    <div class=\"panel-footer \" style=\"height:100%;width:100%\">\n                                        \n                                        <div style=\"height: 100%; width: 100%\">\n                                            <div id=\"googleMap\" style=\"width:100%; height: 700px\"></div>\n                                        </div>\n                                    </div>\n\n\n\n                                </div>\n                            </form>\n\n\n                            <form [hidden]=\"!imanjeVidljivo\">\n                                <div class=\"panel panel-primary panelDef{{cssStyle}}\">\n                                    <div class=\"panel-heading highFivePanel{{cssStyle}}\">{{selectedLang[10][\"text\"]}}</div>\n                                    <div class=\"panel-body \" style=\"height:100% \">\n                                        <div class=\"col-md-12 \" style=\"text-align:center;\">\n                                            <div class=\"col-md-6 \" style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">{{selectedLang[11][\"text\"]}}</label>\n                                                <div class=\"input-group col-md-7\">\n                                                    <input class=\"form-control\" type=\"text\" name=\"imanjeIme\" [(ngModel)]=\"imanjeIme\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\n                                                </div>\n\n                                            </div>\n                                      \n                                        <div class=\"col-md-6 \" *ngIf=\"isOwner||dozvoleKodGazde.length!=0\">\n                                            <label class=\"col-md-5 \">{{selectedLang[12][\"text\"]}}</label>\n                                            <div class=\"col-md-7 \">\n                                                <select class=\"form-control\" id='vlasnik'>\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" value=\"{{ow.id}}\">{{ow.name}} {{ow.surname}}</option>\n                                                 </select>\n                                            </div>\n\n                                        </div>\n\t\t\t\t\t\t\t\t\t  </div>\n                                     \n                                       \n                                    </div>\n                                     <div *ngIf=\"dodatoImanje\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                            <button aria-label=\"Close\" (click)='close()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>\n                                            {{selectedLang[13][\"text\"]}}\n                                        </div>\n                                    <div *ngIf=\"nijeDodato\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                            <button aria-label=\"Close\" (click)='close()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>\n                                            {{selectedLang[14][\"text\"]}}\n                                        </div>\n\t\t\t\t\t\t\t\t\t<div class=\"panel-body \" style=\"height:100%;width:100%\">\n                                        <button (click)=\"dodajImanje()\" *ngIf=\"(dozvole!==undefined&&dozvole.guest==false&&smeDaPise)||isOwner\" type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\">{{selectedLang[9][\"text\"]}}</button>\n                                        \n                                    </div>\n                                    <div class=\"panel-footer \" style=\"height:100%;width:100%\">\n                                         <div style=\"height: 100%; width: 100%\">\n                                            <div id=\"googleMap\" style=\"width:100%; height: 700px\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n\n\n\n\n                        </div>\n\n                    </div>\n                    <!--END ODABIR PARCELA -->\n\n\n\n                </div>\n\n            \n\n\n\n            </div>\n            <!-- end glavni deo -->\n        </div>\n        <div id=\"page-wrapper\" *ngIf=\"(dozvole!==undefined&&dozvole.guest==true)||(smeDaPise==false&&isOwner==false)\" style=\"background-color:white; width:100%;  background-size:cover;   -webkit-background-size: cover;-moz-background-size: cover;\">\n            <div class=\"container-fluid\" style=\" width:80%; margin-top:10%;\" >\n             <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Trenutno pristupate kao gost.\n                   </p> \n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\n                   Za više informacija obratite se administratoru sistema.\n                   </p> -->\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Nemate pristup ovoj stranici!</p>\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Za vise informacija obratite se administratoru sistema.</p>\n            </div>\n        </div>\n\n    </div>\n\n\n    <!-- full screen -->\n    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n        defer>\n\n        </script>\n    <script>\n        function initMap() {\n            var mapProp = {\n                center: new google.maps.LatLng(51.508742, -0.120850),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        }\n        google.maps.event.addDomListener(window, 'load', initialize);\n    </script>\n\n</body>\n\n</html>"

/***/ }),

/***/ 766:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<head>\r\n    <title>PlanTech</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta name=\"author\" content=\"HighFive\" />\r\n\r\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\r\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\r\n\r\n\r\n    <script src=\"https://unpkg.com/zone.js/dist/zone.js\"></script>\r\n    <script src=\"https://unpkg.com/zone.js/dist/long-stack-trace-zone.js\"></script>\r\n    <script src=\"https://unpkg.com/reflect-metadata@0.1.3/Reflect.js\"></script>\r\n    <script src=\"https://unpkg.com/systemjs@0.19.31/dist/system.js\"></script>\r\n    <link data-require=\"bootstrap-css@*\" data-semver=\"3.3.1\" rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\"\r\n    />\r\n  \r\n    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\r\n        defer>\r\n\r\n        </script>\r\n    <script>\r\n        function initMap() {\r\n            var mapProp = {\r\n                center: new google.maps.LatLng(51.508742, -0.120850),\r\n                zoom: 5,\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP\r\n            };\r\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\r\n        }\r\n        google.maps.event.addDomListener(window, 'load', initialize);\r\n    </script>\r\n\r\n</head>\r\n\r\n<body>\r\n<div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined&&lang=='srb'\">\r\n        <div id=\"loading-text\">UČITAVANJE</div>\r\n        <div id=\"loading-content\"></div>\r\n    </div>\r\n\t<div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined&&lang=='eng'\">\r\n        <div id=\"loading-text\">LOADING</div>\r\n        <div id=\"loading-content\"></div>\r\n    </div>\r\n\t <!-- srpski -->\r\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined&&lang=='srb'\">\r\n\r\n        <app-meni></app-meni>\r\n\r\n        <!-- glavni deo -->\r\n        <div id=\"page-wrapper\" *ngIf=\"(dozvole!==undefined&&dozvole.guest==false)&&(smeDaDodaje || isOwner)\">\r\n\r\n            <app-widgets></app-widgets>\r\n\r\n            <div class=\"container-fluid\">\r\n\t\t\t           <div  class=\"col-md-12 row\" style=\"text-align:center\">\r\n                  <div class=\"tab\" role=\"tabpanel\">\r\n                        <!-- Nav tabs -->\r\n                        <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{proizvodjacVidljiv ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Dodaj prozivodjaca</a></li>\r\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{dodajKulturuVidljiv ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab2()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Dodaj kulturu</a></li>\r\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{dodajPodkulturuVidljiv ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab3()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Dodaj podkulturu</a></li>\r\n\t\t\t  \r\n                        </ul>\r\n                    </div>\r\n    <!--ADD PRODUCER MODAL -->\r\n                    <div *ngIf=\"proizvodjacVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t\t\t\t     <form class=\"form-horizontal col-md-12\" [formGroup]=\"producerForm\">\r\n                            <div class=\"col-md-6\" style=\"text-align:center;\">\r\n                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">Ime</label>\r\n\t\t\t\t\t\t\t\t   <div class=\"input-group col-md-7\">\r\n\t\t\t\t\t\t\t\t\t\t<input class=\"form-control required\" formControlName=\"producerName\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-6\" style=\"padding-top:5px\">\r\n                                <label class=\"col-md-5 \">Izbor vlasnika </label>\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-7 \">\r\n                                          <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\r\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\r\n                                                    </select>\r\n\t\t\t\t\t\t\t\t   </div>\r\n                                       \r\n                            </div>\r\n\t\t\t\t\t\t\t </form>\r\n\t\t\t\t\t\t\t </div>\r\n                            <div class=\"panel-footer\"><button type=\"button\" class=\"btn btn-highFive{{cssStyle}} \" (click)=\"addProducer(producerForm.value)\" data-dismiss=\"modal\">Sacuvaj</button>\r\n                                <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                            </div>\r\n                       \r\n                       \r\n                        <div *ngIf=\"dodatProizvodjac\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            Uspesno ste dodali novog proizvodjaca\r\n                        </div>\r\n                        <div *ngIf=\"unesiProizvodjaca\" class=\"panel-footer \" style=\"height:100% \">\r\n\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\r\n\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \r\n\t\t\t\t\t\t\t\t\tPopunite sva polja.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t         <div class=\"col-md-12 checkBoxAddType\">\r\n                            <div class=\"form-group col-md-2\">\r\n\r\n                                <input (click)=\"primeniFilter()\" type=\"checkbox\" class=\"required\" id=\"sve\">\r\n                                <label for=\"sve\">Prikaži samo moje proizvodjače</label>\r\n                            </div>\r\n                        </div>\r\n                        <table class=\"table table-bordered\">\r\n\r\n                            <tr>\r\n                                <th>Naziv proizvodjača</th>\r\n                                <th>Brisanje</th>\r\n                            </tr>\r\n                            <ng-container *ngFor=\"let pr of proizvodjaci | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                                <tr *ngIf='pr.smeDaBrise||!filter'>\r\n                                    <td>{{pr.name}}</td>\r\n                                    <td><span class=\"opcijePlantaza\" flow=\"down\" tooltip=\"Brisanje imanja\"> \r\n                                                   \r\n                                        <i\r\n                                            *ngIf=\"pr.smeDaBrise\" data-toggle=\"modal\" data-target=\"#brisanjeProd\" (click)='postaviIzabranogProizvodjaca(pr.id)'\r\n                                            id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\r\n                                            </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </table>\r\n                        <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END PRODUCER MODAL -->\r\n      <!--dodajKulturuVidljiv -->\r\n                    <div *ngIf=\"dodajKulturuVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t\t\t  <form class=\"form-horizontal col-md-12 \" [formGroup]=\"typeForm\">\r\n                            <div class=\"col-md-6\">                    \r\n                                    <label class=\"col-md-5 \" style=\"padding-top: 5px\">Ime</label>\r\n\t\t\t\t\t\t\t\t\t  <div class=\"input-group col-md-7\">\r\n\t\t\t\t\t\t\t\t\t\t<input class=\"form-control required\" formControlName=\"typeName\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n \r\n                            </div>\r\n                            \r\n                            <div class=\"col-md-6\"  style=\"padding-top:5px\">\r\n\t\t\t\t\t\t\t<label class=\"col-md-5 \">Izbor vlasnika </label>\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-7 \">\r\n                                            <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\r\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\r\n                                                    </select>\r\n\t\t\t\t\t\t\t\t   </div>\r\n                               \r\n                            </div>\r\n\t\t\t\t\t\t\t </form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n                            <div class=\"panel-footer\"><button type=\"button\" class=\"btn btn-highFive{{cssStyle}} \" (click)=\"addType(typeForm.value)\" data-dismiss=\"modal\">Sacuvaj</button>\r\n                                <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                            </div>\r\n                       \r\n                        <div style=\"clear:both\"></div>\r\n                        <div *ngIf=\"dodatTip\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            Uspešno ste dodali novu kulturu.\r\n                        </div>\r\n                        <div *ngIf=\"unesiKulturu\" class=\"panel-footer \" style=\"height:100% \">\r\n\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\r\n\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \r\n\t\t\t\t\t\t\t\t\tPopunite sva polja.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t         <div class=\"col-md-12 checkBoxAddType\">\r\n                            <div class=\"form-group col-md-2\">\r\n\r\n                                <input (click)=\"primeniFilter()\" type=\"checkbox\" class=\"required\" id=\"sve\">\r\n                                <label for=\"sve\">Prikaži samo moje tipove</label>\r\n                            </div>\r\n                        </div>\r\n                        <table class=\"table table-bordered\">\r\n\r\n                            <tr>\r\n                                <th>Naziv tipa</th>\r\n                                <th>Brisanje</th>\r\n                            </tr>\r\n                            <ng-container *ngFor=\"let tip of tipovi | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                                <tr *ngIf='tip.smeDaBrise||!filter'>\r\n                                    <td>{{tip.name}}</td>\r\n                                    <td><span class=\"opcijePlantaza\" flow=\"down\" tooltip=\"Brisanje imanja\"> \r\n                                                   \r\n                                        <i\r\n                                            *ngIf=\"tip.smeDaBrise\" data-toggle=\"modal\" data-target=\"#brisanjeTipa\" (click)='postaviIzabranTip(tip.id)'\r\n                                            id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\r\n                                            </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </table>\r\n                        <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\t\t\t\t\t\t\t </div>\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END dodajKulturuVidljiv -->\r\n        <!--SUBTYPE MODAL -->\r\n                    <div *ngIf=\"dodajPodkulturuVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t\t    <form class=\"form-horizontal col-md-12\" [formGroup]=\"subtypeForm\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-4\" style=\"margin-top:5px\">\r\n                        \r\n                                <label class=\"center-block\">Tip kulture\r\n                                            <select class=\"form-control\"  formControlName=\"vrsta\">\r\n                                                <option *ngFor=\"let tip of tipovi\" [value]=\"tip.id\">{{tip.name}}</option>\r\n                                            </select>\r\n                                        </label>\r\n                          \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-4\" style=\"margin-top:5px\">\r\n                            \r\n                                <label class=\"center-block\">Izbor vlasnika\r\n                                          <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\r\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\r\n                                                    </select>\r\n                                        </label>\r\n                          \r\n\t\t\t\t\t\t\t</div>\r\n\r\n                            <div class=\" col-md-4\"><label>Ime</label><input class=\"form-control\" formControlName=\"subtypeName\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t </form>\r\n </div>\r\n                            <div class=\"panel-footer\"><button type=\"button\" class=\"btn btn-highFive{{cssStyle}} \" (click)=\"addSubtype(subtypeForm.value)\" data-dismiss=\"modal\">Sacuvaj</button>\r\n                                <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                            </div>\r\n                       \r\n                        <div style=\"clear:both\"></div>\r\n                        <div *ngIf=\"dodatPodtip\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            Uspešno ste dodali novu podkulturu.\r\n                        </div>\r\n                         <div  class=\"panel-footer \" style=\"height:100% \">\r\n\t\t\t\t\t\t\t<div *ngIf=\"unesiPodkulturu\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" >\r\n\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> \r\n\t\t\t\t\t\t\t\t\tPopunite sva polja.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t           <div class=\"col-md-12 checkBoxAddType\">\r\n                            <div class=\"form-group col-md-2\">\r\n\r\n                                <input (click)=\"primeniFilter()\" type=\"checkbox\" class=\"required\" id=\"sve\">\r\n                                <label for=\"sve\">Prikaži samo moje podkulture</label>\r\n                            </div>\r\n                        </div>\r\n                        <table class=\"table table-bordered\">\r\n\r\n                            <tr>\r\n                                <th>Naziv podkulture</th>\r\n                                <th>Brisanje</th>\r\n                            </tr>\r\n                            <ng-container *ngFor=\"let podtip of podtipovi  | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                                <tr *ngIf='podtip.smeDaBrise||!filter'>\r\n                                    <td>{{podtip.name}}</td>\r\n                                    <td><span class=\"opcijePlantaza\" flow=\"down\" tooltip=\"Brisanje imanja\"> \r\n                                                   \r\n                                        <i\r\n                                            *ngIf=\"podtip.smeDaBrise\" data-toggle=\"modal\" data-target=\"#brisanjePodtipa\" (click)='postaviIzabranPodtip(podtip.id)'\r\n                                            id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\r\n                                            </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </table>\r\n                       <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END SUBTYPE MODAL -->\r\n          <!--spisakKulturaVidljiv -->\r\n                    <div *ngIf=\"spisakKulturaVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END spisakKulturaVidljiv -->\r\n            <!--spisakPodkulturuVidljiv -->\r\n                    <div *ngIf=\"spisakPodkulturuVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END spisakPodkulturuVidljiv -->\r\n\r\n\r\n                <div *ngIf=\"spisakProizvodjacaVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n       \r\n\r\n\r\n\r\n            </div>\r\n            <!--BRISANJE MODAL-->\r\n            <div class=\"modal fade\" id=\"brisanjeTipa\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Brisanje tipa</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <p>Da li ste sigurni da zelite da obrišete tip, to će ukloniti obrisani tip sa svake plantaze na\r\n                                kojoj je zasejan?</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" (click)=\"ObrisiTip()\" class=\"btn btn-success\" data-dismiss=\"modal\">Potvrdi</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--END BRISANJE MODAL-->\r\n\r\n            <!--BRISANJE MODAL-->\r\n            <div class=\"modal fade\" id=\"brisanjePodtipa\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Brisanje podtipa</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <p>Da li ste sigurni da želite da obrišete podtip, to će ukloniti obrisani podtip sa svake plantaze na\r\n                                kojoj je zasejan?</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" (click)=\"ObrisiPodtip()\" class=\"btn btn-success\" data-dismiss=\"modal\">Potvrdi</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--END BRISANJE MODAL-->\r\n            <div class=\"modal fade\" id=\"brisanjeProd\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Brisanje proizvodjača</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <p>Da li ste sigurni da želite da obrišete proizvodjača, to će ukloniti obrisanog proizvodjača sa svake plantaže?</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" (click)=\"ObrisiProizvodjaca()\" class=\"btn btn-success\" data-dismiss=\"modal\">Potvrdi</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&(dozvole.guest==true || (!isOwner&&!smeDaDodaje))\">\r\n            <div class=\"container-fluid\" style=\"width:80%; margin-top:10%;\">\r\n                <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\r\n                   Trenutno pristupate kao gost.\r\n                   </p> \r\n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\r\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\r\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\r\n                   Za više informacija obratite se administratoru sistema.\r\n                   </p> -->\r\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\r\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Nemate pristup ovoj stranici!</p>\r\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Za vise informacija obratite se administratoru sistema.</p>\r\n            </div>\r\n        </div>\r\n        <!-- end glavni deo -->\r\n    </div>\r\n <!-- end srpski -->\r\n \r\n \t <!--engleski -->\r\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined&&lang=='eng'\">\r\n\r\n        <app-meni></app-meni>\r\n\r\n        <!-- glavni deo -->\r\n        <div id=\"page-wrapper\" *ngIf=\"(dozvole!==undefined&&dozvole.guest==false)&&(isOwner||smeDaDodaje)\">\r\n\r\n            <app-widgets></app-widgets>\r\n\r\n            <div class=\"container-fluid\">\r\n\t\t\t           <div class=\"col-md-12 row\" style=\"text-align:center\">\r\n                    <div class=\"tab\" role=\"tabpanel\">\r\n                        <!-- Nav tabs -->\r\n                        <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{proizvodjacVidljiv ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Add producer</a></li>\r\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{dodajKulturuVidljiv ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab2()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Add type</a></li>\r\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{dodajPodkulturuVidljiv ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab3()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Add subtype</a></li>\r\n\t\t\t            </ul>\r\n                    </div>\r\n\r\n    <!--ADD PRODUCER MODAL -->\r\n                    <div *ngIf=\"proizvodjacVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t\t\t\t     <form class=\"form-horizontal col-md-12\" [formGroup]=\"producerForm\">\r\n                            <div class=\"col-md-6\" style=\"text-align:center;\">\r\n                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">Name</label>\r\n\t\t\t\t\t\t\t\t   <div class=\"input-group col-md-7\">\r\n\t\t\t\t\t\t\t\t\t\t<input class=\"form-control required\" formControlName=\"producerName\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-6\" style=\"padding-top:5px\">\r\n                                <label class=\"col-md-5 \">Choose owner</label>\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-7 \">\r\n                                          <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\r\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\r\n                                                    </select>\r\n\t\t\t\t\t\t\t\t   </div>\r\n                                       \r\n                            </div>\r\n\t\t\t\t\t\t\t </form>\r\n\t\t\t\t\t\t\t </div>\r\n                            <div class=\"panel-footer\"><button type=\"button\" class=\"btn btn-highFive{{cssStyle}} \" (click)=\"addProducer(producerForm.value)\" data-dismiss=\"modal\">Save</button>\r\n                                <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                            </div>\r\n                       \r\n                       \r\n                        <div *ngIf=\"dodatProizvodjac\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> You have successfully added new producer\r\n                        </div>\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t         <div class=\"col-md-12 checkBoxAddType\">\r\n                            <div class=\"form-group col-md-2\">\r\n\r\n                                <input (click)=\"primeniFilter()\" type=\"checkbox\" class=\"required\" id=\"sve\">\r\n                                <label for=\"sve\">Show my producers only</label>\r\n                            </div>\r\n                        </div>\r\n                        <table class=\"table table-bordered\">\r\n\r\n                            <tr>\r\n                                <th>Producer name</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                            <ng-container *ngFor=\"let pr of proizvodjaci | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                                <tr *ngIf='pr.smeDaBrise||!filter'>\r\n                                    <td>{{pr.name}}</td>\r\n                                    <td><span class=\"opcijePlantaza\" flow=\"down\" tooltip=\"Brisanje imanja\"> \r\n                                                   \r\n                                        <i\r\n                                            *ngIf=\"pr.smeDaBrise\" data-toggle=\"modal\" data-target=\"#brisanjeProd\" (click)='postaviIzabranogProizvodjaca(pr.id)'\r\n                                            id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\r\n                                            </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </table>\r\n                        <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END PRODUCER MODAL -->\r\n      <!--dodajKulturuVidljiv -->\r\n                    <div *ngIf=\"dodajKulturuVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t\t\t  <form class=\"form-horizontal col-md-12 \" [formGroup]=\"typeForm\">\r\n                            <div class=\"col-md-6\">                    \r\n                                    <label class=\"col-md-5 \" style=\"padding-top: 5px\">Name</label>\r\n\t\t\t\t\t\t\t\t\t  <div class=\"input-group col-md-7\">\r\n\t\t\t\t\t\t\t\t\t\t<input class=\"form-control required\" formControlName=\"typeName\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n \r\n                            </div>\r\n                            \r\n                            <div class=\"col-md-6\"  style=\"padding-top:5px\">\r\n\t\t\t\t\t\t\t<label class=\"col-md-5 \">Choose owner</label>\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-7 \">\r\n                                            <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\r\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\r\n                                                    </select>\r\n\t\t\t\t\t\t\t\t   </div>\r\n                               \r\n                            </div>\r\n\t\t\t\t\t\t\t </form>\r\n\t\t\t\t\t\t</div>\r\n\r\n                            <div class=\"panel-footer\"><button type=\"button\" class=\"btn btn-highFive{{cssStyle}} \" (click)=\"addType(typeForm.value)\" data-dismiss=\"modal\">Save</button>\r\n                                <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                            </div>\r\n                       \r\n                        <div style=\"clear:both\"></div>\r\n                        <div *ngIf=\"dodatTip\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button> You have successfully added new type\r\n                        </div>\r\n\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t         <div class=\"col-md-12 checkBoxAddType\">\r\n                            <div class=\"form-group col-md-2\">\r\n\r\n                                <input (click)=\"primeniFilter()\" type=\"checkbox\" class=\"required\" id=\"sve\">\r\n                                <label for=\"sve\">Show only my types</label>\r\n                            </div>\r\n                        </div>\r\n                        <table class=\"table table-bordered\">\r\n\r\n                            <tr>\r\n                                <th>Type name</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                            <ng-container *ngFor=\"let tip of tipovi | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                                <tr *ngIf='tip.smeDaBrise||!filter'>\r\n                                    <td>{{tip.name}}</td>\r\n                                    <td><span class=\"opcijePlantaza\" flow=\"down\" tooltip=\"Brisanje imanja\"> \r\n                                                   \r\n                                        <i\r\n                                            *ngIf=\"tip.smeDaBrise\" data-toggle=\"modal\" data-target=\"#brisanjeTipa\" (click)='postaviIzabranTip(tip.id)'\r\n                                            id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\r\n                                            </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </table>\r\n                        <pagination-controls style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Nect\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END dodajKulturuVidljiv -->\r\n        <!--SUBTYPE MODAL -->\r\n                    <div *ngIf=\"dodajPodkulturuVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t\t    <form class=\"form-horizontal col-md-12\" [formGroup]=\"subtypeForm\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-4\" style=\"margin-top:5px\">\r\n                        \r\n                                <label class=\"center-block\">Tip kulture\r\n                                            <select class=\"form-control\"  formControlName=\"vrsta\">\r\n                                                <option *ngFor=\"let tip of tipovi\" [value]=\"tip.id\">{{tip.name}}</option>\r\n                                            </select>\r\n                                        </label>\r\n                          \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-4\" style=\"margin-top:5px\">\r\n                            \r\n                                <label class=\"center-block\">Type\r\n                                          <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\r\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\r\n                                                    </select>\r\n                                        </label>\r\n                          \r\n\t\t\t\t\t\t\t</div>\r\n\r\n                            <div class=\" col-md-4\"><label>Name</label><input class=\"form-control\" formControlName=\"subtypeName\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t </form>\r\n </div>\r\n                            <div class=\"panel-footer\"><button type=\"button\" class=\"btn btn-highFive{{cssStyle}} \" (click)=\"addSubtype(subtypeForm.value)\" data-dismiss=\"modal\">Save</button>\r\n                                <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                            </div>\r\n                       \r\n                        <div style=\"clear:both\"></div>\r\n                        <div *ngIf=\"dodatPodtip\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>   You have successfully added new subtype\r\n                        </div>\r\n\t\t\t\t\t\t\t\t <div class=\"panel-body \">\r\n\t\t\t\t           <div class=\"col-md-12 checkBoxAddType\">\r\n                            <div class=\"form-group col-md-2\">\r\n\r\n                                <input (click)=\"primeniFilter()\" type=\"checkbox\" class=\"required\" id=\"sve\">\r\n                                <label for=\"sve\">Show only my subtypes</label>\r\n                            </div>\r\n                        </div>\r\n                        <table class=\"table table-bordered\">\r\n\r\n                            <tr>\r\n                                <th>Subtype name</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                            <ng-container *ngFor=\"let podtip of podtipovi  | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                                <tr *ngIf='podtip.smeDaBrise||!filter'>\r\n                                    <td>{{podtip.name}}</td>\r\n                                    <td><span class=\"opcijePlantaza\" flow=\"down\" tooltip=\"Brisanje imanja\"> \r\n                                                   \r\n                                        <i\r\n                                            *ngIf=\"podtip.smeDaBrise\" data-toggle=\"modal\" data-target=\"#brisanjePodtipa\" (click)='postaviIzabranPodtip(podtip.id)'\r\n                                            id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\r\n                                            </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </table>\r\n                       <pagination-controls style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Next\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END SUBTYPE MODAL -->\r\n          <!--spisakKulturaVidljiv -->\r\n                    <div *ngIf=\"spisakKulturaVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END spisakKulturaVidljiv -->\r\n            <!--spisakPodkulturuVidljiv -->\r\n                    <div *ngIf=\"spisakPodkulturuVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n  <!--END spisakPodkulturuVidljiv -->\r\n\r\n                    <div *ngIf=\"spisakProizvodjacaVidljiv\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n       \r\n\r\n\r\n\r\n            </div>\r\n            <!--BRISANJE MODAL-->\r\n            <div class=\"modal fade\" id=\"brisanjeTipa\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Delete type</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <p>Are you shure you want to delete type, it will delete type from every plantation ?\r\n\t\t\t\t\t\t\t</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" (click)=\"ObrisiTip()\" class=\"btn btn-success\" data-dismiss=\"modal\">Confirm</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--END BRISANJE MODAL-->\r\n\r\n            <!--BRISANJE MODAL-->\r\n            <div class=\"modal fade\" id=\"brisanjePodtipa\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Delete subtype</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <p>Are you shure you want to delete subtype, it will delete subtype from every plantation ?</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" (click)=\"ObrisiPodtip()\" class=\"btn btn-success\" data-dismiss=\"modal\">Confirm</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!--END BRISANJE MODAL-->\r\n            <div class=\"modal fade\" id=\"brisanjeProd\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Delete producer</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <p>Are you sure you want to delete producer, it will delete producer from every plantation?</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" (click)=\"ObrisiProizvodjaca()\" class=\"btn btn-success\" data-dismiss=\"modal\">Confirm</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&(dozvole.guest==true || (!isOwner&&!smeDaDodaje))\">\r\n            <div class=\"container-fluid\" style=\"width:80%; margin-top:10%;\">\r\n                <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\r\n                   Trenutno pristupate kao gost.\r\n                   </p> \r\n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\r\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\r\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\r\n                   Za više informacija obratite se administratoru sistema.\r\n                   </p> -->\r\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\r\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">You cant access this page</p>\r\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">For more information contact system admin</p>\r\n            </div>\r\n        </div>\r\n        <!-- end glavni deo -->\r\n    </div>\r\n <!-- end engleski -->\r\n\r\n\r\n\r\n\r\n    <!-- full screen -->\r\n\r\n</body>\r\n\r\n</html>"

/***/ }),

/***/ 767:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\n</head>\n\n<body>\n    <div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined\">\n        <div id=\"loading-text\">UČITAVANJE</div>\n        <div id=\"loading-content\"></div>\n    </div>\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false&&(brojacDozvolaZaDodavanje>0 || brojacDozvolaZaAzuriranje>0 || isOwner)\">\n\n            <app-widgets></app-widgets>\n\n            <div class=\"container-fluid\">\n\n                <!--LISTA RADNIKA -->\n\n\n                <div *ngIf=\"brojacDozvolaZaAzuriranje>0||brojacDozvolaZaDodavanje>0||isOwner\" class=\"col-md-12 row\" style=\"text-align:center\">\n                    <div class=\"tab\" role=\"tabpanel\">\n                        <!-- Nav tabs -->\n                        <ul class=\"nav nav-tabs\" role=\"tablist\">\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{listaVidljiva ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[0][\"Lista radnika\"]}}</a></li>\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{dodavanjeVidljiva ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab1()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[1][\"Dodaj radnika\"]}}</a></li>\n                            <li role=\"presentation\" class=\"{{cssStyleT}} {{listanjeUloga ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab2()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[2][\"Lista uloga\"]}}</a></li>\n\n                        </ul>\n                    </div>\n\n\n                    <div *ngIf=\"listaVidljiva\" class=\"panel panel-primary panelDef{{cssStyle}}\">\n\n                        <div class=\"panel-footer\" *ngIf=\"isOwner||brojacDozvolaZaAzuriranje>0\" style=\"min-height: 80px;max-height: 100%\">\n                            <div class=\"col-md-12 \" style=\"text-align:center;\">\n                                <div class=\"col-md-3 \"></div>\n                                <div class=\"col-md-6 \" style=\"text-align:center;padding-left: 40px\">\n                                    <label>{{selectedLang[3][\"Odabir gazde\"]}}</label>\n                                    <select class=\"form-control \" (change)=\"onChangeLL($event) \" id='vlasniciZaPrikaz'>\n                                                         \n                                                         <option *ngFor=\"let v of Vlasnici\"   value=\"{{v.id}}\" [attr.selected]=\"v.id==user.id? true: null\" >{{ v.name +\" \"+ v.surname}}</option>\n                                                    </select>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846\">{{selectedLang[4][\"Lista mojih ljudi\"]}}\n                        </div>\n                        <!-- Search -->\n                        <form method=\"get\" *ngIf=\"listaVidljiva&&(lang[0]['lang']==undefined||lang[0]['lang']=='srb')\" action=\"/search\" id=\"search\"\n                            style=\"padding:30px; background-color:white;\">\n                            <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Pretraga zaposlenih\" name=\"term\" [(ngModel)]=\"term\" />\n                        </form>\n                        <!-- end Search -->\n                        <div *ngIf=\"uspesnoIzbrisanRadnik\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[12][\"Uspesno ste izbrisali radnika\"]}}\n                            </div>\n                        </div>\n\n\n\n                        <div *ngIf=\"updatedRole\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[15][\"Uspesno ste izabrali novu ulogu\"]}}\n                            </div>\n                        </div>\n\n\n                        <div class=\"panel-body \">\n                            <div class=\"table-responsive\">\n                                <table class=\"table table-bordered table-striped\" [mfData]=\"usersWorkers\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\n                                    <thead>\n                                        <tr>\n\n                                            <th style=\"text-align: center\">\n                                                <mfDefaultSorter by=\"name\">{{selectedLang[6][\"Ime\"]}}</mfDefaultSorter>\n                                            </th>\n                                            <th style=\"text-align: center\">\n                                                <mfDefaultSorter by=\"surname\">{{selectedLang[7][\"Prezime\"]}}</mfDefaultSorter>\n                                            </th>\n                                            <th style=\"text-align: center\">{{selectedLang[8][\"Uloga/Promena uloge\"]}}</th>\n\n                                            <th style=\"text-align: center\">{{selectedLang[9][\"Ukloni\"]}}</th>\n\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        <tr *ngFor=\"let uw of mf.data | filter:term  | paginate: { itemsPerPage: 5, currentPage: p }\">\n\n                                            <td>{{ uw.name }}</td>\n                                            <td> {{ uw.surname }}</td>\n                                            <td>\n                                                <select *ngIf=\"(trenutneDozvole!==undefined&&trenutneDozvole.vrednosti.radnikAzuriraj)||isOwner\" class=\"form-control\" #t\n                                                    (change)=\"onChangeRoleUpdate(t.value,uw.UserConID)\">\n                                                         \n                                                      <option *ngFor=\"let r of roles\"   [value]=\"r.id\" [attr.selected]=\"uw.roleID==r.id? true: null\">{{ r.name}}</option>\n                                                    </select>\n                                            </td>\n\n                                            <td> <span tooltip=\"Brisanje radnika\" flow=\"down\" class=\"opcijePlantaza\">  <i *ngIf=\"(trenutneDozvole!==undefined&&trenutneDozvole.vrednosti.radnikDodajBrisi)||isOwner\"\n                                                    class=\"fa fa-times fa-2x\" data-toggle=\"modal\" data-target=\"#brisanjeRadnika\"\n                                                    (click)=\"postaviZaBrisanje(uw.UserConID)\"></i></span></td>\n\n                                        </tr>\n\n\n                                    </tbody>\n                                </table>\n                                <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!--END LISTA PARCELA -->\n                    <!--BRISANJE MODAL-->\n                    <div class=\"modal fade\" id=\"brisanjeRadnika\" role=\"dialog\">\n                        <div class=\"modal-dialog\">\n\n                            <!-- Modal content-->\n                            <div class=\"modal-content\">\n                                <div class=\"modal-header {{cssStyleH}}\">\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                                    <h4 class=\"modal-title\">{{selectedLang[16][\"Brisanje radnika\"]}}</h4>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <p>{{selectedLang[17][\"Da li ste sigurni da zelite da obrisete radnika?\"]}}</p>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" (click)=\"delete()\" class=\"btn btn-success\" data-dismiss=\"modal\">{{selectedLang[18][\"Potvrdi\"]}}</button>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <!--END BRISANJE MODAL-->\n                    <!-- ODABIR PARCELA -->\n                    <!-- mitar retard -->\n\n\n                    <div class=\"panel panel-primary panelDef{{cssStyle}}\" *ngIf=\"(brojacDozvolaZaDodavanje>0 || isOwner) && dodavanjeVidljiva\">\n                        <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 42px\">{{selectedLang[19][\"Odabir novih radnika\"]}}</div>\n\n                        <div *ngIf=\"uspesnoDodatRadnik\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                            <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            {{selectedLang[20][\"Poslat je zahtev radniku\"]}}\n                        </div>\n                        <div *ngIf=\"radnikVecZaposlen\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[21][\"Izabrani radnik je vec zaposlen kod Vas\"]}}\n                            </div>\n                        </div>\n                        <div *ngIf=\"pokusajDodavanjaAdmina\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[22][\"Nije moguce dodati administratora kao radnika.\"]}}\n                            </div>\n                        </div>\n                        <div *ngIf=\"pokusajDodavanjaSamogSebe\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[23][\"Nije moguce dodati samog sebe.\"]}}\n                            </div>\n                        </div>\n                        <div *ngIf=\"radnikNepostoji\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[24][\"Nije moguce dodati izabranog radnika.\"]}}\n                            </div>\n                        </div>\n                        <div *ngIf=\"nijeMoguceDodatiRadnika\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[25][\"Nije moguce dodati izabranog radnika.\"]}}\n                            </div>\n                        </div>\n                        <div *ngIf=\"radnikJeVlasnik\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                {{selectedLang[26][\"Izabrani radnik je vlasnik neke druge parcele\"]}}\n                            </div>\n                        </div>\n                        <div class=\"panel-footer \" style=\"height:100% \" *ngIf=\"isOwner||brojacDozvolaZaDodavanje>0\">\n\n                        </div>\n\n                        <div class=\"panel-body \" style=\"height:100% \">\n                            <div *ngIf=\"vecPoslatZahtev\" class=\"panel-footer \" style=\"height:100% \">\n                                <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                    <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                    {{selectedLang[13][\"Radniku ste vec poslali zahtev.\"]}}\n                                </div>\n                            </div>\n                            <div *ngIf=\"vecPovezani\" class=\"panel-footer \" style=\"height:100% \">\n                                <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                    <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                    {{selectedLang[14][\"Izabrani radnik je vec zaposlen kod Vas.\"]}}\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 \" style=\"text-align:center;\">\n\n                                <div class=\"col-md-4 \" style=\"text-align:center;\">\n\n\n                                    <label class=\"col-md-12 \">{{selectedLang[3][\"Odabir gazde\"]}}</label>\n                                    <select class=\"form-control  col-md-7\" (change)=\"onChangeV($event) \" id='vlasniciZaAdd'>\n                                                         \n                                                         <option *ngFor=\"let v of Vlasnici\" [attr.selected]=\"user.id==v.id? true: null\"  value=\"{{v.id}}\" >{{ v.name +\" \"+ v.surname}}</option>\n                                                    </select>\n\n                                </div>\n                                <div class=\"col-md-4 \" style=\"text-align:center;\">\n                                    <label>{{selectedLang[28][\"Uloga\"]}}</label>\n                                    <select class=\"form-control \" (change)=\"onChangeR($event)\" id='roleDodavanje'>\n                                                         \n                                                      <option *ngFor=\"let i = index;let r of roles\"  [attr.selected]=\"i==0 ? true: null\" value=\"{{r.id}}\" >{{ r.name }}</option>\n                                                    </select>\n                                </div>\n\n                                <div class=\"col-md-4 \" style=\"text-align:center;\">\n\n                                    <label>{{selectedLang[29][\"Username radnika\"]}}</label>\n                                    <div class=\"input-group col-md-12\">\n                                        <input [(ngModel)]=\"username\" class=\"form-control\" (keyup)=filter1()>\n                                        <span class=\"input-group-addon\"><i  class=\"fa fa-user\"></i></span>\n                                    </div>\n                                    <div class=\"suggestions\" *ngIf=\"filteredList.length > 0\" style='    border-left: 1px solid #c5c5c5;\n    border-right: 1px solid #c5c5c5;\n    border-bottom: 1px solid #c5c5c5;'>\n                                        <table *ngFor=\"let item of filteredList\">\n                                            <tr>\n                                                <a style='cursor: pointer' (click)=\"select(item)\">{{item}}</a>\n                                            </tr>\n                                        </table>\n                                    </div>\n\n\n\n                                </div>\n\n\n\n                            </div>\n\n\n\n                        </div>\n                        <div class=\"panel-footer \" style=\"height:100% \">\n                            <div *ngIf=\"selektovan\" role=\"alert\" class=\"alert alert-info alert-dismissible fade in\">\n                                <label>{{selectedLang[30][\"Omogucena prava:\"]}} </label>\n                                <label *ngIf=\"binary[0] == 1\">{{selectedLang[31][\"Gledanje plantaza\"]}}, </label>\n                                <label *ngIf=\"binary[1] == 1\">{{selectedLang[32][\"Plantaza CRUD\"]}},</label>\n                                <label *ngIf=\"binary[2] == 1\">{{selectedLang[33][\"Tip CRUD\"]}}, </label>\n                                <label *ngIf=\"binary[3] == 1\">{{selectedLang[34][\"Dodavanje i brisanje radnika\"]}}, </label>\n                                <label *ngIf=\"binary[4] == 1\">{{selectedLang[35][\"Promena rola radnika\"]}}, </label>\n                                <label *ngIf=\"binary[5] == 1\">{{selectedLang[36][\"Prikaz statistike\"]}}</label>\n                            </div>\n                            <button class=\"btn btn-highFive{{cssStyle}}\" (click)=\"dodajRadnika()\">{{selectedLang[37][\"Sacuvaj\"]}}</button>\n                        </div>\n                    </div>\n\n\n\n\n                    <div class=\"panel panelDef{{cssStyle}}\" *ngIf=\"(brojacDozvolaZaDodavanje>0 || isOwner) && listanjeUloga\" style=\"text-align:center\">\n\n                        <div class=\"col-md-12 checkBoxAddType panel-heading highFivePanelNO\">\n                            <div *ngIf=\"uspesnoDodatRole\" class=\"panel-footer \" style=\"height:100% \">\n                                <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                    <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                    {{selectedLang[27][\"Uspesno ste dodali role\"]}}\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-2 PrikaziUlogeDiv\">\n\n                                <input (click)=\"primeniFilter()\" type=\"checkbox\" class=\"required\" id=\"sve\">\n                                <label for=\"sve\">{{selectedLang[38][\"Prikazi samo moje uloge\"]}}</label>\n\n                            </div>\n                            <div class=\"col-md-3 DodajUloguDiv\" style=\"text-align:center;\">\n                                <a class=\"btn btn-highFive{{cssStyle}}\" href=\"#DodajUloguModal\" data-toggle=\"modal\">{{selectedLang[41][\"Dodaj novu ulogu\"]}}</a>\n\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <table class=\"table table-bordered\">\n\n                                <tr>\n                                    <th>{{selectedLang[39][\"Naziv uloge\"]}}</th>\n                                    <th>{{selectedLang[40][\"Brisanje\"]}}</th>\n                                </tr>\n                                <ng-container *ngFor=\"let role of roles\">\n                                    <tr *ngIf='role.visible==1||!filter'>\n                                        <td>{{role.name}}</td>\n                                        <td><span class=\"opcijePlantaza\" flow=\"down\" tooltip=\"Brisanje uloge\"> \n\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"role.visible==1\" data-toggle=\"modal\" data-target=\"#brisanjeUloge\" (click)='postaviIzabranuUlogu(role.id)'\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                            </table>\n                        </div>\n                    </div>\n                    <!--END ODABIR PARCELA -->\n                </div>\n            </div>\n            <div id=\"DodajUloguModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header {{cssStyleH}}\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">{{selectedLang[41][\"Dodaj novu ulogu\"]}}</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"col-md-12 \" style=\"text-align:center;padding-top: 26px;margin-bottom:15px\">\n\n                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">{{selectedLang[39][\"Naziv uloge\"]}}</label>\n                                <div class=\"input-group col-md-7\">\n                                    <input type=\"text\" name=\"ime\" id='novirole' class=\"form-control \">\n                                    <span class=\"input-group-addon\"><i  class=\"fa fa-user\"></i></span>\n                                </div>\n\n\n\n\n                            </div>\n\n                            <div class=\"col-md-12 \" style=\"margin-bottom:5px;\">\n                                <div class=\"col-md-6\" *ngFor='let i = index;let o of ovlascenja'>\n                                    <div class=\"form-group\">\n\n                                        <input type=\"checkbox\" class=\"required\" id=\"dozvola{{i}}\">\n                                        <label for=\"dozvola{{i}}\">{{o}}</label>\n                                    </div>\n                                </div>\n\n                                <label class=\"col-md-5 \" style=\"text-align:center;padding-top: 5px\">{{selectedLang[3][\"Odabir gazde\"]}}</label>\n                                <select class=\"form-control col-md-7\" style=\"text-align:center;padding-top: 5px\" [ngModel]=\"selectedOwnerForRole\" (ngModelChange)=\"onChangeVV($event) \"\n                                    id='vlasniciZaAddRole'>\n                                   <option *ngFor=\"let v of Vlasnici\"  [attr.selected]=\"user.id==v.id? true: null\" value=\"{{v.id}}\" >{{ v.name +\" \"+ v.surname}}</option>\n                                 </select>\n                            </div>\n\n\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-highFive{{cssStyle}} \" (click)=\"dodajUlogu()\" data-dismiss=\"modal\" aria-hidden=\"true\">{{selectedLang[41][\"Dodaj novu ulogu\"]}}</button>\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">{{selectedLang[43][\"Izadji\"]}}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!--BRISANJE MODAL-->\n            <div class=\"modal fade\" id=\"brisanjeUloge\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header {{cssStyleH}}\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4 class=\"modal-title\">{{selectedLang[44][\"Brisanje uloge\"]}}</h4>\n                        </div>\n                        <div *ngIf=\"!ulogaSeKoristi\" class=\"modal-body\">\n                            <p>{{selectedLang[45][\"Da li ste sigurni da zelite da obrisete ulogu?\"]}}</p>\n                        </div>\n                        <div *ngIf=\"!ulogaSeKoristi\" class=\"modal-footer\">\n                            <button type=\"button\" (click)=\"obrisiUlogu()\" class=\"btn btn-success\" data-dismiss=\"modal\">{{selectedLang[18][\"Potvrdi\"]}}</button>\n                        </div>\n                        <div *ngIf=\"ulogaSeKoristi\" class=\"modal-body\">\n                            <p>{{selectedLang[46][\"Nekome od vasih radnika je dodeljena ova uloga. Promenite ulogu ili uklonite\n                                radnika\"]}}\n                            </p>\n                        </div>\n                        <div *ngIf=\"ulogaSeKoristi\" class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">{{selectedLang[43][\"Izadji\"]}}</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <!--KRAJ BRISANJE MODAL-->\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"!(dozvole!==undefined&&dozvole.guest==false&&(brojacDozvolaZaDodavanje>0 || brojacDozvolaZaAzuriranje>0 || isOwner))\">\n            <div class=\"container-fluid\" style=\" width:80%; margin-top:10%;\">\n                <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Trenutno pristupate kao gost.\n                   </p> \n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\n                   Za više informacija obratite se administratoru sistema.\n                   </p> -->\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Nemate pristup ovoj stranici!</p>\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Za vise informacija obratite se administratoru sistema.</p>\n            </div>\n        </div>\n    </div>\n\n\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 768:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n \n</head>\n\n<body>\n\n    <div id=\"wrapper\">\n\n        <!-- Meni -->\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\">\n\n            <app-widgets></app-widgets>\n\n            <!-- end widgeti -->\n            <div class=\"col-md-12 \" style=\"text-align:center\" *ngIf=\"!vidljivostchart\">\n                <div class=\"col-md-4 col-centered \" style=\"text-align:center;\">\n                    <div class=\"panel panel-primary\">\n                                                        <form method=\"get\" action=\"/search\" id=\"search\" style=\"padding:30px;\">\n  <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Pretraga plantaza\" name=\"term\" [(ngModel)]=\"term\" />\n</form>\n                <!--        <div class=\"panel-heading\" style=\"background-color:  #8f2846;max-height: 42px\">Odabir statistike</div>\n                        <div class=\"panel-body \" style=\"max-height: 65px\">\n                            <div class=\"input-group block center\">\n                                <span class=\"input-group-btn\" style=\"width: 0;text-align: initial;\">                                                 \n                                                <span class=\"input-group-addon\">  <input type=\"text\" name=\"term\" [(ngModel)]=\"term\"/> <i class=\"glyphicon glyphicon-search\"></i></span>\n                                </span>\n                            </div>\n                        </div>-->\n                    </div>\n                </div>\n            </div>\n            <div class=\"container-fluid\">\n                <!--LISTA PARCELA -->\n                <div class=\"col-md-12 row\" style=\"text-align:center\" *ngIf=\"!vidljivostchart\">\n                    <div class=\"panel panel-primary\">\n                        <div class=\"panel-heading\" style=\"background-color:  #8f2846\">Lista mojih plantaza</div>\n                        <div class=\"panel-body \">\n                            <div class=\"table-responsive\">\n                                <table class=\"table table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <!--    <th>#</th>-->\n                                            <th style=\"text-align: center\">Ime plantaze</th>\n\n                                            <th style=\"text-align: center\">Opcije</th>\n\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"idTabele\">\n                                        <tr *ngFor=\"let i=index; let vrsta of vrste| filter:term\">\n                                            <td>{{vrsta.name}}</td>\n\n                                            <td> <button  *ngIf=\"(dozvole!==undefined&&vrste[i].dozvole.statistikaPrikaz)||isOwner\" (click)=\"prikaziStatistiku(vrsta.id)\" class=\"btn btn-success\">Prikazi statistiku</button></td>\n                                        </tr>\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!--END LISTA PARCELA -->\n                <!-- CHART 1-->\n                <div class=\"row\" *ngIf=\"vidljivostchart&&imaPodataka\" style=\"text-align: center \">\n\n                    <button (click)=\"vratiNaPrikaz()\" class=\"btn btn-primary btn-lg \" style=\"float: left\"><span class=\"fa fa-arrow-left\"></span> nazad na prikaz </button>\n                    <div class=\"col-md-12 row\">\n                        <div class=\"col-md-2 \"> </div>\n                        <div class=\"col-md-8\">\n                            <h3 class=\"row\">Grafik nutricionistickih vrednosti</h3>\n                            <div style=\"display: block;\">\n                                <canvas baseChart width=\"33%\" height=\"20%\" [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\" [options]=\"lineChartOptions\"\n                                    [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" [chartType]=\"lineChartType\" (chartHover)=\"chartHovered($event)\"\n                                    (chartClick)=\"chartClicked($event)\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- KRAJ 1. CHARTA -->\n                <!-- CHART 2-->\n                <div class=\"row\" *ngIf=\"vidljivostchartBar&&imaPodataka\">\n                    <div class=\"col-md-2\"> </div>\n                    <div class=\"col-md-8\" style=\"text-align: center \">\n                        <h3 class=\"row\">Grafik vlaznosti zemljista</h3>\n                        <div style=\"display: block;\">\n                            <canvas baseChart [datasets]=\"barChartData\" [colors]=\"lineChartColors\" [labels]=\"barChartLabels\" [options]=\"barChartOptions\"\n                                [legend]=\"barChartLegend\" [chartType]=\"barChartType\" (chartHover)=\"chartbarHovered($event)\" (chartClick)=\"chartbarClicked($event)\"></canvas>\n                        </div>\n                    </div>\n\n                </div>\n                <!-- KRAJ 2. CHARTA -->\n\n                <!-- CHART 3-->\n                <div class=\"row\" *ngIf=\" vidljivostRadar&&imaPodataka\">\n                    <div class=\"col-md-12\">\n                        <div class=\"col-md-2\"> </div>\n                        <div class=\"col-md-8\" style=\"text-align: center \">\n                            <h3 class=\"row\">Grafik temperature</h3>\n                            <div style=\"display: block;\">\n                                <canvas baseChart [datasets]=\"radarChartData\" [colors]=\"lineChartColors\" [labels]=\"radarChartLabels\" [chartType]=\"radarChartType\"\n                                    (chartHover)=\"chartradarHovered($event)\" (chartClick)=\"chartradarClicked($event)\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <button (click)=\"vratiNaPrikaz()\" class=\"btn btn-primary btn-lg \" style=\"float: left\"><span class=\"fa fa-arrow-left\"></span> nazad na prikaz </button>\n\n                    </div>\n\n                </div>\n\n\n                <!-- KRAJ 3. CHARTA -->\n\n\n            </div>\n            <div *ngIf=\"!imaPodataka&&podaciTrazeni\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                <button aria-label=\"Close\" (click)=\"skloniPoruku()\" data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                &nbsp;&nbsp;O trazenoj parceli trenutno nema statistickih podataka. Podaci se dobijaju svakoh dana u 23:30\n                i 11:30. Da bi dobili podatke morate povezati vasu plantazu sa meracem.\n            </div>\n\n\n\n            <!-- CONTACT MODAL -->\n            <div id=\"ContactModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Kontaktrijate nas</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form class=\"form-horizontal col-sm-12\">\n                                <div class=\"form-group\"><label>Ime</label><input class=\"form-control required\" placeholder=\"Vase ime\" data-placement=\"top\"\n                                        data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><label>Poruka</label><textarea class=\"form-control\" placeholder=\"Vasa poruka...\" data-placement=\"top\"\n                                        data-trigger=\"manual\"></textarea></div>\n                                <div class=\"form-group\"><label>E-Mail</label><input class=\"form-control email\" placeholder=\"email@you.com (kako bi smo mogli da vam odgovrimo)\"\n                                        data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><button type=\"submit\" class=\"btn btn-send pull-right\">Poslaji!</button>\n                                    <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END CONTACT MODAL -->\n\n            <!-- ABOUT MODAL -->\n            <div id=\"AboutModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">O nama</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Uz pomoc mladog i entuzijazticnog tima sastavljenog od dva Djoleta, jednog Jovana,jedne Jovane\n                                i jednog Bojana kreirana je aplikacija koja ce zadovoljiti sve vase potrebe vezane za poljoprivredu\n                            </p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END ABOUT MODAL -->\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n             <div class=\"container-fluid\" style=\"width:80%; margin-top:10%;\" >\n             <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Trenutno pristupate kao gost.\n                   </p> \n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\n                   Za više informacija obratite se administratoru sistema.\n                   </p> -->\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Nemate pristup ovoj stranici!</p>\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Za vise informacija obratite se administratoru sistema.</p>\n            </div>\n        </div>\n    </div>\n\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 769:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n    <!-- full screen -->\n    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n        defer>\n\n        </script>\n    <script>\n        function initMap() {\n            var mapProp = {\n                center: new google.maps.LatLng(51.508742, -0.120850),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        }\n        google.maps.event.addDomListener(window, 'load', initialize);\n    </script>\n</head>\n\n<body>\n<div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined&&lang=='srb'\">\n        <div id=\"loading-text\">UČITAVANJE</div>\n        <div id=\"loading-content\"></div>\n    </div>\n\t<div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined&&lang=='eng'\">\n        <div id=\"loading-text\">LOADING</div>\n        <div id=\"loading-content\"></div>\n    </div>\n\n\n\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined&&lang=='srb'\">\n\n        <!-- Meni -->\n        <app-meni></app-meni>\n        <!-- Meni -->\n        <div id=\"page-wrapper>\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\">\n            \n            <!-- end Meni -->\n\n            <!-- glavni deo -->\n            <div id=\"page-wrapper\" style=\"min-height: 100vh\">\n                <app-widgets></app-widgets>\n                <div class=\"container-fluid\">\n                    <div class=\"col-md-12 \" style=\"text-align:center\">\n\n                        <div class=\"panel panel-primary\">\n                            <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 100%\">\n                                <h1>Ažuriranje mojih plantaža</h1>\n                            </div>\n\n                        </div>\n\n                        <button  (click)=\"nazad()\" class=\"btn pull-right backToPrikaz{{cssStyle}} col-md-3\" style=\"width:100px;margin-right:40px;margin-bottom:8px;\">Nazad</button>\n                        <form [formGroup]=\"plantForm\" id=\"loginform\" (ngSubmit)=\"onSubmit(plantForm.value)\" class=\"form-horizontal\" role=\"form\" novalidate\n                            method=\"post\">\n                            <div *ngIf=\"uspesnoPromenjeniPodaci\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>Podaci\n                                o Vasoj plantaži su ažurirani.\n                            </div>\n                             <div *ngIf=\"nemaPoligona\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\"  data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button> Morate da nacrtate poligon sa lokacijom vase plantaže.\n\n                            </div>\n                             <div *ngIf=\"imePrazno\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                <button aria-label=\"Close\"  data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button> Morate da unesete ime vase plantaže.\n\n                            </div>\n\n\n\n                            <div class=\"col-md-12 \" style=\"text-align:center;\">\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\n                                    <label class=\"col-md-5 \" style=\"padding-top: 5px\">Ime plantaže</label>\n                                    <div class=\"input-group col-md-7\">\n                                        <input class=\"form-control\" formControlName=\"name\" value=\"{{imePlantaze}}\">\n                                        <span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\n                                    </div>\n\n                                </div>\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\n                                    <label class=\"col-md-5 \" style=\"padding-top: 5px\">Izaberite vrstu</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" (change)=\"onSelect($event.target.value)\" formControlName=\"vrsta\">\n                                                         <option *ngFor=\"let tip of tipovi\" [attr.selected]=\"typeId==tip.id? true: null\" [attr.value]=\"tip.id\">{{tip.name}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\n                                    <label class=\"col-md-5 \">Izaberite podvrstu</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" formControlName=\"podvrsta\">\n                                                        <option *ngFor=\"let podtip of podtipovi\" [attr.selected]=\"subtypeId==podtip.id? true: null\" [attr.value]=\"podtip.id\">{{podtip.name}}</option>\n                                                    </select>\n                                    </div>\n\n\n                                </div>\n                                <div class=\"col-md-3 \">\n                                    <label class=\"col-md-5 \">Izaberite proizvođača semena</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" formControlName=\"proizvodjacSemena\">\n                                                        <option *ngFor=\"let pr of proizvodjaci\" [attr.selected]=\"producerId==pr.id? true: null\" [attr.value]=\"pr.id\">{{pr.name}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>\n                             <!--\n                                <div class=\"col-md-3 \" *ngIf=\"isOwner||dozvoleKodGazde.length!=0\">\n                                    <label class=\"col-md-5 \">Izaberite vlasnika plantaze</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>\n                                <div class=\"col-md-3 \" *ngIf=\"imanja!==undefined\">\n                                    <label class=\"col-md-5 \">Izaberite imanje</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" id='imanje'>\n                                                        <option *ngFor=\"let im of imanja\" value=\"{{im.idparc}}\">{{im.name}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>-->\n\n\n                            </div>\n\n                            <div class=\"form-group col-md-12\" style=\"text-align: center;align-items: center;margin-top:2%\">\n                                <!-- Button -->\n                                <button class=\"btn btn-highFive{{cssStyle}}\" type=\"submit\"> Promeni podatke </button>  \n                            </div>\n                        </form>\n                         <button class=\"btn btn-highFive{{cssStyle}}\" (click)=\"obrisiPoligone()\"> Obriši poligone </button>\n                        <div id=\"mapID\" style=\"height: 100%; width: 100%\">\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!--end tab za proemnu sifre  -->\n\n\n            <!-- CONTACT MODAL -->\n            <div id=\"ContactModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Kontaktrijate nas</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form class=\"form-horizontal col-sm-12\">\n                                <div class=\"form-group\"><label>Ime</label><input class=\"form-control required\" placeholder=\"Vase ime\" data-placement=\"top\"\n                                        data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><label>Poruka</label><textarea class=\"form-control\" placeholder=\"Vasa poruka...\" data-placement=\"top\"\n                                        data-trigger=\"manual\"></textarea></div>\n                                <div class=\"form-group\"><label>E-Mail</label><input class=\"form-control email\" placeholder=\"email@you.com (kako bi smo mogli da vam odgovrimo)\"\n                                        data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><button type=\"submit\" class=\"btn btn-send pull-right\">Poslaji!</button>\n                                    <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END CONTACT MODAL -->\n\n            <!-- ABOUT MODAL -->\n            <div id=\"AboutModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">O nama</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Uz pomoc mladog i entuzijazticnog tima sastavljenog od dva Djoleta, jednog Jovana,jedne Jovane\n                                i jednog Bojana kreirana je aplikacija koja ce zadovoljiti sve vase potrebe vezane za poljoprivredu\n                            </p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END ABOUT MODAL -->\n            <!-- SETINGS MODAL -->\n            <div id=\"SettingsModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Podesavanja</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"panel panel-primary\">\n\n                                <div class=\"panel-body\">\n                                    <form action=\"#\" role=\"form\" class=\"form-horizontal\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Obavestenja putem email-a</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"1\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Uzmi moju lokaciju</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"0\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n\n                                        </div>\n\n\n\n\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END SETINGS MODAL -->\n\n            <!-- end glavni deo -->\n\n        </div>\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\" style=\" width:80%; margin-top:10%;\" >\n             <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Trenutno pristupate kao gost.\n                   </p> \n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\n                   Za više informacija obratite se administratoru sistema.\n                   </p> -->\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Nemate pristup ovoj stranici!</p>\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Za vise informacija obratite se administratoru sistema.</p>\n            </div>\n        </div>\n\n    </div>\n\n\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined&&lang=='eng'\">\n\n        <!-- Meni -->\n        <app-meni></app-meni>\n        <!-- Meni -->\n        <div id=\"page-wrapper>\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\">\n            \n            <!-- end Meni -->\n\n            <!-- glavni deo -->\n            <div id=\"page-wrapper\" style=\"min-height: 100vh\">\n                <app-widgets></app-widgets>\n                <div class=\"container-fluid\">\n                    <div class=\"col-md-12 \" style=\"text-align:center\">\n\n                        <div class=\"panel panel-primary\">\n                            <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 100%\">\n                                <h1>Update plantation</h1>\n                            </div>\n\n                        </div>\n\n                        <button  (click)=\"nazad()\" class=\"btn pull-right backToPrikaz{{cssStyle}} col-md-3\" style=\"width:100px;margin-right:40px;margin-bottom:8px;\">Return</button>\n                        <form [formGroup]=\"plantForm\" id=\"loginform\" (ngSubmit)=\"onSubmit(plantForm.value)\" class=\"form-horizontal\" role=\"form\" novalidate\n                            method=\"post\">\n                            <div *ngIf=\"uspesnoPromenjeniPodaci\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>Your plantation is updated.\n                            </div>\n\n\n\n                            <div class=\"col-md-12 \" style=\"text-align:center;\">\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\n                                    <label class=\"col-md-5 \" style=\"padding-top: 5px\">Plantation name</label>\n                                    <div class=\"input-group col-md-7\">\n                                        <input class=\"form-control\" formControlName=\"name\" value=\"{{imePlantaze}}\">\n                                        <span class=\"input-group-addon\"><i class=\"fa fa-tag\"></i></span>\n                                    </div>\n\n                                </div>\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\n                                    <label class=\"col-md-5 \" style=\"padding-top: 5px\">Type</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" (change)=\"onSelect($event.target.value)\" formControlName=\"vrsta\">\n                                                         <option *ngFor=\"let tip of tipovi\" [attr.selected]=\"typeId==tip.id? true: null\" [attr.value]=\"tip.id\">{{tip.name}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\n                                    <label class=\"col-md-5 \">Subtype</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" formControlName=\"podvrsta\">\n                                                        <option *ngFor=\"let podtip of podtipovi\" [attr.selected]=\"subtypeId==podtip.id? true: null\" [attr.value]=\"podtip.id\">{{podtip.name}}</option>\n                                                    </select>\n                                    </div>\n\n\n                                </div>\n                                <div class=\"col-md-3 \">\n                                    <label class=\"col-md-5 \">Producer</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" formControlName=\"proizvodjacSemena\">\n                                                        <option *ngFor=\"let pr of proizvodjaci\" [attr.selected]=\"producerId==pr.id? true: null\" [attr.value]=\"pr.id\">{{pr.name}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>\n                             <!--\n                                <div class=\"col-md-3 \" *ngIf=\"isOwner||dozvoleKodGazde.length!=0\">\n                                    <label class=\"col-md-5 \">Izaberite vlasnika plantaze</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" formControlName=\"vlasnikPlantaze\">\n                                                        <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\">{{ow.name}} {{ow.surname}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>\n                                <div class=\"col-md-3 \" *ngIf=\"imanja!==undefined\">\n                                    <label class=\"col-md-5 \">Izaberite imanje</label>\n                                    <div class=\"col-md-7 \">\n                                        <select class=\"form-control\" id='imanje'>\n                                                        <option *ngFor=\"let im of imanja\" value=\"{{im.idparc}}\">{{im.name}}</option>\n                                                    </select>\n                                    </div>\n\n                                </div>-->\n\n\n                            </div>\n\n                            <div class=\"form-group col-md-12\" style=\"text-align: center;align-items: center;margin-top:2%\">\n                                <!-- Button -->\n                                <button class=\"btn btn-highFive{{cssStyle}}\" type=\"submit\"> Update </button>  \n                            </div>\n                        </form>\n                         <button class=\"btn btn-highFive{{cssStyle}}\" (click)=\"obrisiPoligone()\"> Remove polygons </button>\n                        <div id=\"mapID\" style=\"height: 100%; width: 100%\">\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!--end tab za proemnu sifre  -->\n\n\n            <!-- CONTACT MODAL -->\n            <div id=\"ContactModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Kontaktrijate nas</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form class=\"form-horizontal col-sm-12\">\n                                <div class=\"form-group\"><label>Ime</label><input class=\"form-control required\" placeholder=\"Vase ime\" data-placement=\"top\"\n                                        data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><label>Poruka</label><textarea class=\"form-control\" placeholder=\"Vasa poruka...\" data-placement=\"top\"\n                                        data-trigger=\"manual\"></textarea></div>\n                                <div class=\"form-group\"><label>E-Mail</label><input class=\"form-control email\" placeholder=\"email@you.com (kako bi smo mogli da vam odgovrimo)\"\n                                        data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><button type=\"submit\" class=\"btn btn-send pull-right\">Poslaji!</button>\n                                    <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END CONTACT MODAL -->\n\n            <!-- ABOUT MODAL -->\n            <div id=\"AboutModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">O nama</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Uz pomoc mladog i entuzijazticnog tima sastavljenog od dva Djoleta, jednog Jovana,jedne Jovane\n                                i jednog Bojana kreirana je aplikacija koja ce zadovoljiti sve vase potrebe vezane za poljoprivredu\n                            </p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END ABOUT MODAL -->\n            <!-- SETINGS MODAL -->\n            <div id=\"SettingsModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Podesavanja</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"panel panel-primary\">\n\n                                <div class=\"panel-body\">\n                                    <form action=\"#\" role=\"form\" class=\"form-horizontal\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Obavestenja putem email-a</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"1\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Uzmi moju lokaciju</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"0\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n\n                                        </div>\n\n\n\n\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END SETINGS MODAL -->\n\n            <!-- end glavni deo -->\n\n        </div>\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\" style=\" width:80%; margin-top:10%;\" >\n             <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Trenutno pristupate kao gost.\n                   </p> \n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\n                   Za više informacija obratite se administratoru sistema.\n                   </p> -->\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">You dont have access to this page!</p>\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">For more informatios contact websites admin.</p>\n            </div>\n        </div>\n\n    </div>\n\n    <script src='js/jquery-3.1.1.min.js'></script>\n    <script src='js/bootstrap.min.js'></script>\n    <script src='js/bootstrap-select.min.js'></script>\n\n    <!-- full screen -->\n\n</body>\n\n</html>"

/***/ }),

/***/ 770:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n \n</head>\n\n<body>\n\n\n\n\n    <div id=\"wrapper\" *ngIf=\"lang=='srb'\">\n\n        <app-meni #meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" style=\"min-height: 100vh\">\n\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 \" style=\"text-align:center\">\n\n                    <div class=\"panel panel-primary\">\n                        <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 100%\">\n                            <h1>Podešavanja mog profila</h1>\n                        </div>\n\n                    </div>\n\t\t\t\t\t   <div class=\"tab\" role=\"tabpanel\" style=\"margin-top:5%\">\n                            <!-- Nav tabs -->\n                            <ul class=\"nav nav-tabs\" role=\"tablist\">\n                                <li role=\"presentation\" class=\"{{cssStyleT}} {{promeniSifruVidljivo ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab('sifra')\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Promeni Šifru</a></li>\n                                <li role=\"presentation\" class=\"{{cssStyleT}} {{promeniOstalePodatkeVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab('podaci')\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Promena mojih podataka</a></li>\n <li role=\"presentation\" class=\"{{cssStyleT}} {{promeniSlikuVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab('slika')\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Promena slike</a></li>\n\n                            </ul>\n                        </div>\n                   \n                        <!-- meni za podesavanja  -->\n                \n                        <!--end meni za podesavanja  -->\n                      \n                            <!-- tab za proemnu sifre  -->\n                        \n\n                                <!-- start edit pass -->\n                           \n                                <div class=\"panel panel-primary panelDef{{cssStyle}}  \">\n\n                                \n                                        <div style=\"padding-bottom:30px; \" class=\"panel-body \">\n<div class=\"col-md-3\"></div>\n                                            <form [hidden]=\"!promeniSifruVidljivo\" id=\"loginform\" class=\"form-horizontal col-md-6\" role=\"form\" novalidate method=\"post\">\n                                                <div *ngIf=\"uspesnoPromenjenaSifra\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Uspesno ste promenili sifru.\n                                                </div>\n                                                <div *ngIf=\"imaNeko\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Takva sifra vec postoji.\n                                                </div>\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-lock\"></i></span>\n                                                    <input placeholder=\"Stara šifra\" required pattern=\"[A-Z]{1}[a-z]{1,10}\" type=\"text\" class=\"form-control\" name=\"sername\" *ngIf=\"vidljivost\"\n                                                        value=\"\" [(ngModel)]=\"staraSifra\" ngModel>\n                                                </div>\n                                                <div *ngIf=\"pogresnaSifra\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Uneli ste pogresnu sifru.\n                                                </div>\n\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-lock\"></i></span>\n                                                    <input type=\"password\" [(ngModel)]=\"pass1\" #pass=\"ngModel\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" class=\"form-control\"\n                                                        name=\"pass11\" value=\"\" placeholder=\"Nova šifra\" ngModel>\n                                                </div>\n                                                <div *ngIf=\"pass.errors && (pass.dirty || pass.touched)\" class=\"alert alert-danger\">\n                                                    <div [hidden]=\"!pass.errors.required\">\n                                                        Unesite šifru.\n                                                    </div>\n                                                    <div [hidden]=\"!pass.errors.pattern\">\n                                                        Šifra mora da sadrži 8 ili vise karaktera od kojih je bar jedan broj i veliko i malo slovo.\n                                                    </div>\n                                                </div>\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-lock\"></i></span>\n                                                    <input type=\"password\" [(ngModel)]=\"pass2\" #passs=\"ngModel\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" class=\"form-control\"\n                                                        name=\"pass12\" value=\"\" placeholder=\"Ponovi novu šifru\" ngModel>\n                                                </div>\n                                                <div *ngIf=\"neuspesno\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Prva i druga sifra moraju biti iste.\n                                                </div>\n                                                <div *ngIf=\"passs.errors && (passs.dirty || passs.touched)\" class=\"alert alert-danger\">\n                                                    <div [hidden]=\"!passs.errors.required\">\n                                                        Unesite šifru.\n                                                    </div>\n                                                    <div [hidden]=\"!passs.errors.pattern\">\n                                                        Šifra mora da sadrži 8 ili vise karaktera od kojih je bar jedan broj i veliko i malo slovo.\n                                                    </div>\n                                                </div>\n                                                <div style=\"margin-top:10px\" class=\"form-group\">\n                                                    <!-- Button -->\n                                                    <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                                        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"promeniSifru()\">Promeni šifru</button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                            <form [hidden]=\"!promeniOstalePodatkeVidljivo\" id=\"loginform\" class=\"form-horizontal col-md-6\" role=\"form\" novalidate method=\"post\">\n                                                <div *ngIf=\"uspesno\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Vasi podaci su azurirani.\n                                                </div>\n                                                <div class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-user\"></i></span>\n                                                    <input id=\"reg-ime\" type=\"text\" required pattern=\"[A-Z]{1}[a-z]{1,8}\" class=\"form-control\" name=\"user\" *ngIf=\"vidljivost\"\n                                                        value={{user.name}} [(ngModel)]=\"ime\">\n                                                </div>\n                                                <!--[(ngModel)]=\"ime\" ngModel-->\n\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-user\"></i></span>\n                                                    <input id=\"reg-prezime\" required pattern=\"[A-Z]{1}[a-z]{1,10}\" type=\"text\" class=\"form-control\" name=\"prezime\" *ngIf=\"vidljivost\"\n                                                        value=\"{{user.surname}}\" placeholder=\"\" [(ngModel)]=\"prezime\">\n                                                    <!--[(ngModel)]=\"prezime\" ngModel-->\n                                                </div>\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-envelope\"></i></span>\n                                                    <input id=\"reg-email\" type=\"email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" class=\"form-control\" name=\"email\"\n                                                        *ngIf=\"vidljivost\" value=\"{{user.email}}\" disabled>\n                                                </div>\n\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-user-secret\"></i></span>\n                                                    <input required id=\"reg-username\" type=\"text\" class=\"form-control\" name=\"reg-username\" *ngIf=\"vidljivost\" value=\"{{user.username}}\"\n                                                        disabled>\n                                                </div>\n\n\n                                                <div class=\"form-group\" style=\"margin-top: 25px\">\n                                                    <label class=\"col-md-3 control-label\">Država</label>\n                                                    <div class=\"col-md-9\" *ngIf=\"user!==undefined\">\n                                                        <select class=\"form-control\" #t (change)=\"callType(t.value)\" data-style=\"btn-success\">\n                                                     \n                                                     <option *ngFor = \"let country of country_array\" [ngValue]='country' selected = \"{{country==user.country ? 'selected' : ''}}\"> {{country}} </option>\n                                                    \n                                        \n                                                    </select>\n\n\n\n                                                    </div>\n                                                </div>\n\n                                                <div style=\"margin-top:10px\" class=\"form-group\">\n                                                    <!-- Button -->\n                                                    <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                                        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"promeniPodatke()\"> Promeni podatke </button>\n                                                    </div>\n                                                </div>\n\n\n                                            </form>\n                                            <form [hidden]='!promeniSlikuVidljivo' class=\"col-md-6\">\n                                                <div class=\"align-elements\">\n                                                    <div *ngIf='user!=undefined' class=\"form-group\"><label>Trenutna slika: </label>\n                                                        <div class=\"row\">\n\n                                                            <div class=\"col-md-10\">\n                                                                <img style=\" width: inherit; max-width: inherit;max-height: inherit;height: inherit; \" alt='slika nije pronadjena' src='{{user.profilePic}}'><img></div>\n                                                        </div>\n                                                    </div>\n                                                    <app-image-upload (uploaded)=\"osvezi($event)\">\n                                                    </app-image-upload>\n                                                    \n                                                </div>\n                                            </form>\n                                        </div>\n                                   \n                                </div>\n\n                           \n                            <!--end tab za proemnu sifre  -->\n\n                            <!--end tab za proemnu podataka  -->\n\n                       \n                  \n                </div>\n            </div>\n\n        </div>\n        <!-- end glavni deo -->\n    </div>\n\n\n    <div id=\"wrapper\" *ngIf=\"lang=='eng'\">\n\n        <app-meni #meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" style=\"min-height: 100vh\">\n\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 \" style=\"text-align:center\">\n\n                    <div class=\"panel panel-primary\">\n                        <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 100%\">\n                            <h1>Update profile</h1>\n                        </div>\n\n                    </div>\n                    <div data-example-id=\"togglable-tabs\" id=\"opcije\">\n                        <!-- meni za podesavanja  -->\n                        <ul id=\"myTab\" class=\"nav nav-tabs nav-justified\" role=\"tablist\">\n\n                            <li class=\"{{promeniSifruVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab('sifra')\" id=\"sifra-tab\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"true\">Change password</a>\n                            </li>\n                            <li class=\"{{promeniOstalePodatkeVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab('podaci')\" role=\"tab\" id=\"podaci-tab\" data-toggle=\"tab\" aria-expanded=\"false\">Update my data</a>\n                            </li>\n                            <li class=\"{{promeniSlikuVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab('slika')\" role=\"tab\" id=\"slika-tab\" data-toggle=\"tab\" aria-expanded=\"false\">Change picture</a>\n                            </li>\n\n\n                        </ul>\n                        <!--end meni za podesavanja  -->\n                        <div id=\"myTabContent\" class=\"tab-content\">\n                            <!-- tab za proemnu sifre  -->\n                            <div role=\"tabpanel\" class=\"tab-pane fade active in\" aria-labelledby=\"sifra-tab\">\n\n                                <!-- start edit pass -->\n                                <div class=\"col-md-3 \" style=\"margin-top: 15px\"></div>\n                                <div class=\"panel panel-primary col-md-6 \" style=\"margin-top: 15px\">\n\n                                    <div class=\"panel-body \">\n                                        <div style=\"padding-bottom:30px; \" class=\"panel-body\">\n\n                                            <form [hidden]=\"!promeniSifruVidljivo\" id=\"loginform\" class=\"form-horizontal\" role=\"form\" novalidate method=\"post\">\n                                                <div *ngIf=\"uspesnoPromenjenaSifra\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Password updated successfuly.\n                                                </div>\n                                                <div *ngIf=\"imaNeko\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Password already in use.\n                                                </div>\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-lock\"></i></span>\n                                                    <input placeholder=\"Old password\" required pattern=\"[A-Z]{1}[a-z]{1,10}\" type=\"text\" class=\"form-control\" name=\"sername\" *ngIf=\"vidljivost\"\n                                                        value=\"\" [(ngModel)]=\"staraSifra\" ngModel>\n                                                </div>\n                                                <div *ngIf=\"pogresnaSifra\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Wrong password.\n                                                </div>\n\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-lock\"></i></span>\n                                                    <input type=\"password\" [(ngModel)]=\"pass1\" #pass=\"ngModel\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" class=\"form-control\"\n                                                        name=\"pass11\" value=\"\" placeholder=\"New password\" ngModel>\n                                                </div>\n                                                <div *ngIf=\"pass.errors && (pass.dirty || pass.touched)\" class=\"alert alert-danger\">\n                                                    <div [hidden]=\"!pass.errors.required\">\n                                                        Enter password.\n                                                    </div>\n                                                    <div [hidden]=\"!pass.errors.pattern\">\n                                                        Password must contain 8 or more characters(at least one number and one uppercase).\n                                                    </div>\n                                                </div>\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-lock\"></i></span>\n                                                    <input type=\"password\" [(ngModel)]=\"pass2\" #passs=\"ngModel\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" class=\"form-control\"\n                                                        name=\"pass12\" value=\"\" placeholder=\"Repeat new password\" ngModel>\n                                                </div>\n                                                <div *ngIf=\"neuspesno\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Passwords must match.\n                                                </div>\n                                                <div *ngIf=\"passs.errors && (passs.dirty || passs.touched)\" class=\"alert alert-danger\">\n                                                    <div [hidden]=\"!passs.errors.required\">\n                                                        Enter password.\n                                                    </div>\n                                                    <div [hidden]=\"!passs.errors.pattern\">\n                                                        Password must contain 8 or more characters(at least one number and one uppercase).\n                                                    </div>\n                                                </div>\n                                                <div style=\"margin-top:10px\" class=\"form-group\">\n                                                    <!-- Button -->\n                                                    <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                                        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"promeniSifru()\">Change password</button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                            <form [hidden]=\"!promeniOstalePodatkeVidljivo\" id=\"loginform\" class=\"form-horizontal\" role=\"form\" novalidate method=\"post\">\n                                                <div *ngIf=\"uspesno\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                                    <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                    Your data is updated.\n                                                </div>\n                                                <div class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-user\"></i></span>\n                                                    <input id=\"reg-ime\" type=\"text\" required pattern=\"[A-Z]{1}[a-z]{1,8}\" class=\"form-control\" name=\"user\" *ngIf=\"vidljivost\"\n                                                        value={{user.name}} [(ngModel)]=\"ime\">\n                                                </div>\n                                                <!--[(ngModel)]=\"ime\" ngModel-->\n\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-user\"></i></span>\n                                                    <input id=\"reg-prezime\" required pattern=\"[A-Z]{1}[a-z]{1,10}\" type=\"text\" class=\"form-control\" name=\"prezime\" *ngIf=\"vidljivost\"\n                                                        value=\"{{user.surname}}\" placeholder=\"\" [(ngModel)]=\"prezime\">\n                                                    <!--[(ngModel)]=\"prezime\" ngModel-->\n                                                </div>\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-envelope\"></i></span>\n                                                    <input id=\"reg-email\" type=\"email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" class=\"form-control\" name=\"email\"\n                                                        *ngIf=\"vidljivost\" value=\"{{user.email}}\" disabled>\n                                                </div>\n\n\n                                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                    <span class=\"input-group-addon\"><i class=\"fa fa-user-secret\"></i></span>\n                                                    <input required id=\"reg-username\" type=\"text\" class=\"form-control\" name=\"reg-username\" *ngIf=\"vidljivost\" value=\"{{user.username}}\"\n                                                        disabled>\n                                                </div>\n\n\n                                                <div class=\"form-group\" style=\"margin-top: 25px\">\n                                                    <label class=\"col-md-3 control-label\">Country</label>\n                                                    <div class=\"col-md-9\" *ngIf=\"user!==undefined\">\n                                                        <select class=\"form-control\" #t (change)=\"callType(t.value)\" data-style=\"btn-success\">\n                                                     \n                                                     <option *ngFor = \"let country of country_array\" [ngValue]='country' selected = \"{{country==user.country ? 'selected' : ''}}\"> {{country}} </option>\n                                                    \n                                        \n                                                    </select>\n\n\n\n                                                    </div>\n                                                </div>\n\n                                                <div style=\"margin-top:10px\" class=\"form-group\">\n                                                    <!-- Button -->\n                                                    <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                                        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"promeniPodatke()\"> Update </button>\n                                                    </div>\n                                                </div>\n\n\n                                            </form>\n                                            <form [hidden]='!promeniSlikuVidljivo'>\n                                                <div class=\"align-elements\">\n                                                    <div *ngIf='user!=undefined' class=\"form-group\"><label>Current profile picture: </label>\n                                                        <div class=\"row\">\n\n                                                            <div class=\"col-md-10\">\n                                                                <img style=\" width: inherit; max-width: inherit;max-height: inherit;height: inherit; \" alt='picture not found' src='{{user.profilePic}}'><img></div>\n                                                        </div>\n                                                    </div>\n                                                    <app-image-upload (uploaded)=\"osvezi($event)\">\n                                                    </app-image-upload>\n                                                    \n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                            <!--end tab za proemnu sifre  -->\n\n                            <!--end tab za proemnu podataka  -->\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- CONTACT MODAL -->\n            <div id=\"ContactModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Kontaktrijate nas</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form class=\"form-horizontal col-sm-12\">\n                                <div class=\"form-group\"><label>Ime</label><input class=\"form-control required\" placeholder=\"Vase ime\" data-placement=\"top\"\n                                        data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><label>Poruka</label><textarea class=\"form-control\" placeholder=\"Vasa poruka...\" data-placement=\"top\"\n                                        data-trigger=\"manual\"></textarea></div>\n                                <div class=\"form-group\"><label>E-Mail</label><input class=\"form-control email\" placeholder=\"email@you.com (kako bi smo mogli da vam odgovrimo)\"\n                                        data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><button type=\"submit\" class=\"btn btn-send pull-right\">Poslaji!</button>\n                                    <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END CONTACT MODAL -->\n\n            <!-- ABOUT MODAL -->\n            <div id=\"AboutModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">O nama</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Uz pomoc mladog i entuzijazticnog tima sastavljenog od dva Djoleta, jednog Jovana,jedne Jovane\n                                i jednog Bojana kreirana je aplikacija koja ce zadovoljiti sve vase potrebe vezane za poljoprivredu\n                            </p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END ABOUT MODAL -->\n            <!-- SETINGS MODAL -->\n            <div id=\"SettingsModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Podesavanja</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"panel panel-primary\">\n\n                                <div class=\"panel-body\">\n                                    <form action=\"#\" role=\"form\" class=\"form-horizontal\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Obavestenja putem email-a</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"1\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Uzmi moju lokaciju</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"0\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n\n                                        </div>\n\n\n\n\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END SETINGS MODAL -->\n        </div>\n        <!-- end glavni deo -->\n    </div>\n\n\n\n\n    <script src='js/jquery-3.1.1.min.js'></script>\n    <script src='js/bootstrap.min.js'></script>\n    <script src='js/bootstrap-select.min.js'></script>\n\n    <!-- full screen -->\n    <script>\n        function toggleFullscreen(elem) {\n            elem = elem || document.documentElement;\n            if (!document.fullscreenElement && !document.mozFullScreenElement &&\n                !document.webkitFullscreenElement && !document.msFullscreenElement) {\n                if (elem.requestFullscreen) {\n                    elem.requestFullscreen();\n                } else if (elem.msRequestFullscreen) {\n                    elem.msRequestFullscreen();\n                } else if (elem.mozRequestFullScreen) {\n                    elem.mozRequestFullScreen();\n                } else if (elem.webkitRequestFullscreen) {\n                    elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                }\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                } else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                } else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen();\n                }\n            }\n        }\n\n        document.getElementById('btnFullscreen').addEventListener('click', function () {\n            toggleFullscreen();\n        });\n\n        document.getElementById('exampleImage').addEventListener('click', function () {\n            toggleFullscreen(this);\n        });\n    </script>\n</body>\n\n</html>"

/***/ }),

/***/ 771:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n    <link rel=\"stylesheet\" href=\"css/infoTabStyle.css\">\n    <link rel=\"stylesheet\" href=\"css/weather-icons.css\">\n\n\n\n    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n        defer>\n\n        </script>\n\n\n\n    <script>\n        function initMap() {\n            var mapProp = {\n                center: new google.maps.LatLng(51.508742, -0.120850),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        }\n        google.maps.event.addDomListener(window, 'load', initialize);\n    </script>\n</head>\n\n<body>\n\n    <div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined\">\n        <div id=\"loading-text\">UČITAVANJE</div>\n        <div id=\"loading-content\"></div>\n    </div>\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined\">\n\n\n        <app-meni></app-meni>\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\">\n            <app-widgets></app-widgets>\n            <!-- widgeti         <div class=\"container-fluid\">\n                \n                <div class=\"col-md-12 \" style=\"text-align:center;margin-top: 10px\">\n                    <div class=\"col-md-3\">\n                        <div class=\"widget widget-success widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-globe\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.plantaze}}</div>\n                                <div class=\"widget-title\">registrovanih plantaza</div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"col-md-3\">\n                        <div class=\"widget widget-primary widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-users\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.radnici}}</div>\n                                <div class=\"widget-title\">registrovana radnka</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                        <div class=\"widget widget-info widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-book\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.eksperti}}</div>\n                                <div class=\"widget-title\">registrovanih experata</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3 \">\n                        <div class=\"widget widget-warning widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-warning\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.obavestenja}}</div>\n                                <div class=\"widget-title\">obavestenja</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n             end widgeti -->\n\n            <div class=\"container-fluid\">\n                <!-- ODABIR PARCELA -->\n                <form id=\"filter\">\n                    <!--    <div class=\"col-md-12 \" style=\"text-align:center\" *ngIf=\"!sideBarVidljiv\">\n                        <div class=\"col-md-4 col-centered \" style=\"text-align:center;\">\n                            <div class=\"panel panel-primary\">\n                                <div class=\"panel-heading\" style=\"background-color:  #8f2846;max-height: 42px\">Odabir mojih parcela</div>\n                                <div class=\"panel-body \" style=\"max-height: 65px\">\n                                    <div class=\"input-group block center\">\n                                        <span class=\"input-group-btn\" style=\"width: 0;text-align: initial;\">\n                                                  \n                                                <span class=\"input-group-addon\">  <input type=\"text\" name=\"term\" [(ngModel)]=\"term\"/> <i class=\"glyphicon glyphicon-search\"></i></span>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>-->\n                    <!--END ODABIR PARCELA -->\n                    <!--LISTA PARCELA -->\n                    <div class=\"col-md-12 row\" style=\"text-align:center\">\n                        <div class=\"tab\" role=\"tabpanel\">\n                            <!-- Nav tabs -->\n                            <ul class=\"nav nav-tabs\" role=\"tablist\">\n                                <li role=\"presentation\" class=\"{{cssStyleT}} {{plantazaVidljiva ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[0][\"text\"]}}</a></li>\n                                <li role=\"presentation\" class=\"{{cssStyleT}} {{parcelaVidljiva ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab1()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[1][\"text\"]}}</a></li>\n\n                            </ul>\n                        </div>\n\n                        <div class=\"panel panel-primary panelDef{{cssStyle}}\">\n                            <div id=\"togglable-tabs\" id=\"opcije\">\n\n\n                                <!--  <div class=\"col-md-12 \" style=\"text-align:center\" *ngIf=\"!sideBarVidljiv&&plantazaVidljiva\">\n                        <div class=\"col-md-4 col-centered \" style=\"text-align:center;\">\n  \n                            <div class=\"panel panel-primary\">\n  \n                            </div>\n                        </div>\n                    </div>-->\n                                <div *ngIf=\"!sideBarVidljiv&&plantazaVidljiva&&!vidljivostchart&&!prognozaVidljiva\" class=\"panel-heading highFivePanel{{cssStyle}}\">{{selectedLang[2][\"text\"]}}</div>\n                                <form method=\"get\" *ngIf=\"!sideBarVidljiv&&plantazaVidljiva&&!vidljivostchart&&!prognozaVidljiva&&(lang[0]['lang']==undefined||lang[0]['lang']=='srb')\"\n                                    action=\"/search\" id=\"search\" style=\"padding:30px; background-color:white;\">\n                                    <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Pretraga plantaža\" name=\"term\" [(ngModel)]=\"term\" />\n                                </form>\n                                <form method=\"get\" *ngIf=\"!sideBarVidljiv&&plantazaVidljiva&&!vidljivostchart&&!prognozaVidljiva&&lang[0]['lang']=='eng'\"\n                                    action=\"/search\" id=\"search\" style=\"padding:30px; background-color:white;\">\n                                    <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Search plantations\" name=\"term\" [(ngModel)]=\"term\" />\n                                </form>\n                                <div *ngIf=\"!sideBarVidljiv&&plantazaVidljiva&&!vidljivostchart&&!prognozaVidljiva\" class=\"panel-body \">\n                                    <div class=\"table-responsive\">\n                                        <table *ngIf=\"!sideBarVidljiv&&plantazaVidljiva\" class=\"table table-bordered table-striped\" [mfData]=\"vrste\" #mf=\"mfDataTable\"\n                                            [(mfSortBy)]=\"sortBy\">\n                                            <thead>\n                                                <tr>\n                                                    <!--    <th>#</th>-->\n                                                    <th style=\"text-align: center\">\n                                                        <mfDefaultSorter by=\"name\">{{selectedLang[3][\"text\"]}}</mfDefaultSorter>\n                                                    </th>\n                                                    <th style=\"text-align: center\">\n                                                        <mfDefaultSorter by=\"name\">{{selectedLang[7][\"text\"]}}</mfDefaultSorter>\n                                                    </th>\n                                                    <th style=\"text-align: center\">\n                                                        <mfDefaultSorter by=\"username\">{{selectedLang[4][\"text\"]}}</mfDefaultSorter>\n                                                    </th>\n                                                    <th style=\"text-align: center\">{{selectedLang[5][\"text\"]}}</th>\n\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"idTabele\">\n                                                <tr *ngFor=\"let i=index;let vrsta of mf.data   | filter:term | paginate: { itemsPerPage: 5, currentPage: pp,id: 'prva' }\">\n\n                                                    <td><span *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD  || vrste[i].dozvole.statistikaPrikaz))||isOwner\">{{vrsta.name}}</span></td>\n\n                                                    <td><span *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD  || vrste[i].dozvole.statistikaPrikaz))||isOwner\">{{vrsta.imanje}}</span></td>\n\n                                                    <td><span *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD || vrste[i].dozvole.statistikaPrikaz ))||isOwner\"><button type=\"text\" style=\"display:none\"></button>{{vrsta.username}}</span></td>\n                                                    <td *ngIf=\"lang[0]['lang']==undefined||lang[0]['lang']=='srb'\">\n\n\n\n                                                        <span tooltip=\"Prikaz plantaže\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> <i *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD ))||isOwner\" id=\"btn-login\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    (click)=\"prikaziPlantazu(vrsta.id)\" class=\"fa fa-map-o fa-2x\" ></i></span>\n                                                        <span tooltip=\"Upozorenja\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> <i *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD ))||isOwner\" id=\"btn-login\"\n                                                           (click)=\"idiNaTimeline(vrsta.id)\" class=\"fa fa-bell-o fa-2x\" ></i>\n                                                           \n                                                                    <span *ngFor=\"let exp of uniquePlantsExp\">\n                                                                    <span *ngIf=\"expObavestenja!==undefined&&exp.id==vrsta.id&&cssStyle!==undefined\" \n                                                                        class=\"badge badge-success pull-right notificationS\" style=\"\">\n                                                                        <i *ngIf=\"exp.severity==1\" class=\"fa fa-exclamation-triangle\" style=\"color:orange;\" aria-hidden=\"true\"></i>\n                                                                        <i *ngIf=\"exp.severity==2\" class=\"fa fa-exclamation-triangle\" style=\"color:red;\" aria-hidden=\"true\"></i>\n                                    \n                                                                    </span>\n                                                        </span>\n                                                        </span>\n                                                        <span tooltip=\"Vremenska prognoza\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> <i *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD ))||isOwner\" id=\"btn-login\"\n                                                           (click)=\"prikaziPrognozu(vrsta.id)\" class=\"fa fa-thermometer-half  fa-2x\" ></i></span>\n\n                                                        <span tooltip=\"Statistika\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n     <i  *ngIf=\"(dozvole!==undefined&&vrste[i].dozvole.statistikaPrikaz)||isOwner\" (click)=\"prikaziStatistiku(vrsta.id)\" class=\"fa fa-bar-chart fa-2x\"></i>\n\n   </span>\n                                                        <span tooltip=\"Ažuriranje\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n\t <i    *ngIf=\"isOwner||(dozvole!==undefined&&vrste[i].dozvole.plantCRUD)\" id=\"btn-login\" (click)=\"AzurirajPlant(vrsta.id)\"  class=\"fa fa-pencil-square-o fa-2x\"></i>\n\n   </span>\n                                                        <span tooltip=\"Brisanje\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n\t<i   *ngIf=\"(dozvole!==undefined&&vrste[i].dozvole.plantCRUD)||isOwner\" data-toggle=\"modal\" data-target=\"#brisanjePlantaze\"\n                                                            (click)='postaviIzabranuPlant(vrsta.id)' id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\n\n   </span>\n\n\n\n\n\n\n                                                    </td>\n                                                    <td *ngIf=\"lang[0]['lang']=='eng'\">\n\n\n\n                                                        <span tooltip=\"Show plantation\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> <i *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD ))||isOwner\" id=\"btn-login\"\n                                                           (click)=\"prikaziPlantazu(vrsta.id)\" class=\"fa fa-map-o fa-2x\" ></i></span>\n                                                        <span tooltip=\"Warnings\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> <i *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD ))||isOwner\" id=\"btn-login\"\n                                                           (click)=\"idiNaTimeline(vrsta.id)\" class=\"fa fa-bell-o fa-2x\" ></i>\n                                                           \n                                                                    <span *ngFor=\"let exp of uniquePlantsExp\">\n                                                                    <span *ngIf=\"expObavestenja!==undefined&&exp.id==vrsta.id&&cssStyle!==undefined\" \n                                                                        class=\"badge badge-success pull-right notificationS\" style=\"\">\n                                                                        <i *ngIf=\"exp.severity==1\" class=\"fa fa-exclamation-triangle\" style=\"color:orange;\" aria-hidden=\"true\"></i>\n                                                                        <i *ngIf=\"exp.severity==2\" class=\"fa fa-exclamation-triangle\" style=\"color:red;\" aria-hidden=\"true\"></i>\n                                    \n                                                                    </span>\n                                                        </span>\n                                                        </span>\n                                                        <span tooltip=\"Weather forecast\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> <i *ngIf=\"(dozvole!==undefined&&(vrste[i].dozvole.gledanjePlantaza || vrste[i].dozvole.plantCRUD ))||isOwner\" id=\"btn-login\"\n                                                           (click)=\"prikaziPrognozu(vrsta.id)\" class=\"fa fa-thermometer-half  fa-2x\" ></i></span>\n                                                        <span tooltip=\"Statistics\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <i  *ngIf=\"(dozvole!==undefined&&vrste[i].dozvole.statistikaPrikaz)||isOwner\" (click)=\"prikaziStatistiku(vrsta.id)\" class=\"fa fa-bar-chart fa-2x\"></i>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   </span>\n                                                        <span tooltip=\"Update\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <i    *ngIf=\"isOwner||(dozvole!==undefined&&vrste[i].dozvole.plantCRUD)\" id=\"btn-login\" (click)=\"AzurirajPlant(vrsta.id)\"  class=\"fa fa-pencil-square-o fa-2x\"></i>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   </span>\n                                                        <span tooltip=\"Delete\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i   *ngIf=\"(dozvole!==undefined&&vrste[i].dozvole.plantCRUD)||isOwner\" data-toggle=\"modal\" data-target=\"#brisanjePlantaze\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(click)='postaviIzabranuPlant(vrsta.id)' id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   </span>\n\n\n\n\n\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n\n                                        </table>\n                                        <pagination-controls *ngIf=\"lang[0]['lang']==undefined||lang[0]['lang']=='srb'\" style='cursor: pointer;' previousLabel=\"Prethodna\"\n                                            nextLabel=\"Sledeća\" id=\"prva\" (pageChange)=\"pp = $event\"></pagination-controls>\n                                        <pagination-controls *ngIf=\"lang[0]['lang']=='eng'\" style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Next\" id=\"prva\"\n                                            (pageChange)=\"pp = $event\"></pagination-controls>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-12 \" style=\"text-align:center\" *ngIf=\"!sideBarVidljiv&&parcelaVidljiva&&!prikazImanja\">\n\n                                    <!--   <div class=\"col-md-4 col-centered \" style=\"text-align:center;\">\n                            <div class=\"panel panel-primary\">\n                                <div class=\"panel-body \" style=\"max-height: 65px\">-->\n\n                                    <!--                                                   <div class=\"field\">\n\n  <input type=\"text\" placeholder=\"What?\" name=\"term\" [(ngModel)]=\"term\"/>\n</div>-->\n\n\n                                    <!--             </div>\n                            </div>\n                        </div>-->\n                                </div>\n\n\n\n                                <div *ngIf=\"!sideBarVidljiv&&parcelaVidljiva&&!prikazImanja\" class=\"panel-heading highFivePanel{{cssStyle}}\">{{selectedLang[6][\"text\"]}}</div>\n                                <form method=\"get\" *ngIf=\"!sideBarVidljiv&&parcelaVidljiva&&!prikazImanja&&(lang[0]['lang']==undefined||lang[0]['lang']=='srb')\"\n                                    action=\"/search\" id=\"search\" style=\"padding:30px;background-color:white;\">\n                                    <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Pretraga imanja\" name=\"term\" [(ngModel)]=\"term\" />\n                                </form>\n                                <form method=\"get\" *ngIf=\"!sideBarVidljiv&&parcelaVidljiva&&!prikazImanja&&lang[0]['lang']=='eng'\" action=\"/search\" id=\"search\"\n                                    style=\"padding:30px;background-color:white;\">\n                                    <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Search properties\" name=\"term\" [(ngModel)]=\"term\" />\n                                </form>\n                                <div *ngIf=\"!sideBarVidljiv&&parcelaVidljiva&&!prikazImanja\" class=\"panel-body \">\n                                    <div class=\"table-responsive\">\n                                        <table *ngIf=\"!sideBarVidljiv&&parcelaVidljiva&&!prikazImanja\" class=\"table table-bordered table-striped\" [mfData]=\"imanja\"\n                                            #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\n                                            <thead>\n                                                <tr>\n                                                    <!--    <th>#</th>-->\n                                                    <th style=\"text-align: center\">\n                                                        <mfDefaultSorter by=\"name\">{{selectedLang[7][\"text\"]}}</mfDefaultSorter>\n                                                    </th>\n                                                    <th style=\"text-align: center\">\n                                                        <mfDefaultSorter by=\"name\">{{selectedLang[45][\"text\"]}}</mfDefaultSorter>\n                                                    </th>\n                                                    <th style=\"text-align: center\">{{selectedLang[5][\"text\"]}}</th>\n\n                                                </tr>\n                                            </thead>\n                                            <tbody id=\"idTabele\" *ngIf=\"imanja!==undefined&&dozvoleKodVlasnika!==undefined\">\n                                                <tr *ngFor=\"let i=index; let imanje of mf.data | filter:term | paginate: { itemsPerPage: 5, currentPage: p, id: 'druga' }\">\n\n                                                    <td><span *ngIf=\"isOwner || (dozvole!==undefined&& (imanja[i].dozvole.vrednosti.gledanjePlantaza || imanja[i].dozvole.vrednosti.plantCRUD))\">{{imanje.name}}</span></td>\n                                                    <td><span *ngIf=\"isOwner || (dozvole!==undefined&& (imanja[i].dozvole.vrednosti.gledanjePlantaza || imanja[i].dozvole.vrednosti.plantCRUD))\">{{imanje.username}}</span></td>\n                                                    <td *ngIf=\"lang[0]['lang']==undefined||lang[0]['lang']=='srb'\">\n                                                        <span tooltip=\"Prikaz imanja\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n                                                        <i *ngIf=\"isOwner||(dozvole!==undefined&& (imanja[i].dozvole.vrednosti.gledanjePlantaza || imanja[i].dozvole.vrednosti.plantCRUD))\"\n                                                            id=\"btn-login\" (click)=\"prikaziImanje(imanje.id);popuniSideBar(imanje.id);\" class=\"fa fa-map-o fa-2x\"></i> </span>\n\n                                                        <span tooltip=\"Ažuriranje imanja\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n                                                        <i *ngIf=\"isOwner || (dozvole!==undefined&&imanja[i].dozvole!==undefined&&imanja[i].dozvole.vrednosti.plantCRUD)\" id=\"btn-login\"\n                                                            (click)=\"AzurirajParcelu(imanje.id)\" class=\"fa fa-pencil-square-o fa-2x\"></i></span>\n                                                        <span tooltip=\"Brisanje imanja\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n                                                        <i *ngIf=\"  isOwner ||(dozvole!==undefined&&imanja[i].dozvole!==undefined&&imanja[i].dozvole.vrednosti.plantCRUD) \" (click)=\"postaviIzabranoImanje(imanje.id)\"\n                                                            id=\"btn-login\" data-toggle=\"modal\" data-target=\"#brisanjeImanja\"\n                                                            class=\"fa fa-times fa-2x\"> </i></span>\n\n\n                                                    </td>\n                                                    <td *ngIf=\"lang[0]['lang']=='eng'\">\n                                                        <span tooltip=\"Show property\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n                                                        <i *ngIf=\"isOwner||(dozvole!==undefined&& (imanja[i].dozvole.vrednosti.gledanjePlantaza || imanja[i].dozvole.vrednosti.plantCRUD))\"\n                                                            id=\"btn-login\" (click)=\"prikaziImanje(imanje.id);popuniSideBar(imanje.id);\" class=\"fa fa-map-o fa-2x\"></i> </span>\n\n                                                        <span tooltip=\"Update property\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n                                                        <i *ngIf=\"isOwner || (dozvole!==undefined&&imanja[i].dozvole!==undefined&&imanja[i].dozvole.vrednosti.plantCRUD)\" id=\"btn-login\"\n                                                            (click)=\"AzurirajParcelu(imanje.id)\" class=\"fa fa-pencil-square-o fa-2x\"></i></span>\n                                                        <span tooltip=\"Delete property\" flow=\"down\" class=\"opcijePlantaza{{cssStyle}}\"> \n                                                        <i *ngIf=\"  isOwner ||(dozvole!==undefined&&imanja[i].dozvole!==undefined&&imanja[i].dozvole.vrednosti.plantCRUD) \" (click)=\"postaviIzabranoImanje(imanje.id)\"\n                                                            id=\"btn-login\" data-toggle=\"modal\" data-target=\"#brisanjeImanja\"\n                                                            class=\"fa fa-times fa-2x\"> </i></span>\n\n\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n                                        </table>\n\n                                        <pagination-controls *ngIf=\"lang[0]['lang']==undefined||lang[0]['lang']=='srb'\" style='cursor: pointer;' previousLabel=\"Prethodna\"\n                                            nextLabel=\"Sledeća\" id=\"druga\" (pageChange)=\"p = $event\"></pagination-controls>\n                                        <pagination-controls *ngIf=\"lang[0]['lang']=='eng'\" style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Next\" id=\"druga\"\n                                            (pageChange)=\"p = $event\"></pagination-controls>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <!--END LISTA PARCELA -->\n                <div [hidden]=\"!prikazImanja\" id=\"mapIDimanje\" style=\"height: 100%; width: 100%\"></div>\n\n                <button *ngIf=\"sideBarImanje\" (click)=\"nazadNaPrikazImanja()\" class=\"btn backToPrikaz{{cssStyle}} col-md-3\">{{selectedLang[17][\"text\"]}}</button>\n                <div class=\"col-md-3 infoTab{{cssStyle}}\" *ngIf=\"sideBarImanje\" style=\"width: 25%; height:680px; \">\n                    <div id=\"jovinDiv\">\n                        <h3> {{selectedLang[37][\"text\"]}} </h3>\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th style=\"text-align: center\">{{selectedLang[38][\"text\"]}}</th>\n                                        <th style=\"text-align: center\">{{selectedLang[39][\"text\"]}}</th>\n                                    </tr>\n                                </thead>\n                                <tbody id=\"idTabele1\">\n                                    <tr style=\"cursor: pointer\" *ngFor=\"let i=index; let plantazaIM of plantazeSaImanja | filter:term | paginate: { itemsPerPage: 5, currentPage: p }\"\n                                        (click)='fuja(i)'>\n\n                                        <td><span>{{plantazaIM.ime}}</span></td>\n\n                                        <td [style.background-color]=\"bojePoligona[i]\">\n\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <pagination-controls *ngIf=\"lang[0]['lang']==undefined||lang[0]['lang']=='srb'\" style='cursor: pointer;' previousLabel=\"Prethodna\"\n                                nextLabel=\"Sledeća\" id=\"druga\" (pageChange)=\"p = $event\"></pagination-controls>\n                            <pagination-controls *ngIf=\"lang[0]['lang']=='eng'\" style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Next\" id=\"druga\"\n                                (pageChange)=\"p = $event\"></pagination-controls>\n\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <div [hidden]=\"!sideBarVidljiv||vidljivostchart\" id=\"mapID\" style=\"height: 100%; width: 100%\"></div>\n\n                <button *ngIf=\"sideBarVidljiv\" (click)=\"nazadNaPrikaz()\" class=\"btn backToPrikaz{{cssStyle}} col-md-3\">{{selectedLang[18][\"text\"]}}</button>\n                <div class=\"col-md-3 infoTab{{cssStyle}}\" *ngIf=\"sideBarVidljiv\">\n\n                    <div class=\"row text-center\">\n                        <div class=\"col-md-12\">\n                            <h2 id=\"day1\" class=\"day\">{{izabranaPlantaza.name}}</h2>\n                        </div>\n                    </div>\n\n                    <div class=\"row text-center\" *ngIf=\"temperatura!==undefined\">\n\n                        <i id=\"wicon-main\" class=\"wi wi-main {{temperatura.weather[0].icon}}\"></i>\n                        <span id=\"temperature\">{{temperatura.main.temp}}°C</span>\n\n\n                    </div>\n\n\n\n                    <div class=\"row text-center\">\n                        <div *ngIf=\"temperatura!==undefined\" class=\"col-md-6 col-xs-6\">\n                            <p id=\"main1\">{{selectedLang[40][\"text\"]}}: {{temperatura.weather[0].description}}</p>\n                            <p id=\"humidity1\">{{selectedLang[41][\"text\"]}}: {{temperatura.main.humidity}}</p>\n                            <p *ngIf=\"vlaznostZemljista!==undefined\" id=\"humidity1\">{{selectedLang[42][\"text\"]}}: {{vlaznostZemljista}}</p>\n\n                        </div>\n                        <div *ngIf=\"temperatura!==undefined\" class=\"col-md-6 col-xs-6\">\n                            <p id=\"main1\">{{selectedLang[33][\"text\"]}}: {{izabranaPlantaza.namet}}</p>\n                            <p id=\"humidity1\">{{selectedLang[34][\"text\"]}}: {{izabranaPlantaza.names}}</p>\n                            <p *ngIf=\"vlaznostZemljista!==undefined\" id=\"humidity1\">{{selectedLang[35][\"text\"]}}: {{izabranaPlantaza.namep}}</p>\n\n                        </div>\n                        <div style=\"display: block\" *ngIf=\"pieChartLabels!==undefined&&pieChartData!==undefined&&pieChartData.length>0\">\n                            <canvas baseChart [data]=\"pieChartData\" [legend]=\"false\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\" (chartHover)=\"chartHovered($event)\"\n                                (chartClick)=\"chartClicked($event)\">\n                            </canvas>\n                        </div>\n\n                    </div>\n\n                </div>\n                <!-- prognoza-->\n                <div class=\"col-md-12\" *ngIf=\"prognozaVidljiva\" style=\"text-align: center \">\n                    <div class=\"panel-footer\" style=\"margin-top:5%;\">\n\n                        <button *ngIf=\"prognozaVidljiva\" (click)=\"nazadNaPrikaz()\" class=\"btn backToPrikaz{{cssStyle}}\">{{selectedLang[18][\"text\"]}}</button>\n                    </div>\n                    <section id=\"main\" *ngIf=\"prognozaDan1!==undefined&&temperatura!==undefined\">\n                        <div class=\"bg-primary{{cssStyle}} w-section text-shadow\">\n                            <div class=\"container\">\n                                <div class=\"row text-white w-header\">\n                                    <div class=\"col-sm-2  col-md-3 \">\n\n                                    </div>\n                                    <div class=\"col-sm-8  col-md-6 \">\n\n\n                                        <div class=\"row text-center\">\n                                            <div class=\"col-md-12\">\n                                                <h2 id=\"day1\" class=\"day\">{{izabranaPlantaza.name}}</h2>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div class=\"col-sm-2  col-md-3 \">\n\n\n                                    </div>\n                                </div>\n                                <div class=\"row text-white w-main\">\n                                    <div class=\"col-sm-2  col-md-3 \">\n\n\n                                    </div>\n                                    <div class=\"col-sm-8  col-md-6 \">\n                                        <div class=\"text-center\">\n                                            <i id=\"wicon-main\" class=\"wi wi-main {{temperatura.weather[0].icon}}\" style=\"visibility: visible; animation: 2000ms linear 0s normal none infinite running wi-moveY;\"></i>\n                                            <span id=\"temperature\">{{temperatura.main.temp}}°C</span>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-xs-12 w-desc-box\">\n                                                <p id=\"description\" class=\"text-capitalize\">{{temperatura.weather[0].description}}</p>\n                                                <p><span id=\"humidity\">{{temperatura.main.humidity}}</span> <i class=\"wi wi-humidity\"></i>                                                    {{selectedLang[41][\"text\"]}} </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-2  col-md-3 \">\n\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"container card-section\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3\">\n                                    <div *ngIf=\"temperaturaProg!==undefined\" class=\"days-box row text-center bg-white\" style=\"visibility: visible;\">\n                                        <div class=\"col-xs-3 day-first\" style=\"visibility: visible;\">\n                                            <p class=\"day\">{{prognozaDan1}}</p>\n                                            <hr class=\"hr-title hr-title-primary\">\n                                            <p><i class=\"wi {{prognozaDan1min.weather[0].icon}}\"></i></p>\n                                            <p><span class=\"d-min-temp\">{{prognozaDan1min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan1max.main.temp}}°</span></p>\n                                        </div>\n                                        <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                            <p class=\"day\">{{prognozaDan2}}</p>\n                                            <hr class=\"hr-title hr-title-primary\">\n                                            <p><i class=\"wi {{prognozaDan2min.weather[0].icon}}\"></i></p>\n                                            <p><span class=\"d-min-temp\">{{prognozaDan2min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan2max.main.temp}}°</span></p>\n                                        </div>\n                                        <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                            <p class=\"day\">{{prognozaDan3}}</p>\n                                            <hr class=\"hr-title hr-title-primary\">\n                                            <p><i class=\"wi {{prognozaDan3min.weather[0].icon}}\"></i></p>\n                                            <p><span class=\"d-min-temp\">{{prognozaDan3min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan3max.main.temp}}°</span></p>\n                                        </div>\n                                        <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                            <p class=\"day\">{{prognozaDan4}}</p>\n                                            <hr class=\"hr-title hr-title-primary\">\n                                            <p><i class=\"wi {{prognozaDan4min.weather[0].icon}}\"></i></p>\n                                            <p><span class=\"d-min-temp\">{{prognozaDan4min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan4max.main.temp}}°</span></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n\n                </div>\n                <!--end prognoza-->\n\n                <!-- CHART 1-->\n                <div class=\"row\" *ngIf=\"vidljivostchart&&imaPodataka&&!sideBarVidljiv\" style=\"text-align: center \">\n\n\n                    <div class=\"panel-footer\">\n                        <button (click)=\"vratiNaPrikaz()\" class=\"btn backToPrikaz{{cssStyle}} \"><span class=\"fa fa-arrow-left\"></span> {{selectedLang[18][\"text\"]}} </button>\n\n                    </div>\n                    <div class=\"col-md-12 row\">\n                        <div class=\"col-md-2 \"> </div>\n                        <div class=\"col-md-8\">\n                            <h3 class=\"row\">{{selectedLang[19][\"text\"]}}</h3>\n                            <div style=\"display: block;\">\n                                <canvas baseChart width=\"33%\" height=\"20%\" [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\" [options]=\"lineChartOptions\"\n                                    [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" [chartType]=\"lineChartType\" (chartHover)=\"chartHovered($event)\"\n                                    (chartClick)=\"chartClicked($event)\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- KRAJ 1. CHARTA -->\n                <!-- CHART 2-->\n                <div class=\"row\" *ngIf=\"vidljivostchartBar&&imaPodataka&&!sideBarVidljiv\">\n                    <div class=\"col-md-2\"> </div>\n                    <div class=\"col-md-8\" style=\"text-align: center \">\n                        <h3 class=\"row\">{{selectedLang[20][\"text\"]}}</h3>\n                        <div style=\"display: block;\">\n                            <canvas baseChart [datasets]=\"barChartData\" [colors]=\"lineChartColors\" [labels]=\"barChartLabels\" [options]=\"barChartOptions\"\n                                [legend]=\"barChartLegend\" [chartType]=\"barChartType\" (chartHover)=\"chartbarHovered($event)\" (chartClick)=\"chartbarClicked($event)\"></canvas>\n                        </div>\n                    </div>\n\n                </div>\n                <!-- KRAJ 2. CHARTA -->\n\n                <!-- CHART 3-->\n                <div class=\"row\" *ngIf=\" vidljivostRadar&&imaPodataka&&!sideBarVidljiv\">\n                    <div class=\"col-md-12\">\n                        <div class=\"col-md-2\"> </div>\n                        <div class=\"col-md-8\" style=\"text-align: center \">\n                            <h3 class=\"row\">{{selectedLang[21][\"text\"]}}</h3>\n                            <div style=\"display: block;\">\n                                <canvas baseChart [datasets]=\"radarChartData\" [colors]=\"lineChartColors\" [labels]=\"radarChartLabels\" [chartType]=\"radarChartType\"\n                                    [options]=\"barChartOptions\" (chartHover)=\"chartradarHovered($event)\" (chartClick)=\"chartradarClicked($event)\"\n                                    [legend]=\"barChartLegend\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"panel-footer\">\n                        <button (click)=\"vratiNaPrikaz()\" class=\"btn backToPrikaz{{cssStyle}} \"><span class=\"fa fa-arrow-left\"></span> {{selectedLang[18][\"text\"]}} </button>\n\n                    </div>\n\n                </div>\n\n\n                <!-- KRAJ 3. CHARTA -->\n            </div>\n            <div *ngIf=\"!imaPodataka&&podaciTrazeni\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                <button aria-label=\"Close\" (click)=\"skloniPoruku()\" data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                {{selectedLang[22][\"text\"]}}\n            </div>\n\n\n\n            <!--BRISANJE MODAL-->\n            <div class=\"modal fade\" id=\"brisanjePlantaze\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4 class=\"modal-title\">{{selectedLang[11][\"text\"]}}</h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>{{selectedLang[23][\"text\"]}}</p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" (click)=\"Obrisi()\" class=\"btn btn-success\" data-dismiss=\"modal\">{{selectedLang[24][\"text\"]}}</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"modal fade\" id=\"brisanjeImanja\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4 class=\"modal-title\">{{selectedLang[16][\"text\"]}}</h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>{{selectedLang[25][\"text\"]}}</p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" (click)=\"Obrisi1()\" class=\"btn btn-success\" data-dismiss=\"modal\">{{selectedLang[24][\"text\"]}}</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <!--END BRISANJE MODAL-->\n            <!--END ABOUT MODAL -->\n        </div>\n\n\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                <!-- <app-widgets></app-widgets>-->\n                <div class=\"col-sm-12\" style=\"text-align: center;align-items: center;margin-bottom:5%\">\n                    <!--     <button *ngIf=\"!isOwner\" class=\"btn btn-primary\" type=\"submit\" >-->\n                    <div class=\"panel-footer\" style=\"margin-top:5%;\">\n                        <button *ngIf=\"!isOwner\" class=\"btn btn-highFive{{cssStyle}} btn-lg\" (click)=\"posaljiZahtev1()\">  <i\n                                                            id=\"btn-login\" \n                                                            >{{selectedLang[43][\"text\"]}}</i></button>\n\n                    </div>\n                    <div *ngIf=\"postojiUBazi\" class=\"panel-footer \" style=\"height:100% \">\n                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                            <button  class=\"close\" style=\"color:black;\" type=\"button\" (click)=\"falsiraj()\"><span aria-hidden=\"true\">×</span></button>                            {{selectedLang[47][\"text\"]}}\n                        </div>\n                    </div>\n                    <div class=\"col-md-12\" *ngIf=\"poslatZahtev\">\n                        <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                            <button  class=\"close\" style=\"color:black;\" type=\"button\" (click)=\"falsiraj()\"><span aria-hidden=\"true\">×</span></button>                            {{selectedLang[46][\"text\"]}}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n            <div class=\"container-fluid\">\n                <section id=\"main\" *ngIf=\"prognozaDan1!==undefined&&temperatura!==undefined\">\n                    <div class=\"bg-primary w-section text-shadow\">\n                        <div class=\"container\">\n                            <div class=\"row text-white w-header\">\n                                <div class=\"col-sm-2  col-md-3 \">\n\n                                </div>\n                                <div class=\"col-sm-8  col-md-6 \">\n                                    <div class=\"row text-center\">\n                                        <div class=\"col-md-12\">\n\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div class=\"col-sm-2  col-md-3 \">\n\n\n                                </div>\n                            </div>\n                            <div class=\"row text-white w-main\">\n                                <div class=\"col-sm-2  col-md-3 \">\n\n\n                                </div>\n                                <div class=\"col-sm-8  col-md-6 \">\n                                    <div class=\"text-center\">\n                                        <i id=\"wicon-main\" class=\"wi wi-main {{temperatura.weather[0].icon}}\" style=\"visibility: visible; animation: 2000ms linear 0s normal none infinite running wi-moveY;\"></i>\n                                        <span id=\"temperature\">{{temperatura.main.temp}}°C</span>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-xs-12 w-desc-box\">\n                                            <p id=\"description\" class=\"text-capitalize\">{{temperatura.weather[0].description}}</p>\n                                            <p><span id=\"humidity\">{{temperatura.main.humidity}}</span> <i class=\"wi wi-humidity\"></i>                                                {{selectedLang[41][\"text\"]}} </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-2  col-md-3 \">\n\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"container card-section\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3\">\n                                <div *ngIf=\"temperaturaProg!==undefined\" class=\"days-box row text-center bg-white\" style=\"visibility: visible;\">\n                                    <div class=\"col-xs-3 day-first\" style=\"visibility: visible;\">\n                                        <p class=\"day\">{{prognozaDan1}}</p>\n                                        <hr class=\"hr-title hr-title-primary\">\n                                        <p><i class=\"wi {{prognozaDan1min.weather[0].icon}}\"></i></p>\n                                        <p><span class=\"d-min-temp\">{{prognozaDan1min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan1max.main.temp}}°</span></p>\n                                    </div>\n                                    <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                        <p class=\"day\">{{prognozaDan2}}</p>\n                                        <hr class=\"hr-title hr-title-primary\">\n                                        <p><i class=\"wi {{prognozaDan2min.weather[0].icon}}\"></i></p>\n                                        <p><span class=\"d-min-temp\">{{prognozaDan2min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan2max.main.temp}}°</span></p>\n                                    </div>\n                                    <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                        <p class=\"day\">{{prognozaDan3}}</p>\n                                        <hr class=\"hr-title hr-title-primary\">\n                                        <p><i class=\"wi {{prognozaDan3min.weather[0].icon}}\"></i></p>\n                                        <p><span class=\"d-min-temp\">{{prognozaDan3min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan3max.main.temp}}°</span></p>\n                                    </div>\n                                    <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                        <p class=\"day\">{{prognozaDan4}}</p>\n                                        <hr class=\"hr-title hr-title-primary\">\n                                        <p><i class=\"wi {{prognozaDan4min.weather[0].icon}}\"></i></p>\n                                        <p><span class=\"d-min-temp\">{{prognozaDan4min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan4max.main.temp}}°</span></p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n\n            <div class=\"modal fade\" id=\"zahtev\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4 class=\"modal-title\">{{selectedLang[34][\"Posalji zahtev za vlasnistvo\"]}}</h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>{{selectedLang[36][\"Sigurni\"]}}</p>\n\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" (click)=\"posaljiZahtev1()\" class=\"btn btn-success\" data-dismiss=\"modal\">{{selectedLang[35][\"Da\"]}}</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n\n\n\n\n            <!--     <div class=\"container-fluid\">\n            ovde ide neki content za guesta\n        </div>-->\n        </div>\n\n\n\n\n\n    </div>\n    <!--  <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">-->\n\n\n\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 772:
/***/ (function(module, exports) {

module.exports = "\r\n    <!--\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"app/WeatherMap/another.weather/leaflet/leaflet.css\" />\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"app/WeatherMap/another.weather/leaflet-openweathermap.css\" />\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"app/WeatherMap/another.weather/files/map.css\" />\r\n\t<script src=\"app/WeatherMap/another.weather/leaflet/leaflet.js\"></script>\r\n\t<script src=\"app/WeatherMap/another.weather/leaflet/Permalink.js\"></script>\r\n\t<script src=\"app/WeatherMap/another.weather/leaflet/Permalink.Layer.js\"></script>\r\n\t<script src=\"app/WeatherMap/another.weather/leaflet/Permalink.Overlay.js\"></script>\r\n\t<script src=\"app/WeatherMap/another.weather/leaflet/leaflet-flattrbutton.js\"></script>\r\n\t<script src=\"app/WeatherMap/another.weather/leaflet-openweathermap.js\"></script>\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"leaflet/leaflet-languageselector.css\" />\r\n\t<script src=\"app/WeatherMap/another.weather/leaflet/leaflet-languageselector.js\"></script>\r\n\t<script src=\"app/WeatherMap/another.weather/files/map_i18n.js\"></script>\r\n\t<script src=\"app/WeatherMap/another.weather/files/map.js\"></script>\r\n  \r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"leaflet/leaflet.css\" />\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"./leaflet-openweathermap.css\" />\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"files/map.css\" />\r\n\t<script src=\"leaflet/leaflet.js\"></script>\r\n\t<script src=\"leaflet/Permalink.js\"></script>\r\n\t<script src=\"leaflet/Permalink.Layer.js\"></script>\r\n\t<script src=\"leaflet/Permalink.Overlay.js\"></script>\r\n\t<script src=\"leaflet/leaflet-flattrbutton.js\"></script>\r\n\t<script src=\"./leaflet-openweathermap.js\"></script>\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"leaflet/leaflet-languageselector.css\" />\r\n\t<script src=\"leaflet/leaflet-languageselector.js\"></script>\r\n\t<script src=\"files/map_i18n.js\"></script>\r\n\t<script src=\"files/map.js\"></script>\r\n-->\r\n<!--\r\n<iframe src=\"https://www.ventusky.com/\" width=\"100%\" height =\"100%\"></iframe>\r\n-->\r\n<div id=\"map\"></div>"

/***/ }),

/***/ 773:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n  <title>PlanTech</title>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"author\" content=\"HighFive\" />\n\n  <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n  <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n  <link rel=\"stylesheet\" href=\"css/infoTabStyle.css\">\n\n\n</head>\n\n<body>\n\n  <div id=\"wrapper\">\n\n    <app-meni></app-meni>\n\n    <!-- glavni deo -->\n    <div [hidden]=\"(dozvole!==undefined&&dozvole.guest==true)||(smeDaDodaje==false&&isOwner==false)\" id=\"page-wrapper\">\n      <app-widgets></app-widgets>\n      <!--\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 \" style=\"text-align:center;margin-top: 10px\">\n                    <div class=\"col-md-3\">\n                        <div class=\"widget widget-success widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-globe\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.plantaze}}</div>\n                                <div class=\"widget-title\">registrovanih plantaza</div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"col-md-3\">\n                        <div class=\"widget widget-primary widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-users\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.radnici}}</div>\n                                <div class=\"widget-title\">registrovana radnka</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                        <div class=\"widget widget-info widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-book\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.eksperti}}</div>\n                                <div class=\"widget-title\">registrovanih experata</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3 \">\n                        <div class=\"widget widget-warning widget-item-icon\">\n                            <div class=\"widget-item-left\">\n                                <span class=\"fa fa-warning\"></span>\n                            </div>\n                            <div class=\"widget-data\">\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.obavestenja}}</div>\n                                <div class=\"widget-title\">obavestenja</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n-->\n      <div class=\"container-fluid\">\n        <!-- ODABIR PARCELA -->\n\n        <div class=\"col-md-12 \" style=\"text-align:center\">\n          <div class=\"col-md-12  \" style=\"text-align:center\">\n\n\n            <div class=\"panel panel-primary panelDef{{cssStyle}}\">\n              <div class=\"panel-heading highFivePanel{{cssStyle}}\">{{selectedLang[0][\"Dodavanje meraca\"]}}</div>\n              <div class=\"panel-body \" style=\"height:100% \">\n                <div class=\"col-md-12 \" style=\"text-align:center;\">\n\n                  <div style=\"clear:both\"></div>\n                  <div *ngIf=\"dodatMerac\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                    <button aria-label=\"Close\" (click)='close()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>{{selectedLang[1][\"Merac\n                    dodat\"]}}\n                  </div>\n                </div>\n\n                <div class=\"panel-footer \">\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-4 \" *ngIf=\"isOwner||dozvoleKodGazde.length!=0\">\n                      <div class=\"form-group\">\n                        <label class=\"center-block\">{{selectedLang[2][\"Izbor vlasnika\"]}}</label>\n                        <select class=\"form-control\" id=\"selektajtem\" (change)=\"promenaSelekta()\">\n\t\t\t\t\t\t\t <option *ngFor=\"let ow of komeMozeDaDoda\" [value]=\"ow.id\" >{{ow.name}} {{ow.surname}}</option>\n\t\t\t\t\t\t  </select>\n\n                      </div>\n\n                    </div>\n                    <div class=\"col-md-4\">\n                      <label class=\"center-block\">{{selectedLang[3][\"Izaberite imanje\"]}}</label>\n                      <div class=\"form-group\">\n                        <select class=\"form-control\" id='vlasnici' (change)=\"onChangeIm($event.target.value)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <option  >{{selectedLang[3][\"Izaberite imanje\"]}}</option>\n                                                        <option *ngFor=\"let imanje of svaImanja\" value=\"{{imanje.id}}\" >{{imanje.name}}</option>\n                                                    </select>\n                      </div>\n\n                    </div>\n                    <div class=\"col-md-4\">\n                      <label class=\"center-block\">{{selectedLang[5][\"Izaberite plantazu\"]}}</label>\n                      <div class=\"form-group\">\n                        <menu class=\"c-input\">\n                          <label for=\"checkbox\" class=\"c-input__label\"> <span *ngIf=\"nizOdabranihPlantaza<=0||nizOdabranihPlantaza==undefined\">{{selectedLang[5][\"Izaberite plantazu\"]}}</span><span *ngFor=\"let nop of nizOdabranihPlantaza\">{{nop.name}} ,</span>\n\t\t\t\t\t\t\t  <svg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\" class=\"c-input__icon\">\n\t\t\t\t\t\t\t\t<path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n\t\t\t\t\t\t\t  </svg></label>\n                          <input id=\"checkbox\" type=\"checkbox\" aria-hidden=\"true\" class=\"c-dropdown__trigger\" />\n                          <ul class=\"c-dropdown u-text-small\">\n                            <li *ngFor=\"let plantazaIM of plantazeSaImanja\">\n                              <input name=\"checkbox\" value=\"{{plantazaIM.id}}\" id=\"checkbox-{{plantazaIM.id}}\" type=\"checkbox\" [checked]=\"cekiran[plantazaIM.id]\"\n                                class=\"c-dropdown__trigger\" />\n                              <label for=\"checkbox-{{plantazaIM.id}}\" class=\"c-dropdown__option\" (click)=\"crtajPoligon(plantazaIM.id)\">{{plantazaIM.name}}\n\t\t\t\t\t\t\t\t  <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" class=\"c-dropdown__option__icon\">\n\t\t\t\t\t\t\t\t\t<path d=\"M9 16.172l10.594-10.594 1.406 1.406-12 12-5.578-5.578 1.406-1.406z\"></path>\n\t\t\t\t\t\t\t\t  </svg></label>\n                            </li>\n\n                          </ul>\n                        </menu>\n                      </div>\n                    </div>\n                  </div>\n\n\n\n                  <div class=\"col-md-12\">\n\n                    <menu class=\"c-input\">\n                      <label for=\"checkbox2\" class=\"c-input__label\"> <span *ngIf=\"nizOdabranih.length==0\">{{selectedLang[6][\"Izabrati merenja\"]}}</span><span *ngFor=\"let no of nizOdabranih\">{{no.name}} ,</span>\n\t\t\t\t\t\t\t  <svg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\" class=\"c-input__icon\">\n\t\t\t\t\t\t\t\t<path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n\t\t\t\t\t\t\t  </svg></label>\n                      <input id=\"checkbox2\" type=\"checkbox\" aria-hidden=\"true\" class=\"c-dropdown__trigger\" />\n                      <ul class=\"c-dropdown u-text-small\">\n                        <li *ngFor=\"let m of merenja\">\n                          <label class=\"c-dropdown__option\" (click)=\"promeniCek(m.id)\">{{m.name}} </label>\n                          <!-- class=\"c-dropdown__option\"  for=\"checkbox-{{m.id}}\"       <input name=\"checkbox\" value=\"{{m.id}\" id=\"checkbox-{{m.id}}\" type=\"checkbox\" [checked]=\"cekiranaMerenja[m.id]\" class=\"c-dropdown__trigger\"\n                          />\n\t\t\t\t\t\t\t\t  <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" class=\"c-dropdown__option__icon\">\n\t\t\t\t\t\t\t\t\t<path d=\"M9 16.172l10.594-10.594 1.406 1.406-12 12-5.578-5.578 1.406-1.406z\"></path>\n\t\t\t\t\t\t\t\t  </svg></label>-->\n                        </li>\n\n                      </ul>\n                    </menu>\n\n\n\n                  </div>\n\n\n\n                  <div class=\"col-md-12\">\n                    <button (click)=\"obrisiMarker()\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\" type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\">{{selectedLang[7][\"Obrisi\"]}}<i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <!-- <button (click)=\"removeLast()\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\" type=\"submit\" class=\"btn btn-danger\">Obrisi poslednji</button> \n                    <button (click)=\" removeAllMarkers()\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\" type=\"submit\" class=\"btn btn-danger\">Obrisi sve</button>-->\n                    <button (click)=\"poveziMarkerPlantazu()\" type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\">{{selectedLang[8][\"Povezi\"]}}</button>\n                  </div>\n                  <div class=\"col-md-12\" *ngIf=\"prazanNizplantaza\">\n                    <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                      <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                      Morate izabrati bar jednu plantažu i merač!\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\" *ngIf=\"uspesnoDodatMarker\">\n                    <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                      <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                      Uspešno ste povezali merač i plantažu.\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\" *ngIf=\"markerObrisan\">\n                    <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                      <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                      Uspešno ste obrisali merač.\n                    </div>\n                  </div>\n                  <label class=\"col-md-12\">{{selectedLang[9][\"Kliknite na mapu za dodavanje meraca\"]}}</label>\n                  <div style=\"height: 100%; width: 100%\">\n                    <div id=\"googleMapPovezivanje\" style=\"width:100%; height: 700px\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\n          </div>\n\n\n        </div>\n\n\n\n\n\n\n\n      </div>\n      <!-- end glavni deo -->\n    </div>\n    <div id=\"page-wrapper\" *ngIf=\"(dozvole!==undefined&&dozvole.guest==true)||(smeDaDodaje==false&&isOwner==false)\">\n      <div class=\"container-fluid\" style=\" width:80%; margin-top:10%;\">\n        <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Trenutno pristupate kao gost.\n                   </p> \n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\n                   Za više informacija obratite se administratoru sistema.\n                   </p> -->\n        <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\n        <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">{{selectedLang[10][\"Nemate pristup ovoj stranici!\"]}}</p>\n        <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">{{selectedLang[11][\"Za vise informacija obratite se administratoru sistema.\"]}}</p>\n      </div>\n    </div>\n\n  </div>\n  <!-- end srpski -->\n\n\n\n\n  <!-- full screen -->\n  <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n    defer>\n\n    </script>\n  <script>\n    function initMap() {\n      var mapProp1 = {\n        center: new google.maps.LatLng(51.508742, -0.120850),\n        zoom: 5,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      };\n      var mapProp2 = {\n        center: new google.maps.LatLng(51.508742, -0.120850),\n        zoom: 5,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      };\n      var mapDodavanje = new google.maps.Map(document.getElementById(\"googleMapDodavanje\"), mapProp1);\n      var mapPovezivanje = new google.maps.Map(document.getElementById(\"googleMapPovezivanje\"), mapProp2);\n    }\n    google.maps.event.addDomListener(window, 'load', initialize);\n  </script>\n\n</body>\n\n</html>"

/***/ }),

/***/ 774:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n  <title>PlanTech</title>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"author\" content=\"HighFive\" />\n\n  <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n  <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n</head>\n\n<body>\n  <div id=\"wrapper\">\n\n\n    <app-meni></app-meni>\n    <!-- glavni deo -->\n    <div id=\"page-wrapper\">\n\n      <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"prikaziSve()\">Lista korisnika</button>\n        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"prikaziZahteve()\"> Lista zahteva</button>\n        <button class=\"btn btn-primary\" type=\"submit\" (click)=\"prikaziStatistiku()\"> Statistika</button>\n        <br><br>\n      </div>\n\n\n\n\n      <div *ngIf=\"prikaziUsere\" class=\"col-md-12 row\" style=\"text-align:center\">\n        <div class=\"panel panel-primary\">\n            <form method=\"get\" *ngIf=\"prikaziUsere\" action=\"/search\" id=\"search\" style=\"padding:30px; background-color:white;\">\n            <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Pretraga korisnika\" name=\"term\" [(ngModel)]=\"term\" />\n          </form>\n          <div class=\"panel-heading\" style=\"background-color:  #8f2846\">Lista svih korisnika servisa</div>\n          <div class=\"panel-body \">\n            <div class=\"table-responsive\">\n              <table class=\"table table-bordered table-striped\" [mfData]=\"sviKorisnici\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\n                <thead>\n                  <tr>\n                    <!--    <th>#</th>-->\n                    <th style=\"text-align: center\">\n                     Ime\n                    </th>\n                    <th style=\"text-align: center\">\n                    Prezime\n                    </th>\n                    <th style=\"text-align: center\">\n                  Korisnicko ime\n                    </th>\n                    <th style=\"text-align: center\">\n                     E-mail\n                    </th>\n                    <th style=\"text-align: center\">\n                  Datum rodjenja\n                    </th>\n                    <th style=\"text-align: center\">\n                     Drzava\n                    </th>\n                    <th style=\"text-align: center\">Opcija</th>\n\n                  </tr>\n                </thead>\n                <tbody id=\"idTabele\">\n                  <tr *ngFor=\"let i=index; let korisnik of sviKorisnici | filter:term  | paginate: { itemsPerPage: 7, currentPage: p,id: 'prva' }\">\n                    <td *ngIf=\"sviKorisnici[i].block\" style=\"color:red;\">{{korisnik.name}}</td>\n                    <td *ngIf=\"!sviKorisnici[i].block\">{{korisnik.name}}</td>\n                    <td *ngIf=\"sviKorisnici[i].block\" style=\"color:red;\">{{korisnik.surname}}</td>\n                    <td *ngIf=\"!sviKorisnici[i].block\">{{korisnik.surname}}</td>\n                    <td *ngIf=\"sviKorisnici[i].block\" style=\"color:red;\">{{korisnik.username}}</td>\n                    <td *ngIf=\"!sviKorisnici[i].block\">{{korisnik.username}}</td>\n                    <td *ngIf=\"sviKorisnici[i].block\" style=\"color:red;\">{{korisnik.email}}</td>\n                    <td *ngIf=\"!sviKorisnici[i].block\">{{korisnik.email}}</td>\n                    <td *ngIf=\"sviKorisnici[i].block\" style=\"color:red;\">{{korisnik.birth}}</td>\n                    <td *ngIf=\"!sviKorisnici[i].block\">{{korisnik.birth}}</td>\n                    <td *ngIf=\"sviKorisnici[i].block\" style=\"color:red;\">{{korisnik.country}}</td>\n                    <td *ngIf=\"!sviKorisnici[i].block\">{{korisnik.country}}</td>\n                    <td> <button type=\"submit\" *ngIf=\"!sviKorisnici[i].block\" class=\"btn btn-primary\" (click)=\"BlokirajKorisnika(korisnik.id)\">Blokiraj</button>                      <button type=\"submit\" *ngIf=\"sviKorisnici[i].block\" class=\"btn btn-primary\" (click)=\"OdblokirajKorisnika(korisnik.id)\">Odblokiraj</button></td>\n                  </tr>\n\n                </tbody>\n              </table>\n              <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" id=\"prva\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"prikaziZahtev\" class=\"col-md-12 row\" style=\"text-align:center\">\n        <div class=\"panel panel-primary\">\n          <form method=\"get\" *ngIf=\"prikaziZahtev\" action=\"/search\" id=\"search\" style=\"padding:30px; background-color:white;\">\n            <input name=\"q\" type=\"text\" size=\"40\" placeholder=\"Pretraga korisnika\" name=\"term\" [(ngModel)]=\"term\" />\n          </form>\n          <div class=\"panel-heading\" style=\"background-color:  #8f2846\">Lista svih zahteva za koriscenje servisa</div>\n          <div class=\"panel-body \">\n            <div class=\"table-responsive\">\n              <table class=\"table table-bordered table-striped\" [mfData]=\"sviZahtevi\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\n                <thead>\n                  <tr>\n                    <!--    <th>#</th>-->\n                    <th style=\"text-align: center\">\n                      <mfDefaultSorter by=\"name\">Ime</mfDefaultSorter>\n                    </th>\n                    <th style=\"text-align: center\">\n                      <mfDefaultSorter by=\"surname\">Prezime</mfDefaultSorter>\n                    </th>\n                    <th style=\"text-align: center\">\n                      <mfDefaultSorter by=\"username\">Korisnicko ime</mfDefaultSorter>\n                    </th>\n                    <th style=\"text-align: center\">\n                      <mfDefaultSorter by=\"email\">E-mail</mfDefaultSorter>\n                    </th>\n                    <th style=\"text-align: center\">\n                      <mfDefaultSorter by=\"birth\">Datum rodjenja</mfDefaultSorter>\n                    </th>\n                    <th style=\"text-align: center\">\n                      <mfDefaultSorter by=\"country\">Drzava</mfDefaultSorter>\n                    </th>\n                    <th style=\"text-align: center\">Dozvoli</th>\n                    <th style=\"text-align: center\">Ignorisi</th>\n                  </tr>\n                </thead>\n                <tbody id=\"idTabele\">\n                  <tr *ngFor=\"let zahtev of mf.data | filter:term   | paginate: { itemsPerPage: 7, currentPage: pp, id: 'druga' }\">\n                    <td>{{zahtev.name}}</td>\n                    <td>{{zahtev.surname}}</td>\n                    <td>{{zahtev.username}}</td>\n                    <td>{{zahtev.email}}</td>\n                    <td>{{zahtev.birth}}</td>\n                    <td>{{zahtev.country}}</td>\n                    <td><button id=\"btn-login\" (click)=\"Dozvoli(pom.value)\" #pom class=\"btn btn logButton\" value=\"{{zahtev.id}}\"\n                        value=\"\" style=\"background-color: #31b0d5; color:white\" type=\"submit\">Dozvoli</button></td>\n                    <td><button id=\"btn-login\" (click)=\"Ignorisi(pom1.value)\" class=\"btn btn logButton\" #pom1 value=\"{{zahtev.id}}\"\n                        style=\"background-color:#337ab7; color:white\" type=\"submit\">Ignorisi</button></td>\n                  </tr>\n                </tbody>\n              </table>\n              <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" id=\"druga\" (pageChange)=\"pp = $event\"></pagination-controls>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"statVidljiva\" class=\"col-md-12 row\" style=\"text-align:center\">\n        <div class=\"col-md-12\" style=\"text-align:center\">\n          <div *ngIf=\"userChartBar\" class=\"col-md-4\" style=\"text-align: center \">\n            <h3 class=\"row\">Broj novih korisnika po mesecima</h3>\n            <div style=\"display: block;\">\n              <canvas baseChart [datasets]=\"userBarChartData\" [colors]=\"lineChartColors\" [labels]=\"userBarChartLabels\" [options]=\"barChartOptions\"\n                [legend]=\"barChartLegend\" [chartType]=\"barChartType\" (chartHover)=\"chartbarHovered($event)\" (chartClick)=\"chartbarClicked($event)\"></canvas>\n            </div>\n          </div>\n          <div *ngIf=\"plantChartBar\" class=\"col-md-4\" style=\"text-align: center \">\n            <h3 class=\"row\">Broj novih plantaza po mesecima</h3>\n            <div style=\"display: block;\">\n              <canvas baseChart [datasets]=\"plantBarChartData\" [colors]=\"lineChartColors1\" [labels]=\"plantBarChartLabels\" [options]=\"barChartOptions\"\n                [legend]=\"barChartLegend\" [chartType]=\"barChartType\" (chartHover)=\"chartbarHovered($event)\" (chartClick)=\"chartbarClicked($event)\"></canvas>\n            </div>\n          </div>\n          <div *ngIf=\"parcelChartBar\" class=\"col-md-4\" style=\"text-align: center \">\n            <h3 class=\"row\">Broj novih imanja po mesecima</h3>\n            <div style=\"display: block;\">\n              <canvas baseChart [datasets]=\"parcelBarChartData\" [colors]=\"lineChartColors2\" [labels]=\"parcelBarChartLabels\" [options]=\"barChartOptions\"\n                [legend]=\"barChartLegend\" [chartType]=\"barChartType\" (chartHover)=\"chartbarHovered($event)\" (chartClick)=\"chartbarClicked($event)\"></canvas>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-12\" style=\"text-align:center\">\n          <div *ngIf=\"typesChartBar\" class=\"col-md-4\" style=\"text-align: center \">\n            <h3 class=\"row\">Broj novih kultura po mesecima</h3>\n            <div style=\"display: block;\">\n              <canvas baseChart [datasets]=\"typesBarChartData\" [colors]=\"lineChartColors3\" [labels]=\"typesBarChartLabels\" [options]=\"barChartOptions\"\n                [legend]=\"barChartLegend\" [chartType]=\"barChartType\" (chartHover)=\"chartbarHovered($event)\" (chartClick)=\"chartbarClicked($event)\"></canvas>\n            </div>\n          </div>\n          <div *ngIf=\"typesDoughChart\" class=\"col-md-4\" style=\"text-align: center \">\n            <h3 class=\"row\">Broj novih kultura po mesecima</h3>\n            <div style=\"display: block\">\n              <canvas baseChart [data]=\"typesDoughnutChartData\" [labels]=\"typesDoughnutChartLabels\" [chartType]=\"doughnutChartType\" (chartHover)=\"chartHovered($event)\"\n                (chartClick)=\"chartClicked($event)\"></canvas>\n            </div>\n          </div>\n          <div *ngIf=\"subtypesDoughChart\" class=\"col-md-4\" style=\"text-align: center \">\n            <h3 class=\"row\">Broj novih podkultura po mesecima</h3>\n            <div style=\"display: block\">\n              <canvas baseChart [data]=\"subtypesDoughnutChartData\" [labels]=\"subtypesDoughnutChartLabels\" [chartType]=\"doughnutChartType\"\n                (chartHover)=\"chartHovered($event)\" (chartClick)=\"chartClicked($event)\"></canvas>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</body>\n\n</html>"

/***/ }),

/***/ 775:
/***/ (function(module, exports) {

module.exports = "<div class=\"row\" *ngIf=\"lineChartData!=undefined&&lineChartLabels!=undefined\">\n  <div class=\"col-md-6\">\n    <div style=\"display: block;\">\n    <canvas baseChart width=\"400\" height=\"400\"\n                [datasets]=\"lineChartData\"\n                [labels]=\"lineChartLabels\"\n                [options]=\"lineChartOptions\"\n                [colors]=\"lineChartColors\"\n                [legend]=\"lineChartLegend\"\n                [chartType]=\"lineChartType\"\n                (chartHover)=\"chartHovered($event)\"\n                (chartClick)=\"chartClicked($event)\"></canvas>\n    </div>\n  </div>\n \n</div>"

/***/ }),

/***/ 776:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\n      <link rel=\"stylesheet\" href=\"css/w3.css\"> \n</head>\n\n<body>\n<div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined&&lang=='srb'\">\n        <div id=\"loading-text\">UČITAVANJE</div>\n        <div id=\"loading-content\"></div>\n    </div>\n\t<div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined&&lang=='eng'\">\n        <div id=\"loading-text\">LOADING</div>\n        <div id=\"loading-content\"></div>\n    </div>\n\t <!-- srpski -->\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined&&lang=='srb'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" >\n           \n       \n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 no-left-padding no-right-padding\" style=\"margin-top:5%\">                                    \n                 \n                    <div class=\"container-fluid no-right-padding\" >\n               <div class=\"col-md-12 no-left-padding no-right-padding\" >                                    \n\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t<section class=\"row\">\n\t\t\t\t\t\t\t<h2>Često postavljana pitanja</h2>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div *ngFor=\"let pitanjeodgovor of pitanjaOdgovori\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">{{pitanjeodgovor.question}}</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<p>{{pitanjeodgovor.answer}}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!--\t<li>\n\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">Sta ja dobijam za moj novac?</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\t\t\t\n\t\t\t\t\t\t\t\t\t\t<p>Nas sistem pruza brzu i pouzdanu uslugu u organizaciji Vasih imanja kao i pruzanju informacija o merama koje je potrebno preduzeti u gajenju Vasih kultura.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">Da li ovu aplikaciju moram da placam i sledece godine?</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\n\t\t\t\t\t\t\t\t\t\t<p>Da, ovaj sistem kosta 500e godisnje.Ukoliko ne uplatite ovaj iznos naredne godine administrator sistema blokira vas nalog ali Vasi podaci nece biti trajno unisteni.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">Da li mogu da promenim temu ako pozelim?</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\n\t\t\t\t\t\t\t\t\t\t<p>Da, izbor teme i jezika je omogucen.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>-->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\n\t</div>\n\t           <div class=\"col-md-4 faq_left\">\n                           \n                            <div class=\"panel panel-primary\">\n                                <div class=\"panel-body\">\n                                    <div *ngIf=\"poslato\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>\n                                Uspešno poslato pitanje.\n                            </div>\n                        </div>\n                                    <h3>Kontaktirajte nas</h3>\n                                    <p>Ako imate neko pitanje koje nije ponudjeno možete nam pisati, a mi ćemo odgovoriti vrlo brzo.</p>\n                                          <form class=\"form-horizontal col-sm-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>Ime</label><input name=\"ime\" class=\"form-control required\" placeholder=\"Vase ime\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" [(ngModel)]=\"ime\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>Naslov</label><input name=\"naslov\" class=\"form-control required\" placeholder=\"Naslov poruke\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" [(ngModel)]=\"naslov\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>E-Mail</label><input name=\"email\" class=\"form-control email\" placeholder=\"email@you.com (kako bi smo mogli da vam odgovrimo)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" [(ngModel)]=\"email\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>Poruka</label><textarea name=\"poruka\"class=\"form-control\" placeholder=\"Vasa poruka...\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-trigger=\"manual\" [(ngModel)]=\"poruka\"></textarea></div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><button (click)=\"posalji()\" type=\"submit\" class=\"btn btn-highFive pull-right\">Pošalji!</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</form>                        \n                                </div>\n                               \n                            </div>\n                            \n                        </div>\n                </div>\n              </div>\n                </div>\n             \n            </div>\n\n     \n        </div>\n        <!-- end glavni deo\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                ovde ide neki content za guesta\n            </div>\n        </div> -->\n    </div>\n\n\n\t <!-- engleski -->\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined&&lang=='eng'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" >\n           \n       \n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 no-left-padding no-right-padding\" style=\"margin-top:5%\">                                    \n                 \n                    <div class=\"container-fluid no-right-padding\" >\n               <div class=\"col-md-12 no-left-padding no-right-padding\" >                                    \n\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t<section class=\"row\">\n\t\t\t\t\t\t\t<h2>frequently asked question</h2>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div *ngFor=\"let pitanjeodgovor of pitanjaOdgovori\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">{{pitanjeodgovor.question}}</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<p>{{pitanjeodgovor.answer}}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!--\t<li>\n\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">Sta ja dobijam za moj novac?</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\t\t\t\n\t\t\t\t\t\t\t\t\t\t<p>Nas sistem pruza brzu i pouzdanu uslugu u organizaciji Vasih imanja kao i pruzanju informacija o merama koje je potrebno preduzeti u gajenju Vasih kultura.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">Da li ovu aplikaciju moram da placam i sledece godine?</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\n\t\t\t\t\t\t\t\t\t\t<p>Da, ovaj sistem kosta 500e godisnje.Ukoliko ne uplatite ovaj iznos naredne godine administrator sistema blokira vas nalog ali Vasi podaci nece biti trajno unisteni.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<label class=\"accordion\">\n\t\t\t\t\t\t\t\t\t<input type='checkbox' name='checkbox-accordion'>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__header\">Da li mogu da promenim temu ako pozelim?</div>\n\t\t\t\t\t\t\t\t\t<div class=\"accordion__content\">\n\t\t\t\t\t\t\t\t\t\t<p>Da, izbor teme i jezika je omogucen.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</li>-->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\n\t</div>\n\t           <div class=\"col-md-4 faq_left\">\n                           \n                            <div class=\"panel panel-primary\">\n                                <div class=\"panel-body\">\n                                    <div *ngIf=\"poslato\" class=\"panel-footer \" style=\"height:100% \">\n                            <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>\n                              Successfully sent question\n                            </div>\n                        </div>\n                                    <h3>Contact us</h3>\n                                    <p>Send us a question</p>\n                                          <form class=\"form-horizontal col-sm-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>Name</label><input name=\"ime\" class=\"form-control required\" placeholder=\"name\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" [(ngModel)]=\"ime\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>Subject</label><input name=\"naslov\" class=\"form-control required\" placeholder=\"Subject\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" [(ngModel)]=\"naslov\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>E-Mail</label><input name=\"email\" class=\"form-control email\" placeholder=\"email@you.com\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" [(ngModel)]=\"email\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>Text</label><textarea name=\"poruka\"class=\"form-control\" placeholder=\"text\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-trigger=\"manual\" [(ngModel)]=\"poruka\"></textarea></div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\"><button (click)=\"posalji()\" type=\"submit\" class=\"btn btn-highFive pull-right\">Send</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</form>                        \n                                </div>\n                               \n                            </div>\n                            \n                        </div>\n                </div>\n              </div>\n                </div>\n             \n            </div>\n\n     \n        </div>\n        <!-- end glavni deo\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                ovde ide neki content za guesta\n            </div>\n        </div> -->\n    </div>\n\n\n</body>\n\n</html><script>\n\n        (function printDiv() {\n             console.log(\"u stampaj!\");\n       /*     var printContents=document.getElementById(divName).innerHTML;\n            console.log(\"u stampaj!\");\n            w=window.open();\n            w.document.write(printContents);\n            w.print();\n            w.close();*/\n        })\n</script> "

/***/ }),

/***/ 777:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<head>\r\n    <title>PlanTech</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta name=\"author\" content=\"HighFive\" />\r\n\r\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\r\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\r\n\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n\r\n\t <!-- srpski -->\r\n    <div id=\"wrapper\" *ngIf=\"lang=='srb'\">\r\n\r\n        <app-meni></app-meni>\r\n\r\n        <!-- glavni deo -->\r\n        <div id=\"page-wrapper\">\r\n\r\n            <app-widgets></app-widgets>\r\n            \r\n            <div class=\"container-fluid\">\r\n            \r\n                <div class=\"col-md-12 no-left-padding\">\r\n                      <div class=\"col-md-10  \" style=\"text-align:center;\">\r\n                        <div id=\"togglable-tabs\" id=\"opcije\">\r\n                            <!-- meni za podesavanja  -->\r\n\t\t\t\t\t\r\n                            <div class=\"tab\" role=\"tabpanel\">\r\n                                    <!-- Nav tabs -->\r\n                                    <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n                                        <li role=\"presentation\" class=\"{{cssStyleT}} {{prihodiVidljivi ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[0][\"Prihodi\"]}}</a></li>\r\n                                        <li role=\"presentation\" class=\"{{cssStyleT}} {{rashodiVidljivi ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab1()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[1][\"Rashodi\"]}}</a></li>\r\n                                        <li role=\"presentation\" class=\"{{cssStyleT}} {{ukupnoVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab2()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">{{selectedLang[2][\"Ukupno\"]}}</a></li>\r\n                                    \r\n                                    </ul>\r\n                            </div>\r\n                        <div *ngIf=\"rashodiVidljivi\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n                            <div class=\"panel-body \">\r\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                <a class=\"btn btn-highFive{{cssStyle}}\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Dodaj rashod</a>\r\n                        <div *ngIf=\"addTran\" class=\"modal-content\">\r\n                        \r\n                            <div class=\"modal-body\">\r\n                               \r\n                                <div class=\"form-group\"><label>Opis</label><textarea class=\"form-control\" [(ngModel)]=\"opis\" placeholder=\"Rashod\" data-placement=\"top\"\r\n                                        data-trigger=\"manual\"></textarea></div>\r\n                                <div class=\"form-group\"><label>Iznos</label><input class=\"form-control\" placeholder=\"\"\r\n                                        data-placement=\"top\" data-trigger=\"manual\" [(ngModel)]=\"iznos\"\r\n                                        type=\"number\" min=\"0\"></div>\r\n                                 <div class=\"form-group\" style=\"margin-top: 25px\">\r\n                                    <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"col-md-3 control-label\">Datum</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div  class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Dan</span>\r\n                                            <select id='dan' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"thisDay == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div  class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Mesec</span>\r\n                                            <select id='mesec' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected]= \"thisMonth == mesec ? true : null\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Godina</span>\r\n                                            <select id='godina' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected]= \"thisYear == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                \r\n                                \r\n                                \r\n                                <div class=\"modal-footer\">\r\n                                    <a class=\"btn btn-highFive{{cssStyle}} pull-left\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Otkaži <i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n                                    <div class=\"form-group pull-right\"><button type=\"submit\" (click)=\"sacuvajTransakciju(2)\" data-dismiss=\"modal\" class=\"btn btn-highFive{{cssStyle}} pull-right\">Sačuvaj</button>\r\n                                        <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                                    </div>\r\n                                    <div style=\"clear:both\"></div>\r\n                                    <div *ngIf=\"losDatum\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Unesite sva polja u formi.\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"neispravnaForma\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Unesite sva polja u formi.\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"dodatRashod\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Uspešno ste uneli rashod.\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"negativanIznos\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Iznos ne može biti negativan.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            </div>\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered table-striped\" [mfData]=\"rashodiLista\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\r\n                                        <thead>\r\n                                            <tr>\r\n\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"opis\">Rashod</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"datum\">Datum</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"iznos\">Iznos</mfDefaultSorter>\r\n                                                    </th>\r\n\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            <tr *ngFor=\"let uw of mf.data | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n\r\n                                                <td>{{ uw.opis }}</td>\r\n                                                <td> {{ uw.datum | date:'mediumDate' }}</td>\r\n                                                <td>{{ uw.iznos | currency: 'RSD':true:'1.2-2'}}</td>\r\n                                            </tr>\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\r\n                                    <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                        <p>Ukupno rashoda {{ukupnoRashoda | currency: 'RSD':true:'1.2-2'}}</p>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div *ngIf=\"prihodiVidljivi\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n                            <div class=\"panel-body \">\r\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                <a class=\"btn btn-highFive{{cssStyle}}\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Dodaj prihod</a>\r\n                        <div *ngIf=\"addTran\" class=\"modal-content\">\r\n                        \r\n                            <div class=\"modal-body\">\r\n                               \r\n                                <div class=\"form-group\"><label>Opis</label><textarea class=\"form-control\" [(ngModel)]=\"opis\" placeholder=\"Prihod\" data-placement=\"top\"\r\n                                        data-trigger=\"manual\"></textarea></div>\r\n                                <div class=\"form-group\"><label>Iznos</label><input class=\"form-control\" placeholder=\"\"\r\n                                        data-placement=\"top\" data-trigger=\"manual\" [(ngModel)]=\"iznos\"\r\n                                        type=\"number\" min=\"0\"></div>\r\n                                 <div class=\"form-group\" style=\"margin-top: 25px\">\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"col-md-3 control-label\">Datum</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Dan</span>\r\n                                            <select id='dan' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"thisDay == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Mesec</span>\r\n                                            <select id='mesec' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected] = \"thisMonth == mesec ? true : null \">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Godina</span>\r\n                                            <select id='godina' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected] = \"thisYear == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                \r\n                                \r\n                                \r\n                                \r\n                                <div class=\"modal-footer\">\r\n                                    <a class=\"btn btn-highFive{{cssStyle}} pull-left\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Otkaži <i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n                                    <div class=\"form-group pull-right\"><button type=\"submit\" (click)=\"sacuvajTransakciju(1)\" data-dismiss=\"modal\" class=\"btn btn-highFive{{cssStyle}} pull-right\">Sačuvaj</button>\r\n                                        <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                                    </div>\r\n                                    <div style=\"clear:both\"></div>\r\n                                    <div *ngIf=\"losDatum\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Unesite pravilan datum.\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"neispravnaForma\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Unesite sva polja u formi.\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"dodatPrihod\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Uspešno ste uneli prihod.\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"negativanIznos\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Iznos ne može biti negativan.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            </div>\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered table-striped\" [mfData]=\"prihodiLista\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\r\n                                        <thead>\r\n                                            <tr>\r\n\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"opis\">Prihod</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"datum\">Datum</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"iznos\">Iznos</mfDefaultSorter>\r\n                                                    </th>\r\n\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            <tr *ngFor=\"let uw of mf.data | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n\r\n                                                <td>{{ uw.opis }}</td>\r\n                                                <td> {{ uw.datum | date:'mediumDate' }}</td>\r\n                                                <td>{{ uw.iznos | currency: 'RSD':true:'1.2-2'}}</td>\r\n                                            </tr>\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\r\n                                    <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                        <p>Ukupno prihoda {{ukupnoPrihoda | currency: 'RSD':true:'1.2-2'}}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"ukupnoVidljivo\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n                            <div class=\"panel-body \">\r\n                            <div class=\"col-md-6 \" style=\"text-align:center;\">\r\n                            \r\n                                <div class=\"form-group\" style=\"margin-top: 25px\">\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"control-label\">Početni datum</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Dan</span>\r\n                                            <select id='danOd' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"dayAgo == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Mesec</span>\r\n                                            <select id='mesecOd' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected]= \"monthAgo == mesec ? true : null\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Godina</span>\r\n                                            <select id='godinaOd' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected]= \"yearAgo == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                            <div class=\"col-md-6 \" style=\"text-align:center;\">\r\n                            \r\n                            <div class=\"form-group\" style=\"margin-top: 25px\">\r\n\t\t\t\t\t\t\t <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"control-label\">Krajnji datum</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Dan</span>\r\n                                            <select id='danDo' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"thisDay == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Mesec</span>\r\n                                            <select id='mesecDo' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected]= \"thisMonth == mesec ? true : null\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Godina</span>\r\n                                            <select id='godinaDo' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected]= \"thisYear == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                            \r\n                            </div>\r\n\t\t\t\t\t\t\t\r\n                                \r\n                                    <div class=\"form-group col-md-12\" style=\"margin-top: 25px\">\r\n                                        <button class=\"btn btn-highFive{{cssStyle}}\" (click)=\"izrUkupno()\" data-toggle=\"modal\">Pogledaj</button>\r\n                                    </div>\r\n\t\t\t\t\t\t\t\t\t      <div class=\" col-md-12\" >\r\n                                <div class=\"col-md-6 \" style=\"text-align:center;margin-top: 25px\">\r\n                            <p>Ukupno potrošeno u datom periodu: {{ukupnoRashodaPeriod | currency: 'RSD':true:'1.2-2'}}, ukupno zaradjeno u datom periodu: {{ukupnoPrihodaPeriod | currency: 'RSD':true:'1.2-2'}}</p>\r\n                            <p>Status {{ukupnoStatus | currency: 'RSD':true:'1.2-2'}}</p>\r\n                                </div>\r\n                            \r\n                                <div *ngIf=\"zaradaDoughChart\" class=\"col-md-6 \" style=\"text-align: center;\">\r\n                                    <h3 class=\"row\">Prihodi i rashodi</h3>\r\n                                    <div >\r\n                                    <canvas baseChart [data]=\"zaradaDoughnutChartData\" [labels]=\"zaradaDoughnutChartLabels\" [chartType]=\"doughnutChartType\" (chartHover)=\"chartHovered($event)\"\r\n                                        (chartClick)=\"chartClicked($event)\"></canvas>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            <div *ngIf=\"losDatum1 \" class=\"alert alert-danger\">\r\n                                    Datumi nisu validni.\r\n\r\n                                </div>\r\n                            </div>\r\n                                \r\n                            </div>\r\n                           \r\n                      \r\n                       \r\n                        \r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                \r\n                <div class=\"col-md-2  \" style=\"padding-top:30px;\">\r\n                    <iframe src=\"http://kursna-lista.com/gedzeti/gadget2white.php\" frameborder=\"0\" height=\"110\" scrolling=\"no\" width=\"210\"></iframe>\r\n              <!--      <iframe src=\"https://www.google.com/finance/converter\" frameborder=\"0\" height=\"190\" scrolling=\"yes\" width=\"300\"></iframe> \r\n                    \r\n                    <div>\r\n                        \r\n                            <div class=\"form-group\">\r\n                                <h4>Konvertor valuta</h4>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <b>Iz:</b>\r\n                                <br/>\r\n                                <select name=\"base_currency\" [(ngModel)]=\"stateP\">\r\n                                    <option *ngFor=\"let state1 of stateList\"  value=\"{{state1.code}}\" [attr.selected]=\"state1.code == EUR ? true : null\">{{state1.currency}}</option>\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                Iznos<input type=\"text\" class=\"form-control\" [(ngModel)]=\"polaznaSuma\" size=\"10\" value=\"1\">\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <b>U:</b>\r\n                                <br/>\r\n                                <select name=\"target_currency\" [(ngModel)]=\"stateZ\">\r\n                                    <option *ngFor=\"let state2 of stateList\"  value=\"{{state2.code}}\" [attr.selected]=\"state2.code == USD ? true : null\">{{state2.currency}}</option>\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <label>{{ vrednostKonv | currency: stateZ :true:'1.2-2' }}</label>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <a class=\"btn btn-highFive\" (click)=\"convertCurrency()\">Konvertuj</a>\r\n                            </div>\r\n                            \r\n\r\n                    </div> \r\n                    -->\r\n                </div>\r\n            </div>\r\n           \r\n             <!-- FINANCE MODAL -->\r\n            <div id=\"FinanceModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                            <h3 id=\"myModalLabel\">Dodaj transakciju</h3>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                               \r\n                                <div class=\"form-group\"><label>Opis</label><textarea class=\"form-control\" [(ngModel)]=\"opis\" placeholder=\"Opis transakcije?!\" data-placement=\"top\"\r\n                                        data-trigger=\"manual\"></textarea></div>\r\n                                <div class=\"form-group\"><label>Iznos</label><input class=\"form-control\" placeholder=\"\"\r\n                                        data-placement=\"top\" data-trigger=\"manual\" [(ngModel)]=\"iznos\"\r\n                                        type=\"number\"></div>\r\n                                 <div class=\"form-group\" style=\"margin-top: 25px\">\r\n                                    <label class=\"col-md-3 control-label\">Datum rodjenja</label>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <select id='dan'>\r\n                                                <option *ngFor=\"let dan of day_array\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <select id='mesec'>\r\n                                                <option *ngFor=\"let mesec of month_array\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <select id='godina'>\r\n                                                <option *ngFor=\"let godina of year_array\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"losDatum \" class=\"alert alert-danger\">\r\n                                    Datum nije validan.\r\n\r\n                                </div>\r\n                                <label>Tip\r\n                                <input type=\"radio\" [(ngModel)]=\"tipTr\"  name=\"tip\" value=\"prihod\">Prihod\r\n                                <input type=\"radio\" [(ngModel)]=\"tipTr\"  name=\"tip\" value=\"rashod\">Rashod\r\n                                </label>\r\n                                <div class=\"form-group\"><button type=\"submit\" (click)=\"sacuvajTransakciju()\" data-dismiss=\"modal\" class=\"btn btn-send pull-right\">Sačuvaj</button>\r\n                                    <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                                </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--END FINANCE MODAL -->\r\n        </div>\r\n        <!-- end glavni deo -->\r\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\r\n            <div class=\"container-fluid\">\r\n                ovde ide neki content za guesta\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n\r\n\r\n\r\n    \r\n\t\t <!--engleski -->\r\n    <div id=\"wrapper\" *ngIf=\"lang=='eng'\">\r\n\r\n        <app-meni></app-meni>\r\n\r\n        <!-- glavni deo -->\r\n        <div id=\"page-wrapper\">\r\n\r\n            <app-widgets></app-widgets>\r\n\r\n\r\n            <div class=\"container-fluid\">\r\n                <div class=\"col-md-12 no-left-padding\">\r\n                      <div class=\"col-md-10  \" style=\"text-align:center;\">\r\n                        <div id=\"togglable-tabs\" id=\"opcije\">\r\n                            <!-- meni za podesavanja  -->\r\n\t\t\t\t\t\r\n                            <div class=\"tab\" role=\"tabpanel\">\r\n                                    <!-- Nav tabs -->\r\n                                    <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n                                        <li role=\"presentation\" class=\"{{cssStyleT}} {{prihodiVidljivi ? 'profileTab active' : ''}} \"><a (click)=\"promeniTab()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Income</a></li>\r\n                                        <li role=\"presentation\" class=\"{{cssStyleT}} {{rashodiVidljivi ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab1()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Expenses</a></li>\r\n                                        <li role=\"presentation\" class=\"{{cssStyleT}} {{ukupnoVidljivo ? 'profileTab active' : ''}}\"><a (click)=\"promeniTab2()\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Overall</a></li>\r\n                                    \r\n                                    </ul>\r\n                            </div>\r\n                        <div *ngIf=\"rashodiVidljivi\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n                            <div class=\"panel-body \">\r\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                <a class=\"btn btn-highFive{{cssStyle}}\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Add Expenses</a>\r\n                        <div *ngIf=\"addTran\" class=\"modal-content\">\r\n                        \r\n                            <div class=\"modal-body\">\r\n                               \r\n                                <div class=\"form-group\"><label>Desription</label><textarea class=\"form-control\" [(ngModel)]=\"opis\" placeholder=\"Rashod\" data-placement=\"top\"\r\n                                        data-trigger=\"manual\"></textarea></div>\r\n                                <div class=\"form-group\"><label>Value</label><input class=\"form-control\" placeholder=\"\"\r\n                                        data-placement=\"top\" data-trigger=\"manual\" [(ngModel)]=\"iznos\"\r\n                                        type=\"number\" min=\"0\"></div>\r\n                                 <div class=\"form-group\" style=\"margin-top: 25px\">\r\n                                    <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"col-md-3 control-label\">Date</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div  class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Day</span>\r\n                                            <select id='dan' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"thisDay == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div  class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Month</span>\r\n                                            <select id='mesec' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected]= \"thisMonth == mesec ? true : null\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Year</span>\r\n                                            <select id='godina' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected]= \"thisYear == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                \r\n                                \r\n                                \r\n                                <div class=\"modal-footer\">\r\n                                    <a class=\"btn btn-highFive{{cssStyle}} pull-left\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Cancel <i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n                                    <div class=\"form-group pull-right\"><button type=\"submit\" (click)=\"sacuvajTransakciju(2)\" data-dismiss=\"modal\" class=\"btn btn-highFive{{cssStyle}} pull-right\">Save</button>\r\n                                        <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                                    </div>\r\n                                    <div style=\"clear:both\"></div>\r\n                                    <div *ngIf=\"losDatum\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                           Fill out all fileds\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"neispravnaForma\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                              Fill out all fileds\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"dodatRashod\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                           You have successfully added expenses\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"negativanIznos\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Amount can't be negative.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            </div>\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered table-striped\" [mfData]=\"rashodiLista\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\r\n                                        <thead>\r\n                                            <tr>\r\n\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"opis\">Expenses</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"datum\">Date</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"iznos\">Value</mfDefaultSorter>\r\n                                                    </th>\r\n\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            <tr *ngFor=\"let uw of mf.data | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n\r\n                                                <td>{{ uw.opis }}</td>\r\n                                                <td> {{ uw.datum | date:'mediumDate' }}</td>\r\n                                                <td>{{ uw.iznos | currency: 'RSD':true:'1.2-2'}}</td>\r\n                                            </tr>\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Next\" (pageChange)=\"p = $event\"></pagination-controls>\r\n                                    <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                        <p>Overall Expenses {{ukupnoRashoda | currency: 'RSD':true:'1.2-2'}}</p>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div *ngIf=\"prihodiVidljivi\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n                            <div class=\"panel-body \">\r\n                                <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                <a class=\"btn btn-highFive{{cssStyle}}\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Add Income</a>\r\n                        <div *ngIf=\"addTran\" class=\"modal-content\">\r\n                        \r\n                            <div class=\"modal-body\">\r\n                               \r\n                                <div class=\"form-group\"><label>Description</label><textarea class=\"form-control\" [(ngModel)]=\"opis\" placeholder=\"Prihod\" data-placement=\"top\"\r\n                                        data-trigger=\"manual\"></textarea></div>\r\n                                <div class=\"form-group\"><label>Value</label><input class=\"form-control\" placeholder=\"\"\r\n                                        data-placement=\"top\" data-trigger=\"manual\" [(ngModel)]=\"iznos\"\r\n                                        type=\"number\" min=\"0\"></div>\r\n                                 <div class=\"form-group\" style=\"margin-top: 25px\">\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"col-md-3 control-label\">Date</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Day</span>\r\n                                            <select id='dan' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"thisDay == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Month</span>\r\n                                            <select id='mesec' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected]= \"thisMonth == mesec ? true : null\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\" style=\"margin-bottom:5px\">\r\n                                                <span>Year</span>\r\n                                            <select id='godina' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected]= \"thisYear == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                \r\n                                \r\n                                \r\n                                \r\n                                <div class=\"modal-footer\">\r\n                                    <a class=\"btn btn-highFive{{cssStyle}} pull-left\" (click)=\"addTran = !addTran\" data-toggle=\"modal\">Cancel <i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n                                    <div class=\"form-group pull-right\"><button type=\"submit\" (click)=\"sacuvajTransakciju(1)\" data-dismiss=\"modal\" class=\"btn btn-highFive{{cssStyle}} pull-right\">Save</button>\r\n                                        <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                                    </div>\r\n                                    <div style=\"clear:both\"></div>\r\n                                    <div *ngIf=\"losDatum\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                           Enter valid date\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"neispravnaForma\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                         You have to fill out all fileds\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"dodatPrihod\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                          You have successfully added Income\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"negativanIznos\" class=\"panel-footer \" style=\"height:100% \">\r\n                                        <div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\r\n                                            <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                \r\n                                            Amount can't be negative.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            </div>\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered table-striped\" [mfData]=\"prihodiLista\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\">\r\n                                        <thead>\r\n                                            <tr>\r\n\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"opis\">Income</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"datum\">Date</mfDefaultSorter>\r\n                                                </th>\r\n                                                <th style=\"text-align: center\">\r\n                                                    <mfDefaultSorter by=\"iznos\">Value</mfDefaultSorter>\r\n                                                    </th>\r\n\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            <tr *ngFor=\"let uw of mf.data | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n\r\n                                                <td>{{ uw.opis }}</td>\r\n                                                <td> {{ uw.datum | date:'mediumDate' }}</td>\r\n                                                <td>{{ uw.iznos | currency: 'RSD':true:'1.2-2'  }}</td>\r\n                                            </tr>\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Next\" (pageChange)=\"p = $event\"></pagination-controls>\r\n                                    <div class=\"col-md-3 \" style=\"text-align:center;\">\r\n                                        <p>Overall Income {{ukupnoPrihoda | currency: 'RSD':true:'1.2-2'}}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"ukupnoVidljivo\" class=\"panel panel-primary panelDef{{cssStyle}}\">\r\n                            <div class=\"panel-body \">\r\n                            <div class=\"col-md-6 \" style=\"text-align:center;\">\r\n                            \r\n                                <div class=\"form-group\" style=\"margin-top: 25px\">\r\n\t\t\t\t\t\t\t\t <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"control-label\">Start date</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Day</span>\r\n                                            <select id='danOd' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"dayAgo == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Month</span>\r\n                                            <select id='mesecOd' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected]= \"monthAgo == mesec ? true : null\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                                <span>Year</span>\r\n                                            <select id='godinaOd' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected]= \"yearAgo == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                            <div class=\"col-md-6 \" style=\"text-align:center;\">\r\n                            \r\n                            <div class=\"form-group\" style=\"margin-top: 25px\">\r\n\t\t\t\t\t\t\t <div class=\"col-md-12\" style=\"text-align:center\">\r\n                                    <label class=\"control-label\">End date</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <span>Day</span>\r\n                                            <select id='danDo' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let dan of day_array\" [attr.selected]= \"thisDay == dan ? true : null\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <span>Month</span>\r\n                                            <select id='mesecDo' class=\"form-control datePick\">\r\n                                                <option *ngFor=\"let mesec of month_array\" [attr.selected]= \"thisMonth == mesec ? true : null\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <span>Year</span>\r\n                                                \r\n                                            <select id='godinaDo' class=\"form-control datePick\">\r\n                                                \r\n                                                <option *ngFor=\"let godina of year_array\" [attr.selected]= \"thisYear == godina ? true : null\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                            \r\n                            </div>\r\n\t\t\t\t\t\t\t\r\n                                \r\n                                    <div class=\"form-group col-md-12\" style=\"margin-top: 25px\">\r\n                                        <button class=\"btn btn-highFive{{cssStyle}}\" (click)=\"izrUkupno()\" data-toggle=\"modal\">Show</button>\r\n                                    </div>\r\n\t\t\t\t\t\t\t\t\t      <div class=\" col-md-12\" >\r\n                                <div class=\"col-md-6 \" style=\"text-align:center;margin-top: 25px\">\r\n                            <p>Overall expenses in selected period: {{ukupnoRashodaPeriod | currency: 'RSD':true:'1.2-2'}} Overall income in selected period: {{ukupnoPrihodaPeriod | currency: 'RSD':true:'1.2-2'}}</p>\r\n                            <p>Status {{ukupnoStatus | currency: 'RSD':true:'1.2-2'}}</p>\r\n                                </div>\r\n                            \r\n                                <div *ngIf=\"zaradaDoughChart\" class=\"col-md-6 \" style=\"text-align: center;\">\r\n                                    <h3 class=\"row\">Income and Expenses</h3>\r\n                                    <div >\r\n                                    <canvas baseChart [data]=\"zaradaDoughnutChartData\" [labels]=\"zaradaDoughnutChartLabels\" [chartType]=\"doughnutChartType\" (chartHover)=\"chartHovered($event)\"\r\n                                        (chartClick)=\"chartClicked($event)\"></canvas>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            <div *ngIf=\"losDatum1 \" class=\"alert alert-danger\">\r\n                                   Selected date are not valid\r\n\r\n                                </div>\r\n                            </div>\r\n                                \r\n                            </div>\r\n                           \r\n                      \r\n                       \r\n                        \r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-md-2  \" style=\"padding-top:30px;\">\r\n                    <iframe src=\"http://kursna-lista.com/gedzeti/gadget2white.php\" frameborder=\"0\" height=\"110\" scrolling=\"no\" width=\"210\"></iframe>\r\n              <!--      <iframe src=\"https://www.google.com/finance/converter\" frameborder=\"0\" height=\"190\" scrolling=\"yes\" width=\"300\"></iframe> \r\n                    \r\n                    <div>\r\n                        \r\n                            <div class=\"form-group\">\r\n                                <h4>Currency converter</h4>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <b>From:</b>\r\n                                <br/>\r\n                                <select name=\"base_currency\" [(ngModel)]=\"stateP\">\r\n                                    <option *ngFor=\"let state1 of stateList\"  value=\"{{state1.code}}\" [attr.selected]=\"state1.code == EUR ? true : null\">{{state1.currency}}</option>\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                Amount<input type=\"text\" class=\"form-control\" [(ngModel)]=\"polaznaSuma\" size=\"10\" value=\"1\">\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <b>To:</b>\r\n                                <br/>\r\n                                <select name=\"target_currency\" [(ngModel)]=\"stateZ\">\r\n                                    <option *ngFor=\"let state2 of stateList\"  value=\"{{state2.code}}\" [attr.selected]=\"state2.code == USD ? true : null\">{{state2.currency}}</option>\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <label>{{ vrednostKonv | currency: stateZ :true:'1.2-2' }}</label>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <a class=\"btn btn-highFive\" (click)=\"convertCurrency()\">Convert</a>\r\n                            </div>\r\n                            \r\n\r\n                    </div> \r\n                    -->\r\n                </div>\r\n                      \r\n\r\n                </div>\r\n\r\n           \r\n             <!-- FINANCE MODAL -->\r\n            <div id=\"FinanceModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                            <h3 id=\"myModalLabel\">Add transation</h3>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                               \r\n                                <div class=\"form-group\"><label>Description</label><textarea class=\"form-control\" [(ngModel)]=\"opis\" placeholder=\"Opis transakcije?!\" data-placement=\"top\"\r\n                                        data-trigger=\"manual\"></textarea></div>\r\n                                <div class=\"form-group\"><label>Value</label><input class=\"form-control\" placeholder=\"\"\r\n                                        data-placement=\"top\" data-trigger=\"manual\" [(ngModel)]=\"iznos\"\r\n                                        type=\"number\"></div>\r\n                                 <div class=\"form-group\" style=\"margin-top: 25px\">\r\n                                    <label class=\"col-md-3 control-label\">Date</label>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <select id='dan'>\r\n                                                <option *ngFor=\"let dan of day_array\">\r\n                                                  {{dan}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <select id='mesec'>\r\n                                                <option *ngFor=\"let mesec of month_array\">\r\n                                                  {{mesec}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <select id='godina'>\r\n                                                <option *ngFor=\"let godina of year_array\">\r\n                                                  {{godina}}\r\n                                                </option> \r\n                                                          \r\n                                        </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"losDatum \" class=\"alert alert-danger\">\r\n                                   DAte is not valid\r\n\r\n                                </div>\r\n                                <label>Tip\r\n                                <input type=\"radio\" [(ngModel)]=\"tipTr\"  name=\"tip\" value=\"prihod\">Income\r\n                                <input type=\"radio\" [(ngModel)]=\"tipTr\"  name=\"tip\" value=\"rashod\">Expenses\r\n                                </label>\r\n                                <div class=\"form-group\"><button type=\"submit\" (click)=\"sacuvajTransakciju()\" data-dismiss=\"modal\" class=\"btn btn-send pull-right\">Save</button>\r\n                                    <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\r\n                                </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Exit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--END FINANCE MODAL -->\r\n        </div>\r\n        <!-- end glavni deo -->\r\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\r\n            <div class=\"container-fluid\">\r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    </div>\r\n\t <!--END engleski -->\r\n</body>\r\n\r\n</html>"

/***/ }),

/***/ 778:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n    <link rel=\"stylesheet\" href=\"css/infoTabStyle.css\">\n    <link rel=\"stylesheet\" href=\"css/weather-icons.css\">\n\n\n\n    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n        defer>\n\n        </script>\n\n\n\n    <script>\n        function initMap() {\n            var mapProp = {\n                center: new google.maps.LatLng(51.508742, -0.120850),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        }\n        google.maps.event.addDomListener(window, 'load', initialize);\n    </script>\n</head>\n\n<body>\n\n    <div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined\">\n        <div id=\"loading-text\">UČITAVANJE</div>\n        <div id=\"loading-content\"></div>\n    </div>\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined\">\n\n\n        <app-meni></app-meni>\n        <!-- glavni deo -->\n      <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false\">\n            <app-widgets></app-widgets>\n   \n\t\n\t\t\t  <div class=\"container-fluid\">\n            <section id=\"main\" *ngIf=\"prognozaDan1min!==undefined&&temperatura!==undefined\">\n                <div class=\"bg-primary{{cssStyle}} w-section text-shadow\">\n                    <div class=\"container\">\n                        <div class=\"row text-white w-header\">\n                            <div class=\"col-sm-2  col-md-3 \">\n\n                            </div>\n                            <div class=\"col-sm-8  col-md-6 \">\n <div class=\"row text-center\">\n                        <div class=\"col-md-12\">\n                          \n                        </div>\n                    </div>\n\n                            </div>\n                            <div class=\"col-sm-2  col-md-3 \">\n\n\n                            </div>\n                        </div>\n                        <div class=\"row text-white w-main\">\n                            <div class=\"col-sm-2  col-md-3 \">\n\n\n                            </div>\n                            <div class=\"col-sm-8  col-md-6 \">\n                                <div class=\"text-center\">\n                                    <i id=\"wicon-main\" class=\"wi wi-main {{temperatura.weather[0].icon}}\" style=\"visibility: visible; animation: 2000ms linear 0s normal none infinite running wi-moveY;\"></i>\n                                    <span id=\"temperature\">{{temperatura.main.temp}}°C</span>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xs-12 w-desc-box\">\n                                        <p id=\"description\" class=\"text-capitalize\">{{temperatura.weather[0].description}}</p>\n                                        <p><span id=\"humidity\">{{temperatura.main.humidity}}</span> <i class=\"wi wi-humidity\"></i>                                            {{selectedLang[41][\"text\"]}} </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-2  col-md-3 \">\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"container card-section\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3\">\n                            <div *ngIf=\"temperaturaProg!==undefined\" class=\"days-box row text-center bg-white\" style=\"visibility: visible;\">\n                                <div class=\"col-xs-3 day-first\" style=\"visibility: visible;\">\n                                    <p class=\"day\">{{prognozaDan1}}</p>\n                                    <hr class=\"hr-title hr-title-primary\">\n                                    <p><i class=\"wi {{prognozaDan1min.weather[0].icon}}\"></i></p>\n                                    <p><span class=\"d-min-temp\">{{prognozaDan1min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan1max.main.temp}}°</span></p>\n                                </div>\n                                <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                    <p class=\"day\">{{prognozaDan2}}</p>\n                                    <hr class=\"hr-title hr-title-primary\">\n                                    <p><i class=\"wi {{prognozaDan2min.weather[0].icon}}\"></i></p>\n                                    <p><span class=\"d-min-temp\">{{prognozaDan2min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan2max.main.temp}}°</span></p>\n                                </div>\n                                <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                    <p class=\"day\">{{prognozaDan3}}</p>\n                                    <hr class=\"hr-title hr-title-primary\">\n                                    <p><i class=\"wi {{prognozaDan3min.weather[0].icon}}\"></i></p>\n                                    <p><span class=\"d-min-temp\">{{prognozaDan3min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan3max.main.temp}}°</span></p>\n                                </div>\n                                <div class=\"col-xs-3\" style=\"visibility: visible;\">\n                                    <p class=\"day\">{{prognozaDan4}}</p>\n                                    <hr class=\"hr-title hr-title-primary\">\n                                    <p><i class=\"wi {{prognozaDan4min.weather[0].icon}}\"></i></p>\n                                    <p><span class=\"d-min-temp\">{{prognozaDan4min.main.temp}}°</span> / <span class=\"d-max-temp\">{{prognozaDan4max.main.temp}}°</span></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n</div>\n\n\n\n\n\n        \n        </div>\n </div>\n\n\n\n\n  \n    <!--  <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">-->\n\n\n\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 779:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n<html>\n\n<head>\n\t<script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n\t defer>\n\n\t</script>\n\t<meta name=\"author\" content=\"HighFive\" />\n\t<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n\n\t<link rel=\"stylesheet\" href=\"css/main.css\">\n\n\t<link rel=\"stylesheet\" href=\"css/homeStyle.css\">\n\t<link rel=\"stylesheet\" href=\"css/flag-icon.css\">\n</head>\n\n<body (scroll)=\"onScroll($event)\" class=\"bb\">\n\t<!-- SRPSKI -->\n\n\t<div class=\"skw-pages hidden-xs hidden-sm\">\n\n\t\t<div class=\"skw-page skw-page-1 active\">\n\t\t\t<div class=\"skw-page__half skw-page__half--left hidden-xs hidden-sm\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"skw-page__half skw-page__half--right\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\">\n\t\t\t\t\t\t<nav class=\"navbar navbar-default\">\n\t\t\t\t\t\t\t<div class=\"container-fluid\">\n\n\t\t\t\t\t\t\t\t<ul class=\"nav navbar-nav\">\n\t\t\t\t\t\t\t\t\t<li class=\"active\"><a class=\"one\">{{selectedLang[3][\"Home\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<li><a class=\"three\">{{selectedLang[5][\"Servisi\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li><a class=\"four\">{{selectedLang[6][\"O nama\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li><a class=\"five\">{{selectedLang[7][\"Kontakt\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li routerLink=\"/login\"><a>{{selectedLang[2][\"Prijavi se!\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span> </a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('srb')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-rs\"></span> </a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li *ngIf=\"lang==undefined\" class=\"\" style=\"cursor:pointer\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span></a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t<div class=\"about\">\n\t\t\t\t\t\t\t<p class=\"skw-page__description pgP\">{{selectedLang[0][\"Dobro dosli na\"]}}</p>\n\t\t\t\t\t\t\t<h1 class=\"deepshadow pgH\">PlanTech</h1>\n\t\t\t\t\t\t\t<p class=\"skw-page__description pgP2\">{{selectedLang[1][\"Pridruzite nam se i pocnite organizaciju vasih imanja\"]}}</p>\n\t\t\t\t\t\t\t<a class=\"btn btn-highFive btn-lg\" routerLink=\"/login\">{{selectedLang[2][\"Prijavi se!\"]}}</a></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"skw-page skw-page-2\">\n\t\t\t<div class=\"skw-page__half skw-page__half--right\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"skw-page__half skw-page__half--left\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\">\n\t\t\t\t\t\t<nav class=\"navbar navbar-default\">\n\t\t\t\t\t\t\t<div class=\"container-fluid\">\n\n\t\t\t\t\t\t\t\t<ul class=\"nav navbar-nav\">\n\t\t\t\t\t\t\t\t\t<li><a class=\"one\">{{selectedLang[3][\"Home\"]}}</a></li>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<li class=\"active\"><a class=\"three\">{{selectedLang[5][\"Servisi\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li><a class=\"four\">{{selectedLang[6][\"O nama\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li><a class=\"five\">{{selectedLang[7][\"Kontakt\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li routerLink=\"/login\"><a>{{selectedLang[2][\"Prijavi se!\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span> </a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('srb')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-rs\"></span> </a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li *ngIf=\"lang==undefined\" class=\"\" style=\"cursor:pointer\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span></a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</nav>\n\n\t\t\t\t\t\t<p class=\"skw-page__description\">{{selectedLang[8][\"Opis\"]}}\n\t\t\t\t\t\t{{selectedLang[9][\"Opis2\"]}}</p>\n\n\t\t\t\t\n\t\t\t\t\t\t<div class=\"col-md-4 col-sm-5 col-xs-5\">\n\t\t\t\t\t\t\t<div class=\"g-content {{hideS}}\">\n\t\t\t\t\t\t\t\t<ul class='circle-container'>\n\t\t\t\t\t\t\t\t\t<li data-id=\"0\" class=\"active\">\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-mobile\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"1\">\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-rocket\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"2\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-map-marker\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"3\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-line-chart\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"4\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-sun-o\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"5\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-paper-plane\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"6\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-search-plus\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"7\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-android\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"g-content {{hideE}}\">\n\t\t\t\t\t\t\t\t<ul class='circle-containerEng'>\n\t\t\t\t\t\t\t\t\t<li data-id=\"0\" class=\"active\">\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-mobile\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"9\">\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-rocket\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"2\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-map-marker\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"3\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-line-chart\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"4\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-sun-o\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"5\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-paper-plane\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"6\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-search-plus\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-id=\"7\">\n\n\t\t\t\t\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-android\"></i>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"skw-page skw-page-3\">\n\t\t\t<div class=\"skw-page__half skw-page__half--right\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\">\n\t\t\t\t\t\t<nav class=\"navbar navbar-default\">\n\t\t\t\t\t\t\t<div class=\"container-fluid\">\n\n\t\t\t\t\t\t\t\t<ul class=\"nav navbar-nav\">\n\t\t\t\t\t\t\t\t\t<li><a class=\"one\">{{selectedLang[3][\"Home\"]}}</a></li>\n\t\n\t\t\t\t\t\t\t\t\t<li><a class=\"three\">{{selectedLang[5][\"Servisi\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li class=\"active\"><a class=\"four\">{{selectedLang[6][\"O nama\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li><a class=\"five\">{{selectedLang[7][\"Kontakt\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li routerLink=\"/login\"><a>{{selectedLang[2][\"Prijavi se!\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span> </a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('srb')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-rs\"></span> </a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li *ngIf=\"lang==undefined\" class=\"\" style=\"cursor:pointer\">\n\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span></a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t\t<div class=\"carousel slide\" data-ride=\"carousel\" id=\"quote-carousel\">\n\t\t\t\t\t\t\t\t<ol class=\"carousel-indicators\">\n\t\t\t\t\t\t\t\t\t<li data-target=\"#quote-carousel\" data-slide-to=\"0\"><img class=\"img-responsive\" src=\"img/6.jpg\" alt=\"\">\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-target=\"#quote-carousel\" data-slide-to=\"1\"><img class=\"img-responsive\" src=\"img/3.jpg\" alt=\"\">\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-target=\"#quote-carousel\" data-slide-to=\"2\"><img class=\"img-responsive\" src=\"img/5.jpg\" alt=\"\">\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-target=\"#quote-carousel\" data-slide-to=\"3\" class=\"active\"><img class=\"img-responsive\" src=\"img/2.jpg\" alt=\"\">\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li data-target=\"#quote-carousel\" data-slide-to=\"4\"><img class=\"img-responsive\" src=\"img/7.png\" alt=\"\">\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t<!-- Carousel Slides / Quotes -->\n\t\t\t\t\t\t\t\t<div class=\"carousel-inner text-center\">\n\t\t\t\t\t\t\t\t\t<!-- Quote 1 -->\n\t\t\t\t\t\t\t\t\t<div class=\"item \">\n\t\t\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-8 col-sm-offset-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2>Bojan Đokić</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Završio prvu Prvu kragujevačku gimnaziju, trenutno na cetvrtoj godini informatike Prirodno-matematičkog fakulteta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tu Kragujevcu. Poznaje dobro web programiranje, objektno orijentisano programiranje, relacione baze podataka\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti IOT. Iz oblasti web programirnaja ima iskustva.</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>bojan.djokic92@gmail.com</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!-- Quote 2 -->\n\t\t\t\t\t\t\t\t\t<div class=\"item\">\n\t\t\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-8 col-sm-offset-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2>Đorđe Mitrović</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Rođen u Smederevskoj Palanci. Gimnaziju\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tu Velikoj Plani, informatički smer, upisuje 2010. i završava sa odličnim uspehom 2014. Obrazovanje nastavlja\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tna Prirodno-matematičkom fakultetu u Kragujevcu gde je trenutno na trećoj godini. Oblasti interesovanja uključuju\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tobjektno orijentisano programiranje, web programiranje, inteligentne sisteme i relacione baze podataka</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>mitrovicdjordje076@gmail.com</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!-- Quote 3 -->\n\t\t\t\t\t\t\t\t\t<div class=\"item\">\n\t\t\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-8 col-sm-offset-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2>Đorđe Mitrović</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Rođen u Kragujevcu, završio Prvu kragujevačku gimnaziju. Trenutno student informatike na Prirodno matematičkom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfakultetu u Kragujevcu.</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>djole_m_993@live.com</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!-- Quote 43 -->\n\t\t\t\t\t\t\t\t\t<div class=\"item active\">\n\t\t\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-8 col-sm-offset-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2>Jovan Janićijević</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Bivši učenik SM odeljenja Prve kragujevačke gimnazije. Sada uspesan student Prirodno-matematičkog fakulteta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tu Kragujevcu.\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>jovansom95@gmail.com</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!-- Quote 5 -->\n\t\t\t\t\t\t\t\t\t<div class=\"item\">\n\t\t\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-8 col-sm-offset-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2>Jovana Tomović</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Rodjena u Kragujevcu. Zavrsila Drugu kragujevačku gimnaziju sa odličnim uspehom. Sada student treće godine informatike\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrirodno-matematičkog fakulteta u Kragujevcu.</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>jovana.tomovic195@gmail.com</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<!-- Bottom Carousel Indicators -->\n\n\n\t\t\t\t\t\t\t\t<!-- Carousel Buttons Next/Prev -->\n\t\t\t\t\t\t\t\t<a data-slide=\"prev\" href=\"#quote-carousel\" class=\"left carousel-control\"><i class=\"fa fa-chevron-left\"></i></a>\n\t\t\t\t\t\t\t\t<a data-slide=\"next\" href=\"#quote-carousel\" class=\"right carousel-control\"><i class=\"fa fa-chevron-right\"></i></a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"skw-page__half skw-page__half--left\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"skw-page skw-page-4\">\n\t\t\t<div class=\"skw-page__half skw-page__half--right\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"skw-page__half skw-page__half--left\">\n\t\t\t\t<div class=\"skw-page__skewed\">\n\t\t\t\t\t<div class=\"skw-page__content\">\n\t\t\t\t\t\t<div class=\"container-fluid\">\n\t\t\t\t\t\t\t<nav class=\"navbar navbar-default\">\n\t\t\t\t\t\t\t\t<div class=\"container-fluid\">\n\n\t\t\t\t\t\t\t\t\t<ul class=\"nav navbar-nav\">\n\t\t\t\t\t\t\t\t\t\t<li><a class=\"one\">{{selectedLang[3][\"Home\"]}}</a></li>\n\t\t\t\n\t\t\t\t\t\t\t\t\t\t<li><a class=\"three\">{{selectedLang[5][\"Servisi\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t\t<li><a class=\"four\">{{selectedLang[6][\"O nama\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t\t<li class=\"active\"><a class=\"five\">{{selectedLang[7][\"Kontakt\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t\t<li routerLink=\"/login\"><a>{{selectedLang[2][\"Prijavi se!\"]}}</a></li>\n\t\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span> </a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('srb')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-rs\"></span> </a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li *ngIf=\"lang==undefined\" class=\"\" style=\"cursor:pointer\">\n\t\t\t\t\t\t\t\t\t\t\t<a (click)=\"setLang('eng')\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span></a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<p class=\"skw-page__description\">{{selectedLang[13][\"Pronadjite nas na svim aktuelnim drustvenim mrezama\"]}}</p>\n\t\t\t\t\t\t<p class=\"skw-page__description\" style=\"margin-top:0px\">{{selectedLang[14][\"Ili nam pustite poruku klikom na pismo u sredini\"]}}</p>\n\t\t\t\t\t\t<div class=\"container-fluid\">\n\t\t\t\t\t\t\t<link rel=\"stylesheet\" href=\"http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/font-awesome.min.css\" />\n\t\t\t\t\t\t\t<div id=\"contact\" class=\"not-visible\">\n\t\t\t\t\t\t\t\t<div class=\"form-group\"><button id=\"backToSocial\" type=\"submit\" class=\"btn backToPrikaz\">{{selectedLang[15][\"Vrati me na socijalne mreze\"]}}</button>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[17][\"Ime\"]}}</label><input name=\"ime\" class=\"form-control required\" data-placement=\"top\" data-trigger=\"manual\"\n\t\t\t\t\t\t\t\t\t data-content=\"Must be at least 3 characters long, and must only contain letters.\" type=\"text\" [(ngModel)]=\"ime\"></div>\n\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[18][\"Naslov\"]}}</label><input name=\"naslov\" class=\"form-control required\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\" type=\"text\"\n\t\t\t\t\t\t\t\t\t [(ngModel)]=\"naslov\"></div>\n\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[19][\"Vas E-Mail\"]}}</label><input name=\"email\" class=\"form-control email\" data-placement=\"top\"\n\t\t\t\t\t\t\t\t\t data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\" type=\"text\" [(ngModel)]=\"email\"></div>\n\t\t\t\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[20][\"Poruka\"]}}</label><textarea name=\"poruka\" class=\"form-control\" data-placement=\"top\" data-trigger=\"manual\"\n\t\t\t\t\t\t\t\t\t [(ngModel)]=\"poruka\"></textarea></div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\"><button (click)=\"posalji()\" type=\"submit\" class=\"btn btn-highFive\">{{selectedLang[21][\"Pošalji\"]}}</button>\n\t\t\t\t\t\t\t\t\t<p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div *ngIf=\"nisuPopunjeniPodaci\" class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<div role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n\t\t\t\t\t\t\t\t\t\t<button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>\t\t\t\t\t\t\t\t\t\tPopunite sva polja.\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div id=\"social\" class=\"social-container-wrap visible\">\n\n\t\t\t\t\t\t\t\t<br /><br /><br />\n\t\t\t\t\t\t\t\t<div class=\"social-container\">\n\t\t\t\t\t\t\t\t\t<a class=\"twitter\" href=\"https://twitter.com/HighFiv85246990\"><i class=\"fa fa-twitter\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"facebook\" href=\"https://www.facebook.com/HighFiveKg/\"><i class=\"fa fa-facebook\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"googleplus\" href=\"https://plus.google.com/u/0/111019540183889273406\"><i class=\"fa fa-google-plus\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"pinterest\" href=\"https://www.youtube.com/channel/UCYdTv40VKl8q2vi4BTeWGMg\"><i class=\"fa fa fa-youtube\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"envelope\"><i class=\"fa fa-envelope\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"dribbble\" href=\"https://dribbble.com/session/new\"><i class=\"fa fa-dribbble\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"instagram\" href=\"https://www.instagram.com/plantechhf/?hl=sr\"><i class=\"fa fa-instagram\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"linkedin\" href=\"https://www.linkedin.com/in/high-five-94177a143/?trk=uno-choose-ge-no-intent&dl=no\"><i class=\"fa fa-linkedin\"></i></a>\n\t\t\t\t\t\t\t\t\t<a class=\"instagram\" href=\"https://www.flickr.com/people/154905244@N02/?rb=1\"><i class=\"fa fa-flickr\"></i></a>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--/.container-->\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"hidden-lg hidden-md\">\n\n\n\t\t<div id=\"navbar-main\">\n\t\t\t<!-- Fixed navbar -->\n\t\t\t<div class=\"navbar navbar-inverse navbar-fixed-top\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<div class=\"navbar-header\">\n\n\n\t\t\t\t\t\t<a (click)=\"setLang('eng')\" *ngIf=\"lang=='srb'\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span> </a>\n\n\n\t\t\t\t\t\t<a (click)=\"setLang('srb')\" *ngIf=\"lang=='eng'\" class=\"flagLink\"><span class=\"flag-icon flag-icon-rs\"></span> </a>\n\n\n\t\t\t\t\t\t<a (click)=\"setLang('eng')\" *ngIf=\"lang==undefined\" class=\"flagLink\"><span class=\"flag-icon flag-icon-gb\"></span></a>\n\n\t\t\t\t\t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n            <span class=\"fa fa-bars\" ></span>\n          </button>\n\t\t\t\t\t\t<a class=\"navbar-brand hidden-xs hidden-sm\" href=\"#home\"><span class=\"fa fa-bars\" ></span></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"navbar-collapse collapse\">\n\t\t\t\t\t\t<ul class=\"nav navbar-nav\">\n\n\n\n\n\n\t\t\t\t\t\t\t<li><a href=\"#headerwrap\" class=\"smoothScroll\">{{selectedLang[3][\"Home\"]}}</a></li>\n\t\t\t\t\t\t\t<li> <a href=\"#about\" class=\"smoothScroll\">{{selectedLang[4][\"Aplikacija\"]}}</a></li>\n\t\t\t\t\t\t\t<li> <a href=\"#greywrap\" class=\"smoothScroll\">{{selectedLang[5][\"Servisi\"]}}</a></li>\n\t\t\t\t\t\t\t<li> <a href=\"#team\" class=\"smoothScroll\">{{selectedLang[6][\"O nama\"]}}</a></li>\n\t\t\t\t\t\t\t<li> <a href=\"#con2\" class=\"smoothScroll\">{{selectedLang[7][\"Kontakt\"]}}</a></li>\n\t\t\t\t\t\t\t<li> <a routerLink=\"/login-s\" class=\"smoothScroll\">{{selectedLang[2][\"Prijavi se!\"]}}</a></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--/.nav-collapse -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\n\n\t\t<!-- ==== HEADERWRAP ==== -->\n\t\t<div id=\"headerwrap\" name=\"home\">\n\t\t\t<header class=\"clearfix\">\n\n\t\t\t\t<p>{{selectedLang[0][\"Dobro dosli na\"]}} PlanTech</p>\n\t\t\t\t<p>{{selectedLang[1][\"Pridruzite nam se i pocnite organizaciju vasih imanja\"]}}</p>\n\t\t\t</header>\n\t\t</div>\n\t\t<!-- /headerwrap -->\n\t\t<!-- ==== ABOUT ==== -->\n\t\t<div class=\"container\" id=\"about\" name=\"about\">\n\t\t\t<div class=\"row white\">\n\t\t\t\t<br>\n\t\t\t\t<h1 class=\"centered\">{{selectedLang[23][\"O aplikaciji\"]}}</h1>\n\t\t\t\t<hr>\n\n\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t<p>{{selectedLang[8][\"Opis\"]}}</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-6 -->\n\n\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t<p>{{selectedLang[9][\"Opis2\"]}}. {{selectedLang[10][\"Opis3\"]}}</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-6 -->\n\t\t\t</div>\n\t\t\t<!-- row -->\n\t\t</div>\n\t\t<!-- container -->\n\t\t<!-- ==== SECTION DIVIDER1 -->\n\t\t<section class=\"section-divider textdivider divider1\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<h1>{{selectedLang[24][\"Dizajnirano za brzo i lako korišćenje\"]}}</h1>\n\t\t\t\t<hr>\n\t\t\t</div>\n\t\t\t<!-- container -->\n\t\t</section>\n\t\t<!-- section -->\n\t\t<!-- ==== GREYWRAP ==== -->\n\t\t<div id=\"greywrap\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-mobile\"></span>\n\t\t\t\t\t<h2>{{selectedLang[25][\"Dostupno na svakom uredjaju\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-rocket\"></span>\n\t\t\t\t\t<h2>{{selectedLang[26][\"Brzo i lako korišćenje\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-map-marker\"></span>\n\t\t\t\t\t<h2>{{selectedLang[27][\"Lak pregled plantaža na mapi\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-line-chart\"></span>\n\t\t\t\t\t<h2>{{selectedLang[28][\"Statistika svih plantaža\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-sun-o\"></span>\n\t\t\t\t\t<h2>{{selectedLang[29][\"Vremenska prognoza\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-paper-plane\"></span>\n\t\t\t\t\t<h2>{{selectedLang[30][\"Kontakt sa svim radnicima\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-search-plus\"></span>\n\t\t\t\t\t<h2>{{selectedLang[31][\"Brza pretraga plantaža i radnika\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\t\t\t\t<div class=\"col-lg-4 callout\">\n\t\t\t\t\t<span class=\"fa fa-android\"></span>\n\t\t\t\t\t<h2>{{selectedLang[32][\"Pametan expertski sistem\"]}}</h2>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-4 -->\n\t\t\t</div>\n\t\t\t<!-- row -->\n\t\t</div>\n\t\t<!-- greywrap -->\n\n\n\n\n\n\n\n\t\t<!-- ==== SECTION DIVIDER2 -->\n\t\t<section class=\"section-divider textdivider divider2\">\n\t\t\t<div class=\"container\">\n\t\t\t</div>\n\t\t\t<!-- container -->\n\t\t</section>\n\t\t<!-- section -->\n\n\t\t<!-- ==== TEAM MEMBERS ==== -->\n\t\t<div class=\"container\" id=\"team\" name=\"team\">\n\t\t\t<br>\n\t\t\t<div class=\"row white centered\">\n\t\t\t\t<h1 class=\"centered\">{{selectedLang[33][\"Upoznajte naš tim\"]}}</h1>\n\t\t\t\t<hr>\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\t<div class=\"col-lg-3 centered\">\n\t\t\t\t\t<img class=\"img img-circle\" src=\"img/4.jpg\" height=\"120px\" width=\"120px\" alt=\"\">\n\t\t\t\t\t<br>\n\t\t\t\t\t<h4><b>Bojan Djokic</b></h4>\n\n\t\t\t\t\t<a class=\"fa fa-envelope\"> bojan.djokic92@gmail.com</a>\n\t\t\t\t\t<p>Zavrsio prvu Prvu kragujevacku gimnaziju, trenutno na cetvrtoj godini informatike Prirodno-matematickog fakulteta u\n\t\t\t\t\t\tKragujevcu. Poznaje dobro web programiranje, objektno orijentisano programiranje, relacione baze podataka i IOT. Iz\n\t\t\t\t\t\toblasti web programirnaja ima iskustva.</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-3 -->\n\n\t\t\t\t<div class=\"col-lg-3 centered\">\n\t\t\t\t\t<img class=\"img img-circle\" src=\"img/3.jpg\" height=\"120px\" width=\"120px\" alt=\"\">\n\t\t\t\t\t<br>\n\t\t\t\t\t<h4><b>Djorde Mitrovic</b></h4>\n\n\t\t\t\t\t<a class=\"fa fa-envelope\"> mitrovicdjordje076@gmail.com</a>\n\t\t\t\t\t<p>Rođen u Smederevskoj Palanci. Osnovnu školu \"Vuk Karadžić\" završio je u Smederevskoj Palanci uz pohvale. Gimnaziju u\n\t\t\t\t\t\tVelikoj Plani, informatički smer, upisuje 2010. i završava sa odličnim uspehom 2014. Obrazovanje nastavlja na Prirodno-matematičkom\n\t\t\t\t\t\tfakultetu u Kragujevcu gde je trenutno na trećoj godini. Oblasti interesovanja uključuju objektno orijentisano programiranje,\n\t\t\t\t\t\tweb programiranje, inteligentne sisteme i relacione baze podataka</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-3 -->\n\n\t\t\t\t<div class=\"col-lg-3 centered\">\n\t\t\t\t\t<img class=\"img img-circle\" src=\"img/5.jpg\" height=\"120px\" width=\"120px\" alt=\"\">\n\t\t\t\t\t<br>\n\t\t\t\t\t<h4><b>Djordje Mitrovic</b></h4>\n\n\t\t\t\t\t<a href=\"#\" class=\"fa fa-envelope\"> djole_m_993@live.com</a>\n\t\t\t\t\t<p>Rodjen u Kragujevcu, zavrsio Prvu kragujevacku gimnaziju. Trenutno student informatike na Prirodno matematickom fakultetu\n\t\t\t\t\t\tu Kragujevcu.</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-3 -->\n\n\t\t\t\t<div class=\"col-lg-3 centered\">\n\t\t\t\t\t<img class=\"img img-circle\" src=\"img/2.jpg\" height=\"120px\" width=\"120px\" alt=\"\">\n\t\t\t\t\t<br>\n\t\t\t\t\t<h4><b>Jovan Janicijevic</b></h4>\n\t\t\t\t\t<a href=\"#\" class=\"fa fa-envelope\"></a>\n\t\t\t\t\t<a href=\"#\" class=\"fa fa-facebook\"> jovansom95@gmail.com</a>\n\n\t\t\t\t\t<p>Bivsi ucenik SM odeljenja Prve kragujevacke gimnazije. Sada uspesan student Prirodno-matematickog fakulteta u Kragujevcu.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-3 -->\n\t\t\t\t<div class=\"col-lg-3 centered\">\n\t\t\t\t\t<img class=\"img img-circle\" src=\"img/7.png\" height=\"120px\" width=\"120px\" alt=\"\">\n\t\t\t\t\t<br>\n\t\t\t\t\t<h4><b>Jovana Tomovic</b></h4>\n\n\t\t\t\t\t<a href=\"#\" class=\"fa fa-envelope\"> jovana.tomovic195@gmail.com</a>\n\t\t\t\t\t<p>Rodjena u Kragujevcu. Zavrsila Drugu kragujevačku gimnaziju sa odličnim uspehom. Sada student treće godine informatike\n\t\t\t\t\t\tPrirodno-matematičkog fakulteta u Kragujevcu.</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- col-lg-3 -->\n\n\t\t\t</div>\n\t\t\t<!-- row -->\n\t\t</div>\n\t\t<!-- container -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t<div class=\"container\" id=\"contact\" name=\"contact\">\n\t\t\t<div class=\"col-md-12\" id=\"con2\">\n\t\t\t\t<br>\n\t\t\t\t<h1 class=\"centered\">{{selectedLang[7][\"Kontakt\"]}}</h1>\n\t\t\t\t<hr>\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\t<div class=\"col-md-6\"></div>\n\t\t\t\t<div class=\"col-md-4\" style=\"padding-left: 15%;\">\n\n\n\t\t\t\t\t<div class=\"social-container small-social-container\">\n\t\t\t\t\t\t<a class=\"twitter\" href=\"https://twitter.com/HighFiv85246990\"><i class=\"fa fa-twitter\"></i></a>\n\t\t\t\t\t\t<a class=\"facebook\" href=\"https://www.facebook.com/HighFiveKg/\"><i class=\"fa fa-facebook\"></i></a>\n\t\t\t\t\t\t<a class=\"googleplus\" href=\"https://plus.google.com/u/0/111019540183889273406\"><i class=\"fa fa-google-plus\"></i></a>\n\t\t\t\t\t\t<a class=\"pinterest\" href=\"https://www.youtube.com/channel/UCYdTv40VKl8q2vi4BTeWGMg\"><i class=\"fa fa fa-youtube\"></i></a>\n\t\t\t\t\t\t<a class=\"envelope\"><i class=\"fa fa-envelope\"></i></a>\n\t\t\t\t\t\t<a class=\"dribbble\" href=\"https://dribbble.com/session/new\"><i class=\"fa fa-dribbble\"></i></a>\n\t\t\t\t\t\t<a class=\"instagram\" href=\"https://www.instagram.com/plantechhf/?hl=sr\"><i class=\"fa fa-instagram\"></i></a>\n\t\t\t\t\t\t<a class=\"linkedin\" href=\"https://www.linkedin.com/in/high-five-94177a143/?trk=uno-choose-ge-no-intent&dl=no\"><i class=\"fa fa-linkedin\"></i></a>\n\t\t\t\t\t\t<a class=\"instagram\" href=\"https://www.flickr.com/people/154905244@N02/?rb=1\"><i class=\"fa fa-flickr\"></i></a>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-2\"></div>\n\t\t\t\t<!-- col -->\n\n\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t<h3>{{selectedLang[7][\"Kontakt\"]}}</h3>\n\n\n\n\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[17][\"Ime\"]}}</label><input name=\"ime\" class=\"form-control required\" data-placement=\"top\" data-trigger=\"manual\"\n\t\t\t\t\t\t data-content=\"Must be at least 3 characters long, and must only contain letters.\" type=\"text\" [(ngModel)]=\"ime\"></div>\n\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[18][\"Naslov\"]}}</label><input name=\"naslov\" class=\"form-control required\" data-placement=\"top\"\n\t\t\t\t\t\t data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\" type=\"text\"\n\t\t\t\t\t\t [(ngModel)]=\"naslov\"></div>\n\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[19][\"Vas E-Mail\"]}}</label><input name=\"email\" class=\"form-control email\" data-placement=\"top\"\n\t\t\t\t\t\t data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\" type=\"text\" [(ngModel)]=\"email\"></div>\n\t\t\t\t\t<div class=\"form-group\"><label>{{selectedLang[20][\"Poruka\"]}}</label><textarea name=\"poruka\" class=\"form-control\" data-placement=\"top\" data-trigger=\"manual\"\n\t\t\t\t\t\t [(ngModel)]=\"poruka\"></textarea></div>\n\n\t\t\t\t\t<div class=\"form-group\"><button (click)=\"posalji()\" type=\"submit\" class=\"btn btn-highFive\">{{selectedLang[21][\"Pošalji\"]}}</button>\n\t\t\t\t\t\t<p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t<!-- col -->\n\n\n\n\t\t\t</div>\n\t\t\t<!-- row -->\n\n\t\t</div>\n\t\t<!-- container -->\n\n\t\t<div id=\"footerwrap\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<h4>© 2017 HighFive</h4>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 780:
/***/ (function(module, exports) {

module.exports = "<image-upload *ngIf=\"lang=='srb'\"\n  [max] ='200'\n  [url]=\"'uploads/upload'\"\n  [headers]=\"[\n    {name: 'image'}\n  ]\"\n  [preview]=\"false\"\n  [buttonCaption]=\"'Izaberite sliku!'\"\n  [dropBoxMessage]=\"'Prevucite slike ovde!'\"\n  (onFileUploadFinish)=\"imageUploaded($event)\"\n \n></image-upload>\n<image-upload *ngIf=\"lang=='eng'\"\n  [max] ='200'\n  [url]=\"'uploads/upload'\"\n  [headers]=\"[\n    {name: 'image'}\n  ]\"\n  [preview]=\"false\"\n  [buttonCaption]=\"'Choose picture!'\"\n  [dropBoxMessage]=\"'Drag picture here!'\"\n  (onFileUploadFinish)=\"imageUploaded($event)\"\n \n></image-upload>"

/***/ }),

/***/ 781:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\n</head>\n\n<body>\n\n    <div id=\"wrapper\" *ngIf=\"lang=='srb'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\">\n\n            <app-widgets></app-widgets>\n\n\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 no-left-padding\">\n                    <!-- Naslov -->\n                    <div class=\"col-md-12\">\n                        <div class=\"page-title\">\n                            <h2><span class=\"fa fa-inbox\"></span> Inbox <small>({{brojPoruka}})</small></h2>\n                        </div>\n\n                    </div>\n                    <!-- END  Naslov -->\n                    <div class=\"col-md-12 no-left-padding\">\n                        <!-- Meni za poruke -->\n                        <div class=\"col-md-2 no-left-padding\">\n\n                            <a routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\"><span class=\"fa fa-edit\"></span> Nova poruka</a>\n\n                            <div class=\"block\" style=\"margin-top: 5px\">\n                                <div class=\"list-group border-bottom\">\n                                    <a routerLink=\"/inbox\" class=\"list-group-item active\"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\">{{brojPoruka}}</span></a>\n                                    <a routerLink=\"/sent\" class=\"list-group-item\"><span class=\"fa fa-rocket\"></span>  Poslate</a>\n                                </div>\n                            </div>\n                            \n                        </div>\n                        <!-- END Meni za poruke -->\n\n                        <!-- INBoX -->\n                        <div class=\"col-md-10\">\n                            <div class=\"mail\">\n                                <div *ngIf=\"primljenePoruke.length>0\">\n                                    <div *ngFor=\"let poruka of primljenePoruke  | paginate: { itemsPerPage: 7, currentPage: p }\" [ngClass]=\"{'mail-item':true, 'mail-unread':poruka.read,'mail-info':true}\"\n                                        (click)=\"goToMessage(poruka)\">\n                                        <div class=\"mail-user\">{{poruka.username}}</div>\n                                        <div class=\"mail-text\">{{poruka.text}}</div>\n                                        <!-- <a (click)=\"goToMessage(poruka)\" class=\"mail-text\">{{poruka.text}}</a>-->\n                                        <div class=\"mail-date\">{{ poruka.time | date:'medium' }}</div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"primljenePoruke.length==0\">\n                                    <h2>Nemate primljenih poruka.</h2>\n                                </div>\n                            </div>\n\n                            <div class=\"panel-footer\" style=\"height: 100%\">\n                                <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeća\" (pageChange)=\"p = $event\"></pagination-controls>\n                            </div>\n\n\n                        </div>\n                    </div>\n                    <!-- ENDINBoX  -->\n                </div>\n\n            </div>\n\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                ovde ide neki content za guesta\n            </div>\n        </div>\n    </div>\n\n    <div id=\"wrapper\" *ngIf=\"lang=='eng'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\">\n\n            <app-widgets></app-widgets>\n\n\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 no-left-padding\">\n                    <!-- Naslov -->\n                    <div class=\"col-md-12\">\n                        <div class=\"page-title\">\n                            <h2><span class=\"fa fa-inbox\"></span> Inbox <small>({{brojPoruka}})</small></h2>\n                        </div>\n\n                    </div>\n                    <!-- END  Naslov -->\n                    <div class=\"col-md-12 no-left-padding\">\n                        <!-- Meni za poruke -->\n                        <div class=\"col-md-2 no-left-padding\">\n\n                            <a routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\"><span class=\"fa fa-edit\"></span> New message</a>\n\n                            <div class=\"block\" style=\"margin-top: 5px\">\n                                <div class=\"list-group border-bottom\">\n                                    <a routerLink=\"/inbox\" class=\"list-group-item active\"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\">{{brojPoruka}}</span></a>\n                                    <a routerLink=\"/sent\" class=\"list-group-item\"><span class=\"fa fa-rocket\"></span>  Sent messages</a>\n                                </div>\n                            </div>\n                           \n                        </div>\n                        <!-- END Meni za poruke -->\n\n                        <!-- INBoX -->\n                        <div class=\"col-md-10\">\n                            <div class=\"mail\">\n                                <div *ngIf=\"primljenePoruke.length>0\">\n                                    <div *ngFor=\"let poruka of primljenePoruke  | paginate: { itemsPerPage: 7, currentPage: p }\" [ngClass]=\"{'mail-item':true, 'mail-unread':poruka.read,'mail-info':true}\"\n                                        (click)=\"goToMessage(poruka)\">\n                                        <div class=\"mail-user\">{{poruka.username}}</div>\n                                        <div class=\"mail-text\">{{poruka.text}}</div>\n                                        <!-- <a (click)=\"goToMessage(poruka)\" class=\"mail-text\">{{poruka.text}}</a>-->\n                                        <div class=\"mail-date\">{{ poruka.time | date:'medium' }}</div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"primljenePoruke.length==0\">\n                                    <h2>No messages</h2>\n                                </div>\n                            </div>\n\n                            <div class=\"panel-footer\" style=\"height: 100%\">\n                                <pagination-controls style='cursor: pointer;' previousLabel=\"Previous\" nextLabel=\"Next\" (pageChange)=\"p = $event\"></pagination-controls>\n                            </div>\n\n\n                        </div>\n                    </div>\n                    <!-- ENDINBoX  -->\n                </div>\n\n            </div>\n\n            <!-- CONTACT MODAL -->\n            <div id=\"ContactModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Contact us</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form class=\"form-horizontal col-sm-12\">\n                                <div class=\"form-group\"><label>Name</label><input class=\"form-control required\" placeholder=\"Your name\" data-placement=\"top\"\n                                        data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><label>Message</label><textarea class=\"form-control\" placeholder=\"Your message...\" data-placement=\"top\"\n                                        data-trigger=\"manual\"></textarea></div>\n                                <div class=\"form-group\"><label>E-Mail</label><input class=\"form-control email\" placeholder=\"email@you.com (So we can reply)\"\n                                        data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><button type=\"submit\" class=\"btn btn-send pull-right\">Send</button>\n                                    <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Exit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END CONTACT MODAL -->\n\n            <!-- ABOUT MODAL -->\n            <div id=\"AboutModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">About us</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Uz pomoć mladog i entuzijaztičnog tima sastavljenog od dva Đoleta, jednog Jovana,jedne Jovane\n                                i jednog Bojana kreirana je aplikacija koja ce zadovoljiti sve vase potrebe vezane za poljoprivredu\n                            </p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END ABOUT MODAL -->\n            <!-- SETINGS MODAL -->\n            <div id=\"SettingsModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Podesavanja</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"panel panel-primary\">\n\n                                <div class=\"panel-body\">\n                                    <form action=\"#\" role=\"form\" class=\"form-horizontal\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Obavestenja putem email-a</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"1\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Uzmi moju lokaciju</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"0\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n\n                                        </div>\n\n\n\n\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END SETINGS MODAL -->\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                Guest content\n            </div>\n        </div>\n    </div>\n\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 782:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n<!--\nTo change this license header, choose License Headers in Project Properties.\nTo change this template file, choose Tools | Templates\nand open the template in the editor.\n-->\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"css/style.css\">\n\n\n</head>\n\n<body>\n    <div>{{datum}}</div>\n    <div class=\"container-fluid\" style=\"padding: 0 0 0 0\">\n        <div class=\"col-md-12\" style=\"padding: 0 0 0 0\">\n            <!-- Levi deo ekrana, klasa hiden sakriva za mobilne uredjaje  -->\n            <div class=\"col-md-9 hidden-sm hidden-xs\" style=\"margin-top: 5px;height:  100vh;padding: 0 0 0 0; \">\n                <!-- MAPA  -->\n                <weather-map id=\"world-map\" style=\"width: 100%; height:  100vh\"></weather-map>\n            </div>\n            <!-- Levi deo ekrana -->\n\n            <!-- desni deo za login i registraiju -->\n            <div class=\"col-md-3 pull-left-sm pull-left-md\" style=\"padding: 0 0 0 0\">\n                <div class=\"panel panel logPanel\" style=\"min-height: 100vh;max-height:100%\">\n                    <div role=\"tabpanel\">\n                        <!-- MENI  -->\n                        <ul class=\"nav nav-tabs nav-justified\" role=\"tablist\" style=\"margin-top: 0px\" *ngIf=\"activeLogin\">\n                            <li role=\"presentation\" class=\"active\"><a href=\"#tab1\" (click)=\"resetujL()\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"false\">Login</a></li>\n                            <li role=\"presentation\" class=\"\"><a href=\"#tab2\" (click)=\"resetujR()\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"true\">Registracija</a></li>\n                        </ul>\n                        <ul class=\"nav nav-tabs nav-justified\" role=\"tablist\" style=\"margin-top: 0px\" *ngIf=\"acitveReg\">\n                            <li role=\"presentation\"><a href=\"#tab1\" (click)=\"resetujL()\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"false\">Login</a></li>\n                            <li role=\"presentation\" class=\"active\"><a href=\"#tab2\" (click)=\"resetujR()\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"true\">Registracija</a></li>\n                        </ul>\n\n                        <ul class=\"nav nav-tabs nav-justified\" role=\"tablist\" style=\"margin-top: 0px\" *ngIf=\"forgotPass\">\n                            <li role=\"presentation\"><a href=\"#tab1\" (click)=\"resetujL()\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"false\">Login</a></li>\n                            <li role=\"presentation\"><a href=\"#tab2\" (click)=\"resetujR()\" role=\"tab\" data-toggle=\"tab\" aria-expanded=\"true\">Registracija</a></li>\n                        </ul>\n                        <div class=\"tab-content\" style=\"  padding-left: 10px;padding-right: 10px\">\n                            <!-- LOGIN  -->\n                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"tab1\">\n                                <div class=\"login-box animated fadeInDown\">\n                                    <h1 style=\"text-align: center;\">PlanTech</h1>\n\n                                    <div class=\"panel-heading logHeading\" style=\" \">\n                                        <div class=\"panel-title\" style=\"color:white\">Ulogujte se\n                                        </div>\n                                        <div class=\"forgotenPass\"> <a href=\"#tab3\" (click)=\"ForgotPass()\" role=\"tab\" data-toggle=\"tab\" style=\"color:white; \"\n                                                aria-expanded=\"false\">Zaboravili ste šifru? </a></div>\n                                    </div>\n                                    <!-- ALERT WRONG LOGIN  -->\n                                    <div *ngIf=\"pogresniPodaci\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" timeout:3200>\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span>\n                                    </button> Pogrešan username ili šifra\n                                    </div>\n\n\n                                    <!-- END ALERT WRONG LOGIN  -->\n\n                                    <div style=\"padding-bottom:30px; \" class=\"panel-body\">\n\n                                        <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n\n                                        <form id=\"loginform\" class=\"form-horizontal\" role=\"form\" method=\"post\">\n\n                                            <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                                <input [(ngModel)]=\"username\" id=\"login-username\" type=\"text\" class=\"form-control\" name=\"user12\" value=\"\" placeholder=\"username\"\n                                                    style=\"\">\n                                            </div>\n\n                                            <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\n                                                <input [(ngModel)]=\"password\" id=\"login-password\" type=\"password\" class=\"form-control\" name=\"pass12\" placeholder=\"šifra\">\n                                            </div>\n\n                                            <div style=\"margin-top:10px\" class=\"form-group\">\n                                                <!-- Button -->\n\n                                                <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                                    <button (click)=\"Login()\" id=\"btn-login\" class=\"btn btn logButton\" style=\"\" type=\"submit\">Loguj se  </button>\n\n\n                                                </div>\n                                            </div>\n\n\n                                            <div class=\"form-group\">\n                                                <div class=\"col-md-12 control\">\n                                                    <div class=\"logNewReg\" style=\" \">\n                                                        Nemate nalog!\n\n                                                        <a href=\"#tab2\" role=\"tab\" data-toggle=\"tab\" (click)=\"resetujR()\" aria-expanded=\"true\"> Registrujte se ovde</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n\n\n                                        <div class=\"login-footer\" style=\"margin-top: 15px\">\n                                            <div class=\"pull-left\">\n                                                &copy; 2017 HighFive\n                                            </div>\n                                            <div class=\"pull-right\">\n                                                <a href=\"#\">O nama</a> |\n\n                                                <a href=\"#\">Kontakt</a>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </div>\n                            <!-- LOGIN END -->\n                            <!-- REGISDTRACIJA-->\n                            <div role=\"tabpanel\" class=\"tab-pane \" id=\"tab2\">\n                                <div class=\"login-box animated fadeInDown\">\n                                    <h1 style=\"text-align: center;\">PlanTech</h1>\n\n                                    <div class=\"panel-heading logHeading\" style=\" \">\n                                        <div class=\"panel-title\" style=\"color:white\">Registracija\n                                        </div>\n\n                                    </div>\n                                    <div *ngIf=\"pogresniPodaciReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Korisnik sa takvim podacima vec postoji.\n                                    </div>\n                                    <div *ngIf=\"praznaPolja\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Sva polja moraju biti popunjena.\n                                    </div>\n\n                                    <div *ngIf=\"uspesnaRegistracija\" id=\"uspesnaReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Uspesno ste se registrovali. Sada mozete da se prijavite <a role=\"tab\" onclick=window.location.reload();>ovde</a>.\n                                    </div>\n                                    <div *ngIf=\"duplo\" id=\"uspesnaReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Korisnik sa takvim mailom vec postoji.Na mail su vam poslati Vasi podaci.\n                                    </div>\n\n                                    <div style=\"padding-bottom:30px; \" class=\"panel-body\">\n\n                                        <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n\n                                        <form id=\"loginform\" #userForm=\"ngForm\" class=\"form-horizontal\" role=\"form\" novalidate method=\"post\">\n\n                                            <div class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                                <input [(ngModel)]=\"imeReg\" id=\"reg-ime\" type=\"text\" #imeRegg=\"ngModel\" required pattern=\"[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}[\\s]{0,1}[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{0,1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}\"\n                                                    class=\"form-control\" name=\"user\" value=\"\" placeholder=\"Ime\" ngModel>\n                                            </div>\n                                            <div *ngIf=\"imeRegg.errors && imeRegg.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                                <div [hidden]=\"!imeRegg.errors.required&&!uspesno\">\n                                                    Unesite ime.\n                                                </div>\n                                                <div [hidden]=\"!imeRegg.errors.pattern\">\n                                                    Ime mora da počne velikim slovom.\n                                                </div>\n                                            </div>\n\n                                            <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                                <input [(ngModel)]=\"prezimeReg\" id=\"reg-prezime\" #prezimeRegg=\"ngModel\" required pattern=\"[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}[\\s]{0,1}[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{0,1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}\"\n                                                    type=\"text\" class=\"form-control\" name=\"prezime\" value=\"\" placeholder=\"Prezime\"\n                                                    ngModel>\n\n                                            </div>\n                                            <div *ngIf=\"prezimeRegg.errors && prezimeRegg.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                                <div [hidden]=\"!prezimeRegg.errors.required&&!uspesno\">\n                                                    Unesite prezime.\n                                                </div>\n                                                <div [hidden]=\"!prezimeRegg.errors.pattern\">\n                                                    Prezime nije validno.\n                                                </div>\n                                            </div>\n                                            <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n                                                <input [(ngModel)]=\"emailReg\" id=\"reg-email\" type=\"email\" #email=\"ngModel\" required pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$\"\n                                                    class=\"form-control\" name=\"email\" value=\"\" placeholder=\"email\" ngModel>\n                                            </div>\n                                            <div *ngIf=\"email.errors &&email.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                                <div [hidden]=\"!email.errors.required&&!uspesno\">\n                                                    Unesite e-mail.\n                                                </div>\n                                                <div [hidden]=\"!email.errors.pattern\">\n                                                    E-mail nije validan.\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\" style=\"margin-top: 25px\">\n                                                <label class=\"col-md-3 control-label\">Datum rodjenja</label>\n                                                <div class=\"col-md-9\">\n\n                                                    <ng2-datepicker [options]=\"calendarOptions\" [(ngModel)]=\"date\" name=\"date\"></ng2-datepicker>\n                                                </div>\n                                            </div>\n\n                                            <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                                <input [(ngModel)]=\"usernameReg\" #user=\"ngModel\" required minlength=\"4\" id=\"reg-username\" type=\"text\" class=\"form-control\"\n                                                    name=\"reg-username\" value=\"\" placeholder=\"username\" ngModel>\n                                            </div>\n                                            <div *ngIf=\"user.errors &&user.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                                <div [hidden]=\"!user.errors.required&&!uspesno\">\n                                                    Unesite username.\n                                                </div>\n                                                <div [hidden]=\"!user.errors.minlength\">\n                                                    Username mora imati minimum 5 karaktera.\n                                                </div>\n                                            </div>\n\n                                            <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\n                                                <input [(ngModel)]=\"passwordReg\" #pass=\"ngModel\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\" id=\"reg-password\"\n                                                    type=\"password\" class=\"form-control\" name=\"reg-pass\" placeholder=\"šifra\"\n                                                    ngModel>\n                                            </div>\n                                            <div *ngIf=\"pass.errors &&pass.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                                <div [hidden]=\"!pass.errors.required&&!uspesno\">\n                                                    Unesite šifru.\n                                                </div>\n                                                <div [hidden]=\"!pass.errors.pattern\">\n                                                    Šifra mora da sadrži 5 ili vise karaktera od kojih je bar jedan broj i veliko i malo slovo.\n                                                </div>\n                                            </div>\n                                            <div style=\"margin-top: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\n                                                <input [(ngModel)]=\"passwordReg2\" #pass2=\"ngModel\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" id=\"reg-password\"\n                                                    type=\"password\" class=\"form-control\" name=\"reg-pass1\" placeholder=\"Ponovite šifru\"\n                                                    ngModel>\n                                            </div>\n                                            <div *ngIf=\"nijeIsto\" class=\"alert alert-danger\">\n                                                Prva druga sifra nisu iste.\n                                            </div>\n                                            <div class=\"form-group\" style=\"margin-top: 25px\">\n                                                <label class=\"col-md-3 control-label\">Drzava</label>\n                                                <div class=\"col-md-9\">\n                                                    <select class=\"form-control\" #t (change)=\"callType(t.value)\" data-style=\"btn-success\">\n                                                     \n                                                     <option *ngFor = \"let country of country_array\" [ngValue]='country'> {{country}} </option>\n                                                    \n                                        \n                                                    </select>\n\n\n\n                                                </div>\n                                            </div>\n\n\n\n\n\n                                            <div style=\"margin-top:10px\" class=\"form-group\">\n                                                <!-- Button -->\n                                                <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                                    <button id=\"btn-registracija \" (click)=\"RegistrujSe()\" class=\"btn btn logButton\" type=\"submit\"><a scrollTo href=\"#uspesnaReg\" style=\"color:white;\">Registruj me  </a></button>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <div class=\"col-md-12 control\">\n                                                    <div class=\"logNewReg\">\n                                                        Imate nalog!\n\n                                                        <a href=\"#tab1\" role=\"tab\" data-toggle=\"tab\" (click)=\"resetujL()\" aria-expanded=\"false\"> Logujte se ovde</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n\n\n                                        <div class=\"login-footer\" style=\"margin-top: 15px\">\n                                            <div class=\"pull-left\">\n                                                &copy; 2017 HighFive\n                                            </div>\n                                            <div class=\"pull-right\">\n                                                <a href=\"#\">O nama</a> |\n\n                                                <a href=\"#\">Kontakt</a>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <!-- REGISDTRACIJA END-->\n\n\n                            <!--LOST PASS-->\n                            <div role=\"tabpanel\" class=\"tab-pane \" id=\"tab3\">\n                                <div class=\"login-box animated fadeInDown\">\n                                    <h1 style=\"text-align: center;\">PlanTech</h1>\n\n                                    <div class=\"panel-heading logHeading\" style=\"\">\n                                        <div class=\"panel-title\" style=\"color:white\">Povrati sifru\n                                        </div>\n                                    </div>\n\n\n\n                                    <div style=\"padding-top:30px; \" class=\"panel-body\">\n\n                                        <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n\n                                        <form id=\"loginform\" class=\"form-horizontal\" role=\"form\" method=\"post\">\n                                            <div *ngIf=\"nePostoji\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                                <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                Pogresan username.\n                                            </div>\n                                            <div *ngIf=\"poslato\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                                <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                                Sifra vam je poslata na mail.\n                                            </div>\n                                            <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                                <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                                <input id=\"lost-email\" type=\"text\" class=\"form-control\" [(ngModel)]=\"user1\" name=\"emailForgoten\" value=\"\" placeholder=\"username\"\n                                                    style=\"\" ngModel>\n                                            </div>\n\n\n                                            <div style=\"margin-top:10px\" class=\"form-group\">\n                                                <!-- Button -->\n\n                                                <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                                    <button id=\"btn-login\" (click)=\"povratiSifru()\" class=\"btn btn  logButton\" type=\"submit\">Povrati sifru </button>\n\n\n                                                </div>\n                                            </div>\n\n                                        </form>\n\n\n                                        <div class=\"login-footer\" style=\"margin-top: 15px\">\n                                            <div class=\"pull-left\">\n                                                &copy; 2017 HighFive\n                                            </div>\n                                            <div class=\"pull-right\">\n                                                <a href=\"#\">O nama</a> |\n\n                                                <a href=\"#\">Kontakt</a>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <!--LOST PASS END-->\n                        </div>\n\n\n                    </div>\n\n\n                </div>\n            </div>\n            <!-- desni deo za login i registraiju -->\n        </div>\n    </div>\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 783:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n<!--\nTo change this license header, choose License Headers in Project Properties.\nTo change this template file, choose Tools | Templates\nand open the template in the editor.\n-->\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"css/style.css\">\n\n\n</head>\n\n<body>\n\n\n\n    <!-- Levi deo ekrana, klasa hiden sakriva za mobilne uredjaje  -->\n    <div class=\"hidden-sm hidden-xs bigLogForm\">\n\n        <div class=\"wrap_bg\">\n            <div id=\"main\" class=\"login_wrap {{Active}}\">\n                <div class=\"login_question_wrap\">\n                    <div class=\"question_singUp \">\n\n                        <h2 class=\"title\">Nemate nalog?</h2>\n                        <p>Prijavite se na nas sajt brzo, lako i besplatno\n                        </p>\n                        <a style=\"margin-bottom:10px\" (click)=\"signUpBtn()\" class=\"btn btn_rounded\">Registruj se</a>\n                        <div *ngIf=\"ForgoIt\">\n                            <a style=\"margin-bottom:10px\" (click)=\"loginBtn2()\" class=\"btn btn_rounded\">Prijavi se</a>\n                        </div>\n                        <a routerLink=\"/home\" class=\"btn btn_rounded\">Meni</a>\n                    </div>\n                    <div class=\"question_login \">\n\n                        <h2 class=\"title\">Imate nalog?</h2>\n                        <p>Prijati se na vas nalog\n                        </p>\n                        <a style=\"margin-bottom:10px\" (click)=\"loginBtn()\" class=\"btn btn_rounded\">Prijavi se</a>\n                        <a routerLink=\"/home\" class=\"btn btn_rounded\">Meni</a>\n                    </div>\n                    <div class=\"action_singUp\">\n                        <div class=\"panel-heading logHeading\" style=\" \">\n                            <div class=\"panel-title\" style=\"color:white\">Registracija\n                            </div>\n\n                        </div>\n                        <div *ngIf=\"pogresniPodaciReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                            <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            Korisnik sa takvim podacima vec postoji.\n                        </div>\n                        <div *ngIf=\"praznaPolja\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                            <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            Sva polja moraju biti popunjena.\n                        </div>\n\n                        <div *ngIf=\"uspesnaRegistracija\" id=\"uspesnaReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                            <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            Uspesno ste se registrovali. Sada mozete da se prijavite <a style=\"margin-bottom:10px\" (click)=\"loginBtn()\">ovde</a>.\n                        </div>\n                        <div *ngIf=\"duplo\" id=\"uspesnaReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                            <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            Korisnik sa takvim mailom vec postoji.Na mail su vam poslati Vasi podaci.\n                        </div>\n\n                        <div style=\"padding-bottom:30px; \" class=\"panel-body\">\n\n                            <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n\n                            <form id=\"loginform\" #userForm=\"ngForm\" class=\"form-horizontal\" role=\"form\" novalidate method=\"post\">\n\n                                <div class=\"input-group\">\n                                    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                    <input [(ngModel)]=\"imeReg\" id=\"reg-ime\" type=\"text\" #imeRegg=\"ngModel\" required pattern=\"[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}[\\s]{0,1}[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{0,1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}\"\n                                        class=\"form-control\" name=\"user\" value=\"\" placeholder=\"Ime\" ngModel>\n                                </div>\n                                <div *ngIf=\"imeRegg.errors && imeRegg.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                    <div [hidden]=\"!imeRegg.errors.required&&!uspesno\">\n                                        Unesite ime.\n                                    </div>\n                                    <div [hidden]=\"!imeRegg.errors.pattern\">\n                                        Ime nije validno.\n                                    </div>\n                                </div>\n\n                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                    <input [(ngModel)]=\"prezimeReg\" id=\"reg-prezime\" #prezimeRegg=\"ngModel\" required pattern=\"[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}[\\s]{0,1}[A-ZБВГДЂЕЖЗИЈКЛЉМНЊОПРСТЋУФХЦЧЏШČĆŽĐŠ]{0,1}[a-zабвгдђежзијклљмнњопрстћуфхцчџжčćđžš]{0,20}\"\n                                        type=\"text\" class=\"form-control\" name=\"prezime\" value=\"\" placeholder=\"Prezime\" ngModel>\n\n                                </div>\n                                <div *ngIf=\"prezimeRegg.errors && prezimeRegg.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                    <div [hidden]=\"!prezimeRegg.errors.required&&!uspesno\">\n                                        Unesite prezime.\n                                    </div>\n                                    <div [hidden]=\"!prezimeRegg.errors.pattern\">\n                                        Prezime nije validno.\n                                    </div>\n                                </div>\n                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\n                                    <input [(ngModel)]=\"emailReg\" id=\"reg-email\" type=\"email\" #email=\"ngModel\" required pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$\"\n                                        class=\"form-control\" name=\"email\" value=\"\" placeholder=\"email\" ngModel>\n                                </div>\n                                <div *ngIf=\"email.errors &&email.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                    <div [hidden]=\"!email.errors.required&&!uspesno\">\n                                        Unesite e-mail.\n                                    </div>\n                                    <div [hidden]=\"!email.errors.pattern\">\n                                        E-mail nije validan.\n                                    </div>\n                                </div>\n                                <div class=\"form-group\" style=\"margin-top: 25px\">\n\t\t\t\t\t\t\t\t <div class=\"col-md-12\" style=\"text-align:center\">\n                                    <label class=\"control-label\">Datum rodjenja</label>\n\t\t\t\t\t\t\t\t\t </div>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"col-md-4\">\n                                            <select id='dan' class=\"form-control datePick\">\n                                                <option *ngFor=\"let dan of day_array\">\n                                                  {{dan}}\n                                                </option> \n                                                          \n                                        </select>\n                                        </div>\n                                        <div class=\"col-md-4\" >\n                                            <select id='mesec'class=\"form-control datePick\">\n                                                <option *ngFor=\"let mesec of month_array\">\n                                                  {{mesec}}\n                                                </option> \n                                                          \n                                        </select>\n                                        </div>\n                                        <div class=\"col-md-4\" >\n                                            <select id='godina' class=\"form-control datePick\">\n                                                <option *ngFor=\"let godina of year_array\">\n                                                  {{godina}}\n                                                </option> \n                                                          \n                                        </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"losDatum \" class=\"alert alert-danger\">\n                                    Datum nije validan.\n\n                                </div>\n                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                    <input [(ngModel)]=\"usernameReg\" #user=\"ngModel\" required minlength=\"4\" id=\"reg-username\" type=\"text\" class=\"form-control\"\n                                        name=\"reg-username\" value=\"\" placeholder=\"username\" ngModel>\n                                </div>\n\n\n                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\n                                    <input [(ngModel)]=\"passwordReg\" #pass=\"ngModel\" required pattern=\"[a-zA-Z0-9!.*,]{5,15}\" id=\"reg-password\"\n                                        type=\"password\" class=\"form-control\" name=\"reg-pass\" placeholder=\"šifra\" ngModel>\n                                </div>\n                                <div *ngIf=\"pass.errors &&pass.dirty&&!uspesno\" class=\"alert alert-danger\">\n                                    <div [hidden]=\"!pass.errors.required&&!uspesno\">\n                                        Unesite šifru.\n                                    </div>\n                                    <div [hidden]=\"!pass.errors.pattern\">\n                                        Šifra mora da sadrži 5 ili više karaktera, dozvoljena su mala i velika slova, brojevi i znaci !.*, .\n                                    </div>\n                                </div>\n                                <div style=\"margin-top: 25px\" class=\"input-group\">\n                                    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\n                                    <input [(ngModel)]=\"passwordReg2\" #pass2=\"ngModel\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\" id=\"reg-password\"\n                                        type=\"password\" class=\"form-control\" name=\"reg-pass1\" placeholder=\"Ponovite šifru\" ngModel>\n                                </div>\n                                <div *ngIf=\"nijeIsto\" class=\"alert alert-danger\">\n                                    Prva druga sifra nisu iste.\n                                </div>\n                                <div class=\"form-group\" style=\"margin-top: 25px\">\n                                    <label class=\"col-md-3 control-label\">Drzava</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control\" #t (change)=\"callType(t.value)\" data-style=\"btn-success\">\n                                                     \n                                                     <option *ngFor = \"let country of country_array\" [ngValue]='country'> {{country}} </option>\n                                                    \n                                        \n                                                    </select>\n\n\n\n                                    </div>\n                                </div>\n\n\n\n\n\n                                <div style=\"margin-top:10px\" class=\"form-group\">\n\n                                    <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                        <button id=\"btn-registracija \" (click)=\"RegistrujSe()\" class=\"btn btn-highFive\" type=\"submit\">Registruj me </button>\n\n\n                                    </div>\n                                </div>\n\n                            </form>\n\n\n\n\n                        </div>\n                    </div>\n\n                    <div class=\"action_login\">\n                        <div *ngIf=\"ForgoIt\">\n                            <img class=\"img-responsive\" src=\"logo.png\" />\n                            <div class=\"panel-heading logHeading\" style=\"\">\n                                <div class=\"panel-title\" style=\"color:white\">Povrati sifru\n                                </div>\n                            </div>\n\n\n\n                            <div style=\"padding-top:30px; \" class=\"panel-body\">\n\n                                <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n\n                                <form id=\"loginform\" class=\"form-horizontal\" role=\"form\" method=\"post\">\n                                    <div *ngIf=\"nePostoji\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Pogresan username.\n                                    </div>\n                                    <div *ngIf=\"blokiran\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Vas nalog je blokiran.\n                                    </div>\n                                    <div *ngIf=\"poslato\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Sifra vam je poslata na mail.\n                                    </div>\n                                    <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                        <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                        <input id=\"lost-email\" type=\"text\" class=\"form-control\" [(ngModel)]=\"user1\" name=\"emailForgoten\" value=\"\" placeholder=\"username\"\n                                            style=\"\" ngModel>\n                                    </div>\n\n\n                                    <div style=\"margin-top:10px\" class=\"form-group\">\n                                        <!-- Button -->\n\n                                        <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                            <button id=\"btn-login\" (click)=\"povratiSifru()\" class=\"btn btn-highFive\" type=\"submit\">Povrati sifru </button>\n\n\n                                        </div>\n                                    </div>\n\n                                </form>\n\n\n                            </div>\n                        </div>\n                        <div *ngIf=\"!ForgoIt\">\n                            <img class=\"img-responsive\" src=\"logo.png\" />\n                            <div class=\"panel-heading logHeading\" style=\" \">\n                                <div class=\"panel-title\" style=\"color:white\">Ulogujte se\n                                </div>\n                                <div class=\"forgotenPass\"> <a href=\"#tab3\" (click)=\"ForgotPass2()\" role=\"tab\" data-toggle=\"tab\" style=\"color:white; \"\n                                        aria-expanded=\"false\">Zaboravili ste šifru? </a></div>\n                            </div>\n                            <!-- ALERT WRONG LOGIN  -->\n                            <div *ngIf=\"pogresniPodaci\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" timeout:3200>\n                                <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span>\n                                    </button> Pogrešan username ili šifra\n                            </div>\n                            <div *ngIf=\"blokiran\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" timeout:3200>\n                                <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span>\n                                    </button>Vas nalog je blokiran\n                            </div>\n\n\n                            <!-- END ALERT WRONG LOGIN  -->\n\n                            <div style=\"padding-bottom:30px; \" class=\"panel-body\">\n\n                                <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n\n                                <form id=\"loginform\" class=\"form-horizontal\" role=\"form\" method=\"post\">\n\n                                    <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                        <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\n                                        <input [(ngModel)]=\"username\" id=\"login-username\" type=\"text\" class=\"form-control\" name=\"user12\" value=\"\" placeholder=\"username\"\n                                            style=\"\">\n                                    </div>\n\n                                    <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                        <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\n                                        <input [(ngModel)]=\"password\" id=\"login-password\" type=\"password\" class=\"form-control\" name=\"pass12\" placeholder=\"šifra\">\n                                    </div>\n\n                                    <div style=\"margin-top:10px\" class=\"form-group\">\n                                        <!-- Button -->\n\n                                        <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n                                            <button (click)=\"Login()\"  [disabled]=\"isClickedOnce\" id=\"btn-login\" class=\"btn btn-highFive\" style=\"\" type=\"submit\">Loguj se  </button>\n\n\n                                        </div>\n                                    </div>\n\n\n                                </form>\n\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"login_action_wrap \">\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Button -->\n\n    <!-- START PLUGINS -->\n    <script src=\"js/jquery-3.1.1.min.js\"></script>\n    <script src=\"js/bootstrap.min.js\"></script>\n    <script type=\"text/javascript\" src=\"js/plugins/bootstrap/bootstrap-datepicker.js\"></script>\n    <script src=\"http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js\"></script>\n\n    <!-- END PLUGINS -->\n\n    <!-- vector map -->\n\n    <!-- end vector map -->\n\n</body>\n\n</html>"

/***/ }),

/***/ 784:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n<html >\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Custom noUiSlider Style Generator</title>\n  \n  \n  <link rel='stylesheet prefetch' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css'>\n<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/8.5.1/nouislider.min.css'>\n\n   \n\n  \n</head>\n\n<body>\n \n\n<h3 class=\"page-header text-center\">Custom noUiSlider with Two Controls</h3>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-8 col-sm-offset-2\">\n      <!-- Start noUiSlider -->\n      <div id=\"doubleSlider\">\n      </div>\n      <!-- End noUiSlider -->\n    </div>\n  </div>\n</div>\n\n<input type=\"buton\" (click)='menjaj()'>\n\n\n<hr />\n\n\n<script>\n  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');\n</script>\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n  <script src='https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/8.5.1/nouislider.min.js'></script>\n \n</body>\n</html>\n"

/***/ }),

/***/ 785:
/***/ (function(module, exports) {

module.exports = "<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\n<link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n\n<link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n<link rel=\"stylesheet\" href=\"css/w3.css\">\n<link rel=\"stylesheet\" href=\"css/flag-icon.css\">\n<div id=\"wrapper\">\n    <!-- Meni -->\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n\n        <!-- Header colapse -->\n        <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-ex1-collapse\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n            <a *ngIf=\"!admin\" class=\"navbar-brand\" routerLink=\"/user\" style=\"padding: 0 5px 0 20%;\"> <img class=\"img-responsive\" src=\"logo.png\" style=\"height: 50px\" /></a>\n            <a *ngIf=\"admin\" class=\"navbar-brand\" routerLink=\"/admin\" style=\"padding: 0 5px 0 20%;\"> <img class=\"img-responsive\" src=\"logo.png\" style=\"height: 50px\" /></a>\n\n\n        </div>\n        <!--End Heder colapse -->\n        <ul *ngIf=\"lang[0]['lang']=='srb'||lang[0]['lang']==undefined\" class=\"nav navbar-left top-nav {{cssStyle}}\">\n\n            <li class=\"hidden-sm hidden-xs\" style=\"cursor:pointer\">\n                <a (click)=\"skarijMeni()\"> <i class=\"fa fa-indent\" aria-hidden=\"true\"></i></a>\n            </li>\n            <li *ngIf=\"leviMeniVidljiv\">\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==true)&&!admin)&&!leviMeniVidljiv\" class=\"{{router.url=='/user'? 'active': ''}}\">\n                <a routerLink=\"/user\" title=\"HOME\"><i class=\"fa fa-fw fa-users\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/user'? 'active': ''}}\">\n\n                <a routerLink=\"/user\" title=\"Moje Plantaže\"><i class=\"fa fa-fw  fa-map-marker\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/addplantation'? 'active': ''}}\">\n                <a routerLink=\"/addplantation\" title=\"Dodaj Plantaže i imanja\"><i class=\"fa fa-fw fa-plus\"></i></a>\n            </li>\n\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/addworker'? 'active': ''}}\">\n                <a routerLink=\"/addworker\" title=\"Moji Ljudi\"><i class=\"fa fa-fw fa-users\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/pravila'? 'active': ''}}\">\n                <a routerLink=\"/pravila\" title=\"Pravila\"><i class=\"fa fa-fw fa-book\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/addtypes'? 'active': ''}}\">\n                <a routerLink=\"/addtypes\" title=\"Dodaj tip\"><i class=\"fa fa-database\" ></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/markers'? 'active': ''}}\">\n                <a routerLink=\"/markers\" title=\"Merači\"><i class=\"fa fa-thermometer-quarter\"></i></a>\n            </li>\n\n            <li *ngIf=\"(dozvoleMeni!==undefined)&&!leviMeniVidljiv\" class=\"{{router.url=='/faq'? 'active': ''}}\">\n                <a routerLink=\"/faq\" title=\"FAQ\"><i class=\"fa fa-fw fa-question\"></i></a>\n            </li>\n            <li *ngIf=\"admin&&!leviMeniVidljiv\" class=\"{{router.url=='/admin'? 'active': ''}}\">\n                <a routerLink=\"/admin\" title=\"Admin\"><i class=\"fa fa-fw fa-user\"></i></a>\n            </li>\n        </ul>\n        <ul *ngIf=\"lang[0]['lang']=='eng'\" class=\"nav navbar-left top-nav {{cssStyle}}\">\n\n            <li class=\"hidden-sm hidden-xs\" style=\"cursor:pointer\">\n                <a (click)=\"skarijMeni()\"> <i class=\"fa fa-indent\" aria-hidden=\"true\"></i></a>\n            </li>\n            <li *ngIf=\"leviMeniVidljiv\">\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==true)&&!admin)&&!leviMeniVidljiv\" class=\"{{router.url=='/user'? 'active': ''}}\">\n                <a routerLink=\"/user\" title=\"HOME\"><i class=\"fa fa-fw fa-users\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/user'? 'active': ''}}\">\n\n                <a routerLink=\"/user\" title=\"My Plantations\"><i class=\"fa fa-fw  fa-map-marker\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/addplantation'? 'active': ''}}\">\n                <a routerLink=\"/addplantation\" title=\"Add Plantations\"><i class=\"fa fa-fw fa-plus\"></i></a>\n            </li>\n\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/addworker'? 'active': ''}}\">\n                <a routerLink=\"/addworker\" title=\"My People\"><i class=\"fa fa-fw fa-users\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/pravila'? 'active': ''}}\">\n                <a routerLink=\"/pravila\" title=\"Rules\"><i class=\"fa fa-fw fa-book\"></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/addtypes'? 'active': ''}}\">\n                <a routerLink=\"/addtypes\" title=\"Add Type\"><i class=\"fa fa-database\" ></i></a>\n            </li>\n            <li *ngIf=\"((dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false)&&!leviMeniVidljiv\"\n                class=\"{{router.url=='/markers'? 'active': ''}}\">\n                <a routerLink=\"/markers\" title=\"Sensors\"><i class=\"fa fa-thermometer-quarter\"></i></a>\n            </li>\n\n            <li *ngIf=\"(dozvoleMeni!==undefined)&&!leviMeniVidljiv\" class=\"{{router.url=='/faq'? 'active': ''}}\">\n                <a routerLink=\"/faq\" title=\"FAQ\"><i class=\"fa fa-fw fa-question\"></i></a>\n            </li>\n            <li *ngIf=\"admin&&!leviMeniVidljiv\" class=\"{{router.url=='/admin'? 'active': ''}}\">\n                <a routerLink=\"/admin\" title=\"Admin\"><i class=\"fa fa-fw fa-user\"></i></a>\n            </li>\n        </ul>\n        <!-- Top Menu  -->\n        <ul *ngIf=\"cssStyle!==undefined\" class=\"nav navbar-right top-nav {{cssStyle}}\">\n\n            <li class=\"hidden-sm hidden-xs\">\n                <a (click)=\"toggleFullscreen()\"><i class=\"fa fa-expand\"></i></a>\n            </li>\n            <li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang[0]['lang']=='srb'\">\n                <a (click)=\"setLang('eng')\"><span class=\"flag-icon flag-icon-gb\"></span> English</a>\n            </li>\n            <li class=\"\" style=\"cursor:pointer\" *ngIf=\"lang[0]['lang']=='eng'\">\n                <a (click)=\"setLang('srb')\"><span class=\"flag-icon flag-icon-rs\"></span> Srpski</a>\n            </li>\n            <li *ngIf=\"lang[0]['lang']==undefined\" class=\"\" style=\"cursor:pointer\">\n                <a (click)=\"setLang('eng')\"><span class=\"flag-icon flag-icon-gb\"></span> English</a>\n            </li>\n            <!--poruke -->\n            <li [ngClass]=\"{'dropdown': true, 'open':showMess}\">\n                <a (click)=\"porukeToggle()\" style=\"cursor:pointer; cursor:hand\"><i class=\"fa fa-envelope\"></i> <b class=\"caret\"></b>\n                        <span *ngIf=\"primljenePoruke!==undefined&&brojPoruka>0&&cssStyle!==undefined\"  class=\"badge badge-success pull-right notification{{cssStyle}}\" style=\"\">{{ prvihPetPoruka.length }}</span>\n                    </a>\n\n                <ul class=\"dropdown-menu w3-animate-zoom  message-dropdown\">\n                    <div *ngIf=\"primljenePoruke&&porukeVidljive&&brojPoruka>0\">\n                        <li *ngFor=\"let poruka of prvihPetPoruka\" class=\"message-preview \">\n                          \n                                <a (click)=\"goToMessage(poruka)\" class=\"msgHover\">\n                                    <div class=\"media notificationMsg col-md-12  bottom-line \">\n                                        <div class=\" col-md-3 no-right-padding no-left-padding hidden-sm hidden-xs\" style=\"padding-top: 10%\">\n                                            <img class=\"img-responsive\" src=\"{{poruka.profilePic}}\" alt=\"profile pic\">\n                                        </div>\n                                        <div class=\" col-md-9\">\n\t\t\t\t\t\t\t\t\t\t <div class=\" col-md-3 no-right-padding no-left-padding hidden-lg hidden-md\" style=\"padding-top: 10%\">\n                                            <img class=\"\" style=\"height:100px; width:100px\"  src=\"{{poruka.profilePic}}\" alt=\"profile pic\">\n                                        </div>\n                                            <h5 class=\"media-heading\"><strong>{{poruka.username}}</strong>\n                                            </h5>\n                                            <p class=\"small text-muted\"><i class=\"fa fa-clock-o\"></i> {{ poruka.time | date:'medium' }}</p>\n                                            <p style=\"margin-bottom: 0px\">{{poruka.text}}</p>\n                                        </div>\n                                    </div>\n                                </a>\n                            \n                        </li>\n                    </div>\n\n                    <li *ngIf=\"brojPoruka==0\" class=\"message-preview align-elements\">\n                        <div class=\"alert alert-danger\">Nemate novih poruka</div>\n                    </li>\n                    <li class=\"message-footer\">\n                        <a *ngIf=\"cssStyle!==undefined\" routerLink=\"/inbox\" class=\"btn btn-highFive{{cssStyle}}\">Inbox</a>\n                    </li>\n                </ul>\n            </li>\n            <!--end poruke -->\n\n\n            <!--alerts -->\n            <li [ngClass]=\"{'dropdown': true, 'open':obavestenjaVidljiva}\">\n                <a (click)=\"obavestenjaToggle()\" style=\"cursor:pointer; cursor:hand\"><i class=\"fa fa-bell\" ></i> <b class=\"caret\"></b>\n                      <span *ngIf=\"obavestenja!==undefined&&ukupnoObavestenja>0&&cssStyle!==undefined\" class=\"badge badge-success pull-right notification{{cssStyle}}\" style=\"\">{{ukupnoObavestenja}}</span>\n                    </a>\n                <ul *ngIf=\"obavestenjaVidljiva&&obavestenjaStigla\" class=\"dropdown-menu w3-animate-zoom  message-dropdown\">\n                    <li *ngFor=\"let obavestenje of prvihPet\" class=\"message-preview\">\n\n                        <div class=\"media notificationMsg col-md-12  bottom-line \">\n                            <div class=\" col-md-3 no-right-padding no-left-padding hidden-sm hidden-xs\" style=\"padding-top: 10%\">\n                                <img class=\"img-responsive\" src=\"{{obavestenje.profilePic}}\" alt=\"profile pic\">\n                            </div>\n                            <div class=\" col-md-9\">\n\t\t\t\t\t\t\t <div class=\" col-md-3 no-right-padding no-left-padding hidden-lg hidden-md\" style=\"padding-top: 10%\">\n                                            <img class=\"\" style=\"height:100px; width:100px\"  src=\"{{obavestenje.profilePic}}\" alt=\"profile pic\">\n                                        </div>\n                                <h5 *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\" class=\"media-heading\"><strong data-toggle=\"modal\">{{selectedLang[8][\"Ponuda za posao\"]}}<p class=\"small text-muted\"><i class=\"fa fa-clock-o\"></i> {{obavestenje.date}}</p></strong>\n                                </h5>\n                                <h5 *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==1\" class=\"media-heading\"><strong data-toggle=\"modal\">{{selectedLang[40][\"promena uloge\"]}}<p class=\"small text-muted\"><i class=\"fa fa-clock-o\"></i> {{obavestenje.date}}</p></strong>\n                                </h5>\n\n                                <p *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\" style=\"margin-bottom: 0px\">{{selectedLang[30][\"Vlasnik\"]}} {{obavestenje.ownername+\" \"+obavestenje.ownerlastname}} {{selectedLang[31][\"zeli\n                                    da Vam da ulogu\"]}} {{obavestenje.role}}\n                                </p>\n                                <p *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==1\" style=\"margin-bottom: 0px\">{{selectedLang[30][\"Vlasnik\"]}} {{obavestenje.ownername+\" \"+obavestenje.ownerlastname}} {{selectedLang[39][\"je\n                                    promenio vašu ulogu u\"]}} {{obavestenje.role}}\n                                </p>\n                            </div>\n                            <div *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\" class=\" col-md-12 row align-elements\" style=\"margin-top: 5%\">\n                                <div class=\" col-md-6\">\n                                    <button (click)=\"odgovori(obavestenje.idowner,obavestenje.idworker,obavestenje.idrole,1)\" type=\"button\" class=\"btn btn-success btn-xs\"\n                                        style=\"width: 100%;border-radius: 0px;\">{{selectedLang[9][\"Prihvati\"]}}</button>\n                                </div>\n                                <div class=\" col-md-6\">\n                                    <button (click)=\"odgovori(obavestenje.idowner,obavestenje.idworker,obavestenje.idrole,0)\" type=\"button\" class=\"btn btn-danger btn-xs\"\n                                        style=\"width: 100%;border-radius: 0px;\">{{selectedLang[10][\"Odbij\"]}}</button>\n                                </div>\n                            </div>\n                            <div *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==1\" class=\" col-md-12 row align-elements\" style=\"margin-top: 5%\">\n                                <div class=\" col-md-6\">\n                                    <button (click)=\"obrisiObavestenje(obavestenje.idnotif)\" type=\"button\" class=\"btn btn-danger btn-xs\"\n                                        style=\"width: 100%;border-radius: 0px;\">{{selectedLang[41][\"odbaci\"]}}</button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </li>\n\n                    <li *ngFor=\"let obavestenjeExp of prvihPetExp\" class=\"message-preview\">\n                        <div class=\"media notificationMsg col-md-12  bottom-line \">\n                            <div class=\" col-md-9\">\n                                <h5 class=\"media-heading\"><strong data-toggle=\"modal\">Upozorenje<p class=\"small text-muted\"><i class=\"fa fa-clock-o\"></i> {{obavestenjeExp.date | date:'mediumDate'}}</p></strong>\n                                </h5>\n\n                                <p style=\"margin-bottom: 0px\">{{\"Upozorenje za plantažu \"+obavestenjeExp.name+\" na imanju \"+obavestenjeExp.imanje+\". \"}}\n                                </p>\n                                <p> Opis upozorenja: <b>{{obavestenjeExp.description}}</b></p>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <i *ngIf=\"obavestenjeExp.severity==1\" class=\"fa fa-exclamation-triangle fa-4x\" style=\"color:orange;\" aria-hidden=\"true\"></i>\n                                <i *ngIf=\"obavestenjeExp.severity==2\" class=\"fa fa-exclamation-triangle fa-4x\" style=\"color:red;\" aria-hidden=\"true\"></i>\n                                <button (click)=\"notificationSeen(obavestenjeExp.idNot)\" type=\"button\" class=\"btn\">Odbaci</button>\n                            </div>\n                        </div>\n                    </li>\n\n\n\n                    <li *ngIf=\"obavestenja.length==0&&expObavestenja.length==0\" class=\"message-preview align-elements\">\n                        <div class=\"alert alert-danger\">Nemate novih obavestenja</div>\n                    </li>\n                    <li class=\"message-footer\">\n                        <a *ngIf=\"cssStyle!==undefined\" routerLink=\"/notifications\" class=\"btn btn-highFive{{cssStyle}}\">{{selectedLang[11][\"Pogledaj sve\"]}}</a>\n                    </li>\n                </ul>\n            </li>\n            <!--end alerts -->\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false\" class=\"{{router.url=='/forecast'? 'active': ''}}\">\n                <a routerLink=\"/forecast\"><i class=\"fa fa-thermometer-quarter\"></i> {{selectedLang[37][\"forecast\"]}}</a>\n            </li>\n            <!--profil meni -->\n            <li [ngClass]=\"{'dropdown': true, 'open':meniVidljiv}\">\n                <a (click)=\"meniToggle()\" style=\" cursor: pointer; cursor: hand;\"><i class=\"fa fa-user\"></i><span *ngIf=\"vidljivost\"> {{user.username}}</span> <b class=\"caret\"></b></a>\n                <ul *ngIf=\"meniVidljiv\" class=\"dropdown-menu w3-animate-zoom\">\n                    <li>\n                        <a routerLink=\"/updateuser\"><i class=\"fa fa-fw fa-user\"></i>{{selectedLang[12][\"Profil\"]}}</a>\n                    </li>\n\n                    <li>\n                        <a href=\"#PodesavanjaModal\" data-toggle=\"modal\"><i class=\"fa fa-fw fa-gear\"></i>{{selectedLang[13][\"Podešavanja\"]}}</a>\n                    </li>\n                    <li>\n                        <a routerLink=\"/finance\"><i class=\"fa fa-fw fa-money\"></i>{{selectedLang[32][\"Finansije\"]}}</a>\n                    </li>\n\n                    <li *ngIf=\"!isOwner&&!admin\">\n                        <!-- <a  routerLink=\"/reqownership\" ><i class=\"fa fa-fw fa-unlock-alt\" data-toggle=\"modal\" data-target=\"#zahtev\"></i> {{selectedLang[14][\"Traži vlasništvo\"]}}</a>-->\n                        <a href=\"#zahtev\" data-toggle=\"modal\"><i class=\"fa fa-fw fa-unlock-alt\"></i>{{selectedLang[14][\"Traži vlasništvo\"]}}</a>\n                    </li>\n                    <li class=\"divider\"></li>\n                    <li style=\"cursor: pointer\">\n                        <a (click)=\"logout()\"><i class=\"fa fa-fw fa-power-off\"></i>{{selectedLang[15][\"Izloguj se\"]}}</a>\n                    </li>\n                </ul>\n            </li>\n            <!--end profil meni -->\n        </ul>\n        <!--End Top Menu  -->\n\n        <!-- desni meni  -->\n\n        <!-- end desni meni  -->\n    </nav>\n    <!-- end Meni -->\n    <div class=\"collapse navbar-collapse navbar-ex1-collapse\" *ngIf=\"leviMeniVidljiv\">\n        <ul *ngIf=\"cssStyle!==undefined\" class=\"nav navbar-nav side-nav {{cssStyle}}\">\n            <!-- PROFILE -->\n            <li class=\"xn-profile\" style=\"width: 100%\">\n                <div class=\"profile\">\n\n                    <div class=\"profile-image\">\n                        <a routerLink=\"/updateuser\"> <img *ngIf=\"user!==undefined\" src=\"{{user.profilePic}}\" style=\"border-radius: 50%\" class=\"img-responsive w3-circle\"\n                                alt=\"John Doe\"></a>\n                    </div>\n                    <div class=\"profile-data\">\n                        <div class=\"profile-data-name\"> <span *ngIf=\"vidljivost\">{{user.username}}</span></div>\n                        <div class=\"profile-data-title\"><span *ngIf=\"vidljivost\">{{user.country}}</span></div>\n                    </div>\n\n                </div>\n            </li>\n            <!-- END PROFILE -->\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==true)&&!admin\" class=\"{{router.url=='/user'? 'active': ''}}\">\n                <a routerLink=\"/user\"><i class=\"fa fa-fw fa-users\"></i>{{selectedLang[33][\"Pocetna strana\"]}}</a>\n            </li>\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false\" class=\"{{router.url=='/user'? 'active': ''}}\">\n                <a routerLink=\"/user\"><i class=\"fa fa-fw  fa-map-marker\"></i>{{selectedLang[0][\"mojePlantaze\"]}}</a>\n            </li>\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false\" class=\"{{router.url=='/addplantation'? 'active': ''}}\">\n                <a routerLink=\"/addplantation\"><i class=\"fa fa-fw fa-plus\"></i>{{selectedLang[1][\"Dodaj Plantaze\"]}}</a>\n            </li>\n\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false\" class=\"{{router.url=='/addworker'? 'active': ''}}\">\n                <a routerLink=\"/addworker\"><i class=\"fa fa-fw fa-users\"></i>{{selectedLang[2][\"Moji Ljudi\"]}}</a>\n            </li>\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false\" class=\"{{router.url=='/pravila'? 'active': ''}}\">\n                <a routerLink=\"/pravila\"><i class=\"fa fa-fw fa-book\"></i>{{selectedLang[38][\"pravila\"]}}</a>\n            </li>\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false\" class=\"{{router.url=='/addtypes'? 'active': ''}}\">\n                <a routerLink=\"/addtypes\"><i class=\"fa fa-database\" ></i> {{selectedLang[3][\"Dodaj tip\"]}}</a>\n            </li>\n            <li *ngIf=\"(dozvoleMeni!==undefined&&dozvoleMeni.guest==false)||localStorageService.get('guest')==false\" class=\"{{router.url=='/markers'? 'active': ''}}\">\n                <a routerLink=\"/markers\"><i class=\"fa fa-thermometer-quarter\"></i> {{selectedLang[4][\"Meraci\"]}}</a>\n            </li>\n\n            <li *ngIf=\"(dozvoleMeni!==undefined)\" class=\"{{router.url=='/faq'? 'active': ''}}\">\n                <a routerLink=\"/faq\"><i class=\"fa fa-fw fa-question\"></i> {{selectedLang[5][\"FAQ\"]}}</a>\n            </li>\n            <li *ngIf=\"admin\" class=\"{{router.url=='/admin'? 'active': ''}}\">\n                <a routerLink=\"/admin\"><i class=\"fa fa-fw fa-user\"></i> {{selectedLang[29][\"Admin strana\"]}}</a>\n            </li>\n            <li class=\"hidden-lg hidden-md\">\n                <div class=\"col-md-12\" style=\"padding: 0 0 0 0\">\n                    <div class=\"col-md-6\" style=\"padding: 0 0 0 0\">\n                        <a href=\"#AboutModal\" class=\"btn about-btn\" data-toggle=\"modal\" style=\"width: 100%;border-radius: 0px;\">{{selectedLang[6][\"O nama\"]}}</a>\n                    </div>\n                    <div class=\"col-md-6\" style=\"padding: 0 0 0 0\">\n                        <a href=\"#ContactModal\" class=\"btn contact-btn\" data-toggle=\"modal\" style=\"width: 100%;border-radius: 0px;\">{{selectedLang[7]}}</a>\n\n                    </div>\n                </div>\n            </li>\n            <li class=\"hidden-sm hidden-xs\" style=\"position:fixed; bottom: 0; height:60px; width: 225px;float: left\">\n\n                <div class=\" col-md-12\" style=\"padding: 0 0 0 0;color: white;text-align: center\">\n                    &copy; 2017 HighFive\n                </div>\n\n                <div class=\"col-md-12\" style=\"padding: 0 0 0 0\">\n                    <div class=\"col-md-6\" style=\"padding: 0 0 0 0\">\n                        <a href=\"#AboutModal\" class=\"btn about-btn \" data-toggle=\"modal\" style=\"width: 100%;border-radius: 0px;\">{{selectedLang[6][\"O nama\"]}}</a>\n\n                    </div>\n                    <div class=\"col-md-6\" style=\"padding: 0 0 0 0\">\n                        <a href=\"#ContactModal\" class=\"btn contact-btn\" data-toggle=\"modal\" style=\"width: 100%;border-radius: 0px;\">{{selectedLang[7][\"Kontakt\"]}}</a>\n                    </div>\n\n                </div>\n\n\n            </li>\n\n        </ul>\n\n\n    </div>\n    <div id=\"ContactModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div *ngIf=\"cssStyle!==undefined\" class=\"modal-header {{cssStyleH}} \">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                    <h3 id=\"myModalLabel\">{{selectedLang[16][\"Kontaktirajte nas\"]}}</h3>\n                </div>\n                <div class=\"modal-body\" style=\"background-color: white;\">\n                    <form class=\"form-horizontal col-sm-12 \" [formGroup]=\"sendEmailForm\">\n                        <div class=\"form-group\"><label>{{selectedLang[17][\"Ime\"]}}</label><input name=\"ime\" class=\"form-control required\" placeholder=\"Vase ime\"\n                                data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                type=\"text\" formControlName=\"ime\"></div>\n                        <div class=\"form-group\"><label>{{selectedLang[18][\"Naslov\"]}}</label><input name=\"naslov\" class=\"form-control required\" placeholder=\"Naslov poruke\"\n                                data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                type=\"text\" formControlName=\"naslov\"></div>\n                        <div class=\"form-group\"><label>{{selectedLang[19][\"Vas E-Mail\"]}}</label><input name=\"email\" class=\"form-control email\" placeholder=\"email@you.com (kako bismo mogli da vam odgovorimo)\"\n                                data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n                                type=\"text\" formControlName=\"email\" pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$\"></div>\n                        <div class=\"form-group\"><label>{{selectedLang[20][\"Poruka\"]}}</label><textarea name=\"poruka\" class=\"form-control\" placeholder=\"Vasa poruka...\"\n                                data-placement=\"top\" data-trigger=\"manual\" formControlName=\"poruka\"></textarea></div>\n\n                        <div *ngIf=\"cssStyle!==undefined\" class=\"form-group\"><button [disabled]=\"!sendEmailForm.valid\" (click)=\"posalji(sendEmailForm.value)\" type=\"submit\" class=\"btn btn-send{{cssStyle}}  pull-right\"\n                                data-dismiss=\"modal\">{{selectedLang[21][\"Pošalji\"]}}</button>\n                            <p class=\"help-block pull-left text-danger hide\" id=\"form-error\">  The form is not valid. </p>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">{{selectedLang[22][\"Izadji\"]}}</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div id=\"NotifModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div *ngIf=\"cssStyle!==undefined\" class=\"modal-header {{cssStyleH}}\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                    <h3 id=\"myModalLabel\">{{selectedLang[23][\"O nama\"]}}</h3>\n                </div>\n\n                <div class=\"modal-footer \">\n                    <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">{{selectedLang[22][\"Izadji\"]}}</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div id=\"AboutModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div *ngIf=\"cssStyle!==undefined\" class=\"modal-header {{cssStyleH}}\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                    <h3 id=\"myModalLabel\">{{selectedLang[23][\"O nama\"]}}</h3>\n                </div>\n                <div class=\"modal-body\">\n\n                    <div class=\"col-md-12\">\n                        <div class=\"carousel slide\" data-ride=\"carousel\" id=\"quote-carousel\">\n\n                            <!-- Carousel Slides / Quotes -->\n                            <div class=\"carousel-inner text-center\">\n                                <!-- Quote 1 -->\n                                <div class=\"item \">\n                                    <blockquote>\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-8 col-sm-offset-2\">\n                                                <h2>Bojan Đokić</h2>\n                                                <p>Završio prvu Prvu kragujevačku gimnaziju, trenutno na četvrtoj godini informatike\n                                                    Prirodno-matematičkog fakulteta u Kragujevcu. Poznaje dobro web programiranje,\n                                                    objektno orijentisano programiranje, relacione baze podataka i IOT. Iz\n                                                    oblasti web programirnaja ima iskustva.</p>\n                                                <small>bojan.djokic92@gmail.com</small>\n                                            </div>\n                                        </div>\n                                    </blockquote>\n                                </div>\n                                <!-- Quote 2 -->\n                                <div class=\"item\">\n                                    <blockquote>\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-8 col-sm-offset-2\">\n                                                <h2>Đorđe Mitrović</h2>\n                                                <p>Rođen u Smederevskoj Palanci. Osnovnu školu \"Vuk Karadžić\" završio je u Smederevskoj\n                                                    Palanci uz pohvale. Gimnaziju u Velikoj Plani, informatički smer, upisuje\n                                                    2010. i završava sa odličnim uspehom 2014. Obrazovanje nastavlja na Prirodno-matematičkom\n                                                    fakultetu u Kragujevcu gde je trenutno na trećoj godini. Oblasti interesovanja\n                                                    uključuju objektno orijentisano programiranje, web programiranje, inteligentne\n                                                    sisteme i relacione baze podataka</p>\n                                                <small>mitrovicdjordje076@gmail.com</small>\n                                            </div>\n                                        </div>\n                                    </blockquote>\n                                </div>\n                                <!-- Quote 3 -->\n                                <div class=\"item\">\n                                    <blockquote>\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-8 col-sm-offset-2\">\n                                                <h2>Đorđe Mitrović</h2>\n                                                <p>Rođen u Kragujevcu, završio Prvu kragujevačku gimnaziju. Trenutno student\n                                                    informatike na Prirodno matematičkom fakultetu u Kragujevcu.</p>\n                                                <small>djole_m_993@live.com</small>\n                                            </div>\n                                        </div>\n                                    </blockquote>\n                                </div>\n                                <!-- Quote 43 -->\n                                <div class=\"item active\">\n                                    <blockquote>\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-8 col-sm-offset-2\">\n                                                <h2>Jovan Janićijević</h2>\n                                                <p>Bivši učenik SM odeljenja Prve kragujevačke gimnazije. Sada uspesan student\n                                                    Prirodno-matematickog fakulteta u Kragujevcu.\n                                                </p>\n                                                <small>jovan.janicijevic.95@gmail.com</small>\n                                            </div>\n                                        </div>\n                                    </blockquote>\n                                </div>\n                                <!-- Quote 5 -->\n                                <div class=\"item\">\n                                    <blockquote>\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-8 col-sm-offset-2\">\n                                                <h2>Jovana Tomović</h2>\n                                                <p>Rođena u Kragujevcu. Završila Drugu kragujevačku gimnaziju sa odličnim uspehom.\n                                                    Sada student treće godine informatike Prirodno-matematičkog fakulteta\n                                                    u Kragujevcu.</p>\n                                                <small>jovana.tomovic195@gmail.com</small>\n                                            </div>\n                                        </div>\n                                    </blockquote>\n                                </div>\n                            </div>\n                            <!-- Bottom Carousel Indicators -->\n\n\n                            <!-- Carousel Buttons Next/Prev -->\n                            <a data-slide=\"prev\" href=\"#quote-carousel\" class=\"left carousel-control\"><i class=\"fa fa-chevron-left\"></i></a>\n                            <a data-slide=\"next\" href=\"#quote-carousel\" class=\"right carousel-control\"><i class=\"fa fa-chevron-right\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <ol class=\"carousel-indicators\">\n                        <li data-target=\"#quote-carousel\" data-slide-to=\"0\"><img class=\"img-responsive\" src=\"img/6.jpg\" alt=\"\">\n                        </li>\n                        <li data-target=\"#quote-carousel\" data-slide-to=\"1\"><img class=\"img-responsive\" src=\"img/3.jpg\" alt=\"\">\n                        </li>\n                        <li data-target=\"#quote-carousel\" data-slide-to=\"2\"><img class=\"img-responsive\" src=\"img/5.jpg\" alt=\"\">\n                        </li>\n                        <li data-target=\"#quote-carousel\" data-slide-to=\"3\" class=\"active\"><img class=\"img-responsive\" src=\"img/2.jpg\" alt=\"\">\n                        </li>\n                        <li data-target=\"#quote-carousel\" data-slide-to=\"4\"><img class=\"img-responsive\" src=\"img/7.png\" alt=\"\">\n                        </li>\n                    </ol>\n                    <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">{{selectedLang[22][\"Izadji\"]}}</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"PodesavanjaModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div *ngIf=\"cssStyle!==undefined\" class=\"modal-header {{cssStyleH}}\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                    <h3 id=\"myModalLabel\">{{selectedLang[25][\"Odabir teme aplikacije\"]}}</h3>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"content__wrapper\">\n\n\n                        <ul class=\"colors\">\n                            <li data-color=\"#2ecc71\" (click)='setBoje(\"green\")' data-dismiss=\"modal\" class=\"{{cssStyle=='green' ? 'active-color' : ''}} \"></li>\n                            <li data-color=\"#8f2846\" (click)='setBoje(\"default\")' data-dismiss=\"modal\" class=\"{{cssStyle=='' ? 'active-color' : ''}} \"></li>\n                            <li data-color=\"#3b5999\" (click)='setBoje(\"blue\")' data-dismiss=\"modal\" class=\"{{cssStyle=='blue' ? 'active-color' : ''}} \"></li>\n                            <li data-color=\"#4C75A3\" (click)='setBoje(\"lightBlue\")' data-dismiss=\"modal\" class=\"{{cssStyle=='lightBlue' ? 'active-color' : ''}} \"></li>\n                            <li data-color=\"#D65129\" (click)='setBoje(\"orange\")' data-dismiss=\"modal\" class=\"{{cssStyle=='orange' ? 'active-color' : ''}} \"></li>\n                            <!--<li data-color=\"#8e44ad\" (click)='setBoje(\"2ecc71\")' data-dismiss=\"modal\"></li>\n\t\t\t\t\t<li class=\"active-color\" data-color=\"#46a1de\" (click)='setBoje(\"2ecc71\")' data-dismiss=\"modal\"></li>\n\t\t\t\t\t<li data-color=\"#bdc3c7\" (click)='setBoje(\"2ecc71\")' data-dismiss=\"modal\"></li>-->\n                        </ul>\n                    </div>\n                </div>\n                <!--  <div class=\"modal-header {{cssStyleH}}\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                    <h3 id=\"myModalLabel\">{{selectedLang[26][\"Odabir jezika\"]}}</h3>\n                </div>\n                <div class=\"modal-body\">\n\t\t\t\t\n                      <select class=\"form-control btn-primary\"  #t (change)=\"onChangeLang(t.value)\">\n\t\t\t\t\t <option value=\"eng\"></option>\n                       <option value=\"srb\">{{selectedLang[27][\"Srpski\"]}}</option>\n                         <option value=\"eng\">{{selectedLang[28][\"Engleski\"]}}</option>\n\t\t\t\t\t\t\n                         \n                    </select>\n\t\t\t\t  </div>\n                 <div class=\"modal-footer\">\n                   \t<button (click)='setLang()' type=\"submit\" class=\"btn btn-send{{cssStyle}} pull-right\" data-dismiss=\"modal\">Set</button>\n               </div>-->\n\n            </div>\n        </div>\n    </div>\n\n\n\n\n    <div class=\"modal fade\" id=\"zahtev\" role=\"dialog\">\n        <div class=\"modal-dialog\">\n\n            <!-- Modal content-->\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                    <h4 class=\"modal-title\">{{selectedLang[34][\"Posalji zahtev za vlasnistvo\"]}}</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>{{selectedLang[36][\"Sigurni\"]}}</p>\n\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" (click)=\"posaljiZahtev1()\" class=\"btn btn-success\" data-dismiss=\"modal\">{{selectedLang[35][\"Da\"]}}</button>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"hidden-lg hidden-md\" style=\"margin-bottom:180px\"></div>\n\n\n</div>"

/***/ }),

/***/ 786:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n    <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" />\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n    <link rel=\"stylesheet\" href=\"css/w3.css\">\n</head>\n\n<body>\n\n\n\n    <div id=\"wrapper\" *ngIf=\"lang=='srb'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\">\n            <app-widgets></app-widgets>\n             \n           \n\n            <div class=\"container-fluid\">\n                \n                <div class=\"col-md-12 no-left-padding no-right-padding\">\n                    <!-- naslov -->\n                    <div class=\"col-md-12\">\n                        <div class=\"page-title col-md-4\">\n                            <h2><span class=\"fa fa-file-text\"></span> Poruka</h2>\n                        </div>\n\n\n\n                    </div>\n                    <!-- END naslov -->\n\n                    <div class=\"col-md-12 no-left-padding no-right-padding\">\n                        <!-- Meni za poruke-->\n                        <div class=\"col-md-2 no-left-padding\">\n\n                            <a routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\"><span class=\"fa fa-edit\"></span> Nova poruka</a>\n\n                            <div class=\"block\" style=\"margin-top: 5px\">\n                                <div class=\"list-group border-bottom\">\n                                    <a routerLink=\"/inbox\" class=\"list-group-item \"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\"></span></a>\n                                    <a routerLink=\"/sent\" class=\"list-group-item\"><span class=\"fa fa-rocket\"></span>  Poslate</a>\n                                </div>\n                            </div>\n                           \n\n                        </div>\n                        <!-- ENDMeni za poruke -->\n\n                        <!-- msg -->\n                        <div class=\"col-md-10 no-right-padding\">\n\n                            <div *ngIf=\"selectedMessage.length>0\" class=\"compose form-horizontal\" style=\"height: 100%\">\n\n                                <div *ngFor=\"let por of selectedMessage\" class=\"panel panel-info\" style=\"background-color: white\">\n                                    <div class=\"panel-heading msgPanel-head\">\n                                        <div class=\"row\">\n                                            <!-- Za desktop -->\n                                            <div class=\" col-md-2 no-right-padding hidden-sm hidden-xs\" style=\"padding: 1%\">\n                                                <img class=\"msgPic\" src=\"{{por.profilePic}}\" alt=\"profile pic\" />\n                                            </div>\n                                            <div class=\" col-md-2 no-right-padding hidden-md hidden-lg align-elements\">\n                                                <img class=\"msgPic\" src=\"{{por.profilePic}}\" alt=\"profile pic\" />\n                                            </div>\n                                            <div class=\"col-md-10 hidden-sm hidden-xs\">\n                                                <div class=\"col-md-12 row\">\n                                                    <h2 class=\"panel-title \">{{por.name}} {{por.surname}} - {{por.username}} </h2>\n\n\n                                                    <!--end ze dekstop -->\n\n                                                    <!--za mob -->\n\n                                                    <div class=\"col-md-10 hidden-md hidden-lg align-elements\">\n\n                                                        <h2 class=\"\">{{por.name}} {{por.surname}} - {{por.username}} </h2>\n\n                                                    </div>\n                                                    <!--enb za mob -->\n                                                </div>\n\n                                                <div class=\"col-md-12 row\">\n                                                    <!--za desktop -->\n                                                    <div class=\" hidden-sm hidden-xs\" style=\"min-height: 50px\">\n\n                                                        <small class=\" text-muted \"><span class=\"fa fa-clock-o\"></span>  {{por.time | date:'medium' }}</small>\n\n                                                        <div class=\" pull-right\">\n                                                            <button (click)=\"postaviPorukuZaBrisanje(por.id,por.idSender, por.idReceiver)\" class=\"btn btn-highFive{{cssStyle}}\" data-toggle=\"modal\"\n                                                                data-target=\"#brisanjePoruka\"><span class=\"fa fa-trash-o\"></span></button>\n                                                            <button class=\"btn btn-highFive{{cssStyle}}\" (click)=\"print()\"><span class=\"fa fa-print\"></span> Print</button>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                        <!--za mob -->\n                                        <div class=\"row  hidden-md hidden-lg align-elements\" style=\"min-height: 50px\">\n\n                                            <small class=\" text-muted \"><span class=\"fa fa-clock-o\"></span>  {{por.time | date:'medium' }}</small>\n\n\n\n                                            <div class=\" row    hidden-md hidden-lg align-elements\">\n                                                <button class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-mail-reply\"></span></button>\n\n                                                <button (click)=\"obrisiPoruku(por.id,por.idSender,por.idReceiver)\" class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-trash-o\"></span></button>\n                                                <button class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-print\"></span> Print</button>\n\n                                            </div>\n                                        </div>\n                                        <!--enb za mob -->\n                                    </div>\n                                    <!--end ze dekstop -->\n\n\n                                    <div class=\"panel-body\" id=\"panel-body\">\n\n                                        {{por.text}}\n\n                                    </div>\n                                    <div class=\"panel-footer\" style=\"height: 250px\">\n                                        <div *ngIf=\"user!=por.idSender\">\n                                            <div class=\"form-group \" style=\"padding: 10px\">\n                                                <label>Brz odgovor</label>\n                                                <textarea class=\"form-control\" rows=\"5\" id=\"comment\" [(ngModel)]=\"comm\"></textarea>\n                                            </div>\n                                            <button (click)=\"brzOdgovor(por.username)\" class=\"btn btn-highFive{{cssStyle}} pull-right\"><span class=\"fa fa-mail-reply\"></span> Pošalji odgovor</button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <!-- END msg -->\n                    </div>\n\n\n                </div>\n\n            </div>\n            <div class=\"modal fade\" id=\"brisanjePoruka\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4 class=\"modal-title\">Brisanje poruke</h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Da li ste sigurni da želite da obrisete poruku?</p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" (click)=\"obrisiPoruku()\" class=\"btn btn-success\" data-dismiss=\"modal\">Potvrdi</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                ovde ide neki content za guesta\n            </div>\n        </div>\n    </div>\n\n\n    <div id=\"wrapper\" *ngIf=\"lang=='eng'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\">\n            <app-widgets></app-widgets>\n             \n           \n\n            <div class=\"container-fluid\">\n                \n                <div class=\"col-md-12 no-left-padding no-right-padding\">\n                    <!-- naslov -->\n                    <div class=\"col-md-12\">\n                        <div class=\"page-title col-md-4\">\n                            <h2><span class=\"fa fa-file-text\"></span> Message</h2>\n                        </div>\n\n\n\n                    </div>\n                    <!-- END naslov -->\n\n                    <div class=\"col-md-12 no-left-padding no-right-padding\">\n                        <!-- Meni za poruke-->\n                        <div class=\"col-md-2 no-left-padding\">\n\n                            <a routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\"><span class=\"fa fa-edit\"></span>New message</a>\n\n                            <div class=\"block\" style=\"margin-top: 5px\">\n                                <div class=\"list-group border-bottom\">\n                                    <a routerLink=\"/inbox\" class=\"list-group-item \"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\"></span></a>\n                                    <a routerLink=\"/sent\" class=\"list-group-item\"><span class=\"fa fa-rocket\"></span>  Sent messages</a>\n                                </div>\n                            </div>\n                           \n\n                        </div>\n                        <!-- ENDMeni za poruke -->\n\n                        <!-- msg -->\n                        <div class=\"col-md-10 no-right-padding\">\n\n                            <div *ngIf=\"selectedMessage.length>0\" class=\"compose form-horizontal\" style=\"height: 100%\">\n\n                                <div *ngFor=\"let por of selectedMessage\" class=\"panel panel-info\" style=\"background-color: white\">\n                                    <div class=\"panel-heading msgPanel-head\">\n                                        <div class=\"row\">\n                                            <!-- Za desktop -->\n                                            <div class=\" col-md-2 no-right-padding hidden-sm hidden-xs\" style=\"padding: 1%\">\n                                                <img class=\"msgPic\" src=\"{{por.profilePic}}\" alt=\"profile pic\" />\n                                            </div>\n                                            <div class=\" col-md-2 no-right-padding hidden-md hidden-lg align-elements\">\n                                                <img class=\"msgPic\" src=\"{{por.profilePic}}\" alt=\"profile pic\" />\n                                            </div>\n                                            <div class=\"col-md-10 hidden-sm hidden-xs\">\n                                                <div class=\"col-md-12 row\">\n                                                    <h2 class=\"panel-title \">{{por.name}} {{por.surname}} - {{por.username}} </h2>\n\n\n                                                    <!--end ze dekstop -->\n\n                                                    <!--za mob -->\n\n                                                    <div class=\"col-md-10 hidden-md hidden-lg align-elements\">\n\n                                                        <h2 class=\"\">{{por.name}} {{por.surname}} - {{por.username}} </h2>\n\n                                                    </div>\n                                                    <!--enb za mob -->\n                                                </div>\n\n                                                <div class=\"col-md-12 row\">\n                                                    <!--za desktop -->\n                                                    <div class=\" hidden-sm hidden-xs\" style=\"min-height: 50px\">\n\n                                                        <small class=\" text-muted \"><span class=\"fa fa-clock-o\"></span>  {{por.time | date:'medium' }}</small>\n\n                                                        <div class=\" pull-right\">\n                                                            <button (click)=\"postaviPorukuZaBrisanje(por.id,por.idSender, por.idReceiver)\" class=\"btn btn-highFive{{cssStyle}}\" data-toggle=\"modal\"\n                                                                data-target=\"#brisanjePoruka\"><span class=\"fa fa-trash-o\"></span></button>\n                                                            <button class=\"btn btn-highFive{{cssStyle}}\" (click)=\"print()\"><span class=\"fa fa-print\"></span> Print</button>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                        <!--za mob -->\n                                        <div class=\"row  hidden-md hidden-lg align-elements\" style=\"min-height: 50px\">\n\n                                            <small class=\" text-muted \"><span class=\"fa fa-clock-o\"></span>  {{por.time | date:'medium' }}</small>\n\n\n\n                                            <div class=\" row    hidden-md hidden-lg align-elements\">\n                                                <button class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-mail-reply\"></span></button>\n\n                                                <button (click)=\"obrisiPoruku(por.id,por.idSender,por.idReceiver)\" class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-trash-o\"></span></button>\n                                                <button class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-print\"></span> Print</button>\n\n                                            </div>\n                                        </div>\n                                        <!--enb za mob -->\n                                    </div>\n                                    <!--end ze dekstop -->\n\n\n                                    <div class=\"panel-body\" id=\"panel-body\">\n\n                                        {{por.text}}\n\n                                    </div>\n                                    <div class=\"panel-footer\" style=\"height: 250px\">\n                                        <div *ngIf=\"user!=por.idSender\">\n                                            <div class=\"form-group \" style=\"padding: 10px\">\n                                                <label>Reply</label>\n                                                <textarea class=\"form-control\" rows=\"5\" id=\"comment\" [(ngModel)]=\"comm\"></textarea>\n                                            </div>\n                                            <button (click)=\"brzOdgovor(por.username)\" class=\"btn btn-highFive{{cssStyle}} pull-right\"><span class=\"fa fa-mail-reply\"></span> Reply</button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <!-- END msg -->\n                    </div>\n\n\n                </div>\n\n            </div>\n            <div class=\"modal fade\" id=\"brisanjePoruka\" role=\"dialog\">\n                <div class=\"modal-dialog\">\n\n                    <!-- Modal content-->\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4 class=\"modal-title\">Delete message</h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Are you sure you want to delete message?</p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" (click)=\"obrisiPoruku()\" class=\"btn btn-success\" data-dismiss=\"modal\">Confirm</button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                Guest content\n            </div>\n        </div>\n    </div>\n\n\n\n\n\n</body>\n\n</html>\n<script>\n    (function printDiv() {\n        console.log(\"u stampaj!\");\n        /*     var printContents=document.getElementById(divName).innerHTML;\n             console.log(\"u stampaj!\");\n             w=window.open();\n             w.document.write(printContents);\n             w.print();\n             w.close();*/\n    })\n\n</script>"

/***/ }),

/***/ 787:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\n</head>\n\n<body>\n\n\n\n    <div id=\"wrapper\" *ngIf=\"lang=='srb'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\">\n\n            <app-widgets></app-widgets>\n\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 no-left-padding no-right-padding\">\n                    <!-- naslov -->\n                    <div class=\"col-md-12\">\n                        <div class=\"page-title\">\n                            <h2><span class=\"fa fa-inbox\"></span> Pošalji poruku</h2>\n                        </div>\n\n                    </div>\n                    <!-- END naslov -->\n                    <div class=\"col-md-12 no-left-padding no-right-padding\">\n                        <!-- START  Meni za poruke -->\n                        <div class=\"col-md-2 no-left-padding\">\n\n                            <a routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\"><span class=\"fa fa-edit\"></span> Nova poruka</a>\n\n                            <div class=\"block\" style=\"margin-top: 5px\">\n                                <div class=\"list-group border-bottom\">\n                                    <a routerLink=\"/inbox\" class=\"list-group-item\"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\"></span></a>\n                                    <a routerLink=\"/sent\" class=\"list-group-item\"><span class=\"fa fa-rocket\"></span>  Poslate</a>\n                                </div>\n                            </div>\n\n                        </div>\n                        <!-- END  Meni za poruke -->\n\n                        <!-- Salnje -->\n                        <div class=\"col-md-10 no-right-padding\">\n\n                            <div class=\"compose form-horizontal\" style=\"height: 100%\">\n                                <div class=\"compose-body\">\n                                    <div class=\"form-group\">\n                                        <div class=\"col-md-12 \">\n\n\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label class=\"col-md-2 control-label\">Za:</label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" placeholder=\"username\" (keyup)=filter1()/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"tt-dropdown-menu\" style=\"position: absolute; top: 100%; left: 0px; z-index: 100; display: block; right: auto;\" *ngIf=\"filteredList.length > 0\" >\n<div class=\"tt-dataset-0\" style=\"display: block;\">\n<span class=\"tt-suggestions\" style=\"display: block;\" *ngFor=\"let item of filteredList\">\n<div class=\"tt-suggestion\" style=\"white-space: nowrap; cursor: pointer;\">\n<p style=\"white-space: normal;cursor: pointer'\" (click)=\"select(item)\">{{item}}</p></div>\n</span>\n</div>\n</span>\n                                        </div>\n\n                                    </div>\n\n                                   \n\n\n\n                                    <div class=\"form-group\">\n                                        <label class=\"col-md-2 control-label\">Poruka:</label>\n                                        <div class=\"col-md-10\">\n                                            <textarea class=\"form-control\" rows=\"5\" [(ngModel)]=\"poruka\" id=\"comment\"></textarea>\n                                        </div>\n\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <div class=\"col-md-12\">\n\n                                            <div class=\"pull-right\">\n                                                <button (click)=\"sendMessage()\" class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-envelope\"></span>  Pošalji</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div style=\"clear:both\"></div>\n                                    <div *ngIf=\"porukaPoslata\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Poruka je poslata\n                                    </div>\n                                    <div *ngIf=\"porukaPoslata==false\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Poruka nije poslata.\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <!-- END slanje -->\n                    </div>\n\n\n                </div>\n\n            </div>\n\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                ovde ide neki content za guesta\n            </div>\n        </div>\n    </div>\n\n    <div id=\"wrapper\" *ngIf=\"lang=='eng'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\">\n\n            <app-widgets></app-widgets>\n\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 no-left-padding no-right-padding\">\n                    <!-- naslov -->\n                    <div class=\"col-md-12\">\n                        <div class=\"page-title\">\n                            <h2><span class=\"fa fa-inbox\"></span> Send</h2>\n                        </div>\n\n                    </div>\n                    <!-- END naslov -->\n                    <div class=\"col-md-12 no-left-padding no-right-padding\">\n                        <!-- START  Meni za poruke -->\n                        <div class=\"col-md-2 no-left-padding\">\n\n                            <a routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\"><span class=\"fa fa-edit\"></span> New message</a>\n\n                            <div class=\"block\" style=\"margin-top: 5px\">\n                                <div class=\"list-group border-bottom\">\n                                    <a routerLink=\"/inbox\" class=\"list-group-item\"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\"></span></a>\n                                    <a routerLink=\"/sent\" class=\"list-group-item\"><span class=\"fa fa-rocket\"></span>  Sent messages</a>\n                                </div>\n                            </div>\n\n\n                        </div>\n                        <!-- END  Meni za poruke -->\n\n                        <!-- Salnje -->\n                        <div class=\"col-md-10 no-right-padding\">\n\n                            <div class=\"compose form-horizontal\" style=\"height: 100%\">\n                                <div class=\"compose-body\">\n                                    <div class=\"form-group\">\n                                        <div class=\"col-md-12 \">\n\n\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label class=\"col-md-2 control-label\">Za:</label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" placeholder=\"username\" (keyup)=filter1()/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"tt-dropdown-menu\" style=\"position: absolute; top: 100%; left: 0px; z-index: 100; display: block; right: auto;\" *ngIf=\"filteredList.length > 0\" >\n<div class=\"tt-dataset-0\" style=\"display: block;\">\n<span class=\"tt-suggestions\" style=\"display: block;\" *ngFor=\"let item of filteredList\">\n<div class=\"tt-suggestion\" style=\"white-space: nowrap; cursor: pointer;\">\n<p style=\"white-space: normal;cursor: pointer'\" (click)=\"select(item)\">{{item}}</p></div>\n</span>\n</div>\n</span>\n                                        </div>\n\n                                    </div>\n                               \n\n\n\n                                    <div class=\"form-group\">\n                                        <label class=\"col-md-2 control-label\">Message:</label>\n                                        <div class=\"col-md-10\">\n                                            <textarea class=\"form-control\" rows=\"5\" [(ngModel)]=\"poruka\" id=\"comment\"></textarea>\n                                        </div>\n\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <div class=\"col-md-12\">\n\n                                            <div class=\"pull-right\">\n                                                <button (click)=\"sendMessage()\" class=\"btn btn-highFive{{cssStyle}}\"><span class=\"fa fa-envelope\"></span>  Send</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div style=\"clear:both\"></div>\n                                    <div *ngIf=\"porukaPoslata\" role=\"alert\" class=\"alert alert-success alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Message sent.\n                                    </div>\n                                    <div *ngIf=\"porukaPoslata==false\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        Couldn't send message.\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <!-- END slanje -->\n                    </div>\n\n\n                </div>\n\n            </div>\n\n\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                Guest content\n            </div>\n        </div>\n    </div>\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 788:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n    <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" />\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n    <link rel=\"stylesheet\" href=\"css/bootstrap-select.min.css\">\n\n    <link rel=\"stylesheet\" href=\"css/w3.css\">\n</head>\n\n<body>\n\n    <div id=\"wrapper\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\">\n            <!-- serbian -->\n            <div class=\"container-fluid\" *ngIf=\"lang=='srb'\">\n\n                <div class=\"panel panel-primary panelDef{{cssStyle}} topMargin\">\n                    <div class=\"panel-heading highFivePanel{{cssStyle}}\">\n                        {{notif.ownername}} {{notif.ownerlastname}}\n\n                        <small class=\" \"><span class=\"fa fa-clock-o\"></span>  {{notif.date}}</small>\n\n\n\n                    </div>\n                    <div class=\"panel-body\">\n                        <!-- Za desktop -->\n                        <div class=\" col-md-2 no-right-padding hidden-sm hidden-xs\" style=\"padding: 1%\">\n                            <img class=\"msgPic\" src=\"{{notif.profilePic}}\" alt=\"profile pic\" />\n                        </div>\n                        <div class=\" col-md-2 no-right-padding hidden-md hidden-lg align-elements\">\n                            <img class=\"msgPic\" src=\"{{notif.profilePic}}\" alt=\"profile pic\" />\n                        </div>\n                        <div class=\"col-md-10 \">\n                            <div class=\"col-md-12 row\">\n                                <button (click)=\"nazad()\" class=\"btn backToPrikaz{{cssStyle}} row\">Nazad</button>\n\n\n\n                            </div>\n\n                            <div class=\"row\" style=\"text-align\">\n\n                                Vlasnik {{notif.ownername}} {{notif.ownerlastname}} <span *ngIf=\"notif.type!==undefined&&notif.type==0\">želi da Vam da ulogu: </span>\n                                <span *ngIf=\"notif.type!==undefined&&notif.type==1\">Vam je promenio ulogu na: </span> {{notif.role}}.\n                                <br> Parcele koje poseduje vlasnik:\n\n                                <ul *ngFor=\"let imanje of imanja\">\n                                    <li>{{imanje.name}}</li>\n\n                                </ul>\n\n                                <p>Omogucena prava na imanjima: </p>\n                                <li *ngIf=\"binary[0] == 1\">Pregled plantaza, </li>\n                                <li *ngIf=\"binary[1] == 1\">Upravljanje plantazama, </li>\n                                <li *ngIf=\"binary[2] == 1\">Upravljanje kulturama, </li>\n                                <li *ngIf=\"binary[3] == 1\">Upravljanje zaposlenima, </li>\n                                <li *ngIf=\"binary[4] == 1\">Promena uloga zaposlenih, </li>\n                                <li *ngIf=\"binary[5] == 1\" style=\"margin-bottom:10px\">Prikaz statistike</li>\n                                <div class=\"mail-date\"> <button *ngIf=\"notif.type!==undefined&&notif.type==0\" (click)=\"odgovori(1)\" type=\"button\"\n                                        class=\"btn btn-highFive{{cssStyle}}\">Prihvati</button>\n                                    <button *ngIf=\"notif.type!==undefined&&notif.type==0\" (click)=\"odgovori(0)\" type=\"button\" class=\"btn btn-highFive{{cssStyle}} \"><i class=\"fa fa-times\"></i> Odbij</button>\n\n                                    <button *ngIf=\"notif.type!==undefined&&notif.type==1\" (click)=\"obrisiObavestenje(notif.idnotif)\" type=\"button\" class=\"btn btn-highFive{{cssStyle}}\">Odbaci</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <!--za mob -->\n\n                    <!--enb za mob -->\n\n\n\n                </div>\n            </div>\n            <!--end serbian -->\n\n            <!-- eng -->\n            <div class=\"container-fluid\" *ngIf=\"lang=='eng'\">\n\n                <div class=\"panel panel-primary panelDef{{cssStyle}} topMargin\">\n                    <div class=\"panel-heading highFivePanel{{cssStyle}}\">\n                        {{notif.ownername}} {{notif.ownerlastname}}\n\n                        <small class=\" \"><span class=\"fa fa-clock-o\"></span>  {{notif.date}}</small>\n\n\n\n                    </div>\n                    <div class=\"panel-body\">\n                        <!-- Za desktop -->\n                        <div class=\" col-md-2 no-right-padding hidden-sm hidden-xs\" style=\"padding: 1%\">\n                            <img class=\"msgPic\" src=\"{{notif.profilePic}}\" alt=\"profile pic\" />\n                        </div>\n                        <div class=\" col-md-2 no-right-padding hidden-md hidden-lg align-elements\">\n                            <img class=\"msgPic\" src=\"{{notif.profilePic}}\" alt=\"profile pic\" />\n                        </div>\n                        <div class=\"col-md-10 \">\n                            <div class=\"col-md-12 row\">\n                                <button (click)=\"nazad()\" class=\"btn backToPrikaz{{cssStyle}} row\">Back</button>\n\n\n\n                            </div>\n\n                            <div class=\"row\" style=\"text-align\">\n\n                                Owner {{notif.ownername}} {{notif.ownerlastname}} <span *ngIf=\"notif.type!==undefined&&notif.type==0\">Wants to employ you as: {{notif.role}}</span>\n                                <span *ngIf=\"notif.type!==undefined&&notif.type==1\">Has changed your role to: {{notif.role}}</span>                                .\n                                <br> Owners plantations:\n\n                                <ul *ngFor=\"let imanje of imanja\">\n                                    <li>{{imanje.name}}</li>\n\n                                </ul>\n\n                                <p>Premssions on plantations: </p>\n                                <li *ngIf=\"binary[0] == 1\">Plantation search, </li>\n                                <li *ngIf=\"binary[1] == 1\">Management of plantations, </li>\n                                <li *ngIf=\"binary[2] == 1\">Management of cultures, </li>\n                                <li *ngIf=\"binary[3] == 1\">managing staff, </li>\n                                <li *ngIf=\"binary[4] == 1\">Change employees role, </li>\n                                <li *ngIf=\"binary[5] == 1\" style=\"margin-bottom:10px\">See statistics</li>\n                                <div class=\"mail-date\"> \n                                    <button *ngIf=\"notif.type!==undefined&&notif.type==0\" (click)=\"odgovori(1)\" type=\"button\" class=\"btn btn-highFive{{cssStyle}}\">Accept</button>\n                                    <button *ngIf=\"notif.type!==undefined&&notif.type==0\" (click)=\"odgovori(0)\" type=\"button\" class=\"btn btn-highFive{{cssStyle}} \"><i class=\"fa fa-times\"></i> Reject</button>\n                                    <button *ngIf=\"notif.type!==undefined&&notif.type==1\" (click)=\"obrisiObavestenje(notif.idnotif)\" type=\"button\" class=\"btn btn-highFive{{cssStyle}}\">Odbaci</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <!--za mob -->\n\n                    <!--enb za mob -->\n\n\n\n                </div>\n            </div>\n            <!--end eng -->\n        </div>\n    </div>\n\n</body>\n\n</html>"

/***/ }),

/***/ 789:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n\t<title>PlanTech</title>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<meta name=\"author\" content=\"HighFive\" />\n\n\t<link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n\t<link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\t<!-- full screen -->\n\n</head>\n\n<body>\n\n\t<div id=\"wrapper\">\n\n\t\t<app-meni></app-meni>\n\n\t\t<!-- glavni deo -->\n\t\t<div id=\"page-wrapper\">\n\n\n\n\n\n\n\t\t\t<div class=\"container-fluid\">\n\t\t\t\t<div class=\"col-md-12 no-left-padding\">\n\n\n\t\t\t\t\t<!-- Notifikacije -->\n\t\t\t\t\t<div *ngIf=\"!obavestenjaNone\" class=\"zahtevi\">\n\t\t\t\t\t\t<div class=\"flag note note--secondary\" *ngFor=\"let obavestenje of  obavestenja\">\n\t\t\t\t\t\t\t<div class=\"flag__image note__icon\" (click)=\"goToNot(obavestenje)\">\n\t\t\t\t\t\t\t\t<img class=\"notifyPic\" src=\"{{obavestenje.profilePic}}\" alt=\"profile pic\">\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"flag__body note__text\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t{{\"Vlasnik \"+obavestenje.ownername+\" \"+obavestenje.ownerlastname}} <span *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\">želi da Vam da ulogu:</span>\n\t\t\t\t\t\t\t\t<span *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==1\">Vam je promenio ulogu na:</span>\n\t\t\t\t\t\t\t\t<b>{{obavestenje.role}}</b>\n\t\t\t\t\t\t\t\t<div class=\"mail-user\" (click)=\"goToNot(obavestenje)\"> {{obavestenje.date}}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flag__body note__text\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t{{\"Owner \"+obavestenje.ownername+\" \"+obavestenje.ownerlastname}} <span *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\"> Wants to employ you as: </span>\n\t\t\t\t\t\t\t\t<span *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==1\"> Has changed your roles to: </span>\n\t\t\t\t\t\t\t\t<b>{{obavestenje.role}}</b>\n\t\t\t\t\t\t\t\t<div class=\"mail-user\" (click)=\"goToNot(obavestenje)\"> {{obavestenje.date}}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flag__image note__icon\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t<button *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\" (click)=\"odgovori(obavestenje.idowner,obavestenje.idworker,obavestenje.idrole,1)\"\n\t\t\t\t\t\t\t\t type=\"button\" class=\"btn btn-highFive row\">Prihvati</button>\n\t\t\t\t\t\t\t\t<button *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\" (click)=\"odgovori(obavestenje.idowner,obavestenje.idworker,obavestenje.idrole,0)\"\n\t\t\t\t\t\t\t\t type=\"button\" class=\"btn btn-highFive row btnRej\"><i class=\"fa fa-times\"></i> Odbij</button>\n\t\t\t\t\t\t\t\t<button *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==1\" (click)=\"obrisiObavestenje(obavestenje.idnotif)\"\n\t\t\t\t\t\t\t\t type=\"button\" class=\"btn btn-highFive row btnRej\"><i class=\"fa fa-times\"></i> Odbaci</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flag__image note__icon\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t<button *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\" (click)=\"odgovori(obavestenje.idowner,obavestenje.idworker,obavestenje.idrole,1)\" type=\"button\" class=\"btn btn-highFive row\">Accept</button>\n\t\t\t\t\t\t\t\t<button *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==0\" (click)=\"odgovori(obavestenje.idowner,obavestenje.idworker,obavestenje.idrole,0)\" type=\"button\" class=\"btn btn-highFive row btnRej\"><i class=\"fa fa-times\"></i> Reject</button>\n\t\t\t\t\t\t\t\t<button *ngIf=\"obavestenje.type!==undefined&&obavestenje.type==1\" (click)=\"obrisiObavestenje(obavestenje.idnotif)\" type=\"button\" class=\"btn btn-highFive row btnRej\"><i class=\"fa fa-times\"></i> Dismiss</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"ribbon\" *ngIf=\"expObavestenjaNone==false\">\n\t\t\t\t\t\t<span class=\"ribbon6\">Expertski</span>\n\t\t\t\t\t\t<div *ngIf=\"expObavestenjaNone==false\">\n\t\t\t\t\t\t\t<div *ngFor=\"let expObavestenje of  expObavestenja | paginate: { itemsPerPage: 7, currentPage: p }\">\n\t\t\t\t\t\t\t\t<div class=\"flag note note--warning\" *ngIf=\"expObavestenje.severity==1\">\n\t\t\t\t\t\t\t\t\t<div class=\"flag__image note__icon\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-exclamation\"></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flag__body note__text\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t\t\t{{\"Upozorenje za plantazu \"+expObavestenje.name+\" na imanju \"+expObavestenje.imanje+\". \"}} Opis upozorenja: <b>{{expObavestenje.description}}</b>\n\t\t\t\t\t\t\t\t\t\t<div class=\"mail-user\"> {{expObavestenje.date | date:'medium'}}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flag__body note__text\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t\t\t{{\"Warning for plantation \"+expObavestenje.name+\" on property \"+expObavestenje.imanje+\". \"}} Warning: <b>{{expObavestenje.description}}</b>\n\t\t\t\t\t\t\t\t\t\t<div class=\"mail-user\"> {{expObavestenje.date | date:'medium'}}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<a class=\"note__close\" (click)=\"notificationSeen(expObavestenje.idNot)\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times\"></i>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t<div class=\"flag note note--error\" *ngIf=\"expObavestenje.severity==2\">\n\t\t\t\t\t\t\t\t\t<div class=\"flag__image note__icon\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-warning\"></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flag__body note__text\" *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t\t\t{{\"Upozorenje za plantazu \"+expObavestenje.name+\" na imanju \"+expObavestenje.imanje+\". \"}} Opis upozorenja: <b>{{expObavestenje.description}}</b>\n\t\t\t\t\t\t\t\t\t\t<div class=\"mail-user\"> {{expObavestenje.date | date:'medium'}}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"flag__body note__text\" *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t\t\t{{\"Warning for plantation \"+expObavestenje.name+\" on property \"+expObavestenje.imanje+\". \"}} Warning: <b>{{expObavestenje.description}}</b>\n\t\t\t\t\t\t\t\t\t\t<div class=\"mail-user\"> {{expObavestenje.date | date:'medium'}}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<a class=\"note__close\" (click)=\"notificationSeen(expObavestenje.idNot)\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-times\"></i>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngIf=\"lang=='srb'\">\n\t\t\t\t\t\t\t\t<pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngIf=\"lang=='eng'\">\n\t\t\t\t\t\t\t\t<pagination-controls style='cursor: pointer;' previousLabel=\"Back\" nextLabel=\"Next\" (pageChange)=\"p = $event\"></pagination-controls>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flag note note--info\" *ngIf=\"obavestenjaNone&&expObavestenjaNone==true\">\n\t\t\t\t\t\t<div class=\"flag__image note__icon\">\n\t\t\t\t\t\t\t<i class=\"fa fa-info\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"flag__body note__text\">\n\t\t\t\t\t\t\t<p *ngIf=\"lang=='srb'\">Nemate nova obavestenja</p>\n\t\t\t\t\t\t\t<p *ngIf=\"lang=='eng'\">No new notiffications</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\t\t\t\t<!-- END Notifikacije  -->\n\n\t\t\t</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t</div>\n\t</div>\n\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 790:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/page-not-found-d.component.css\">\n    <link rel=\"stylesheet\" href=\"css/bootstrap-select.min.css\">\n    <link href=\"fontawesome/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body>\n  <button (click)=\"vratiNaPrikaz()\" class=\"btn btn-primary btn-lg \" style=\"float: left\"><span class=\"fa fa-arrow-left\"></span> nazad na prikaz </button>\n</body>\n</html>\n"

/***/ }),

/***/ 791:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/page-not-found.component.css\">\n    <link rel=\"stylesheet\" href=\"css/bootstrap-select.min.css\">\n    <link href=\"fontawesome/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body>\n  <button (click)=\"vratiNaPrikaz()\" class=\"btn btn-primary btn-lg \" style=\"float: left\"><span class=\"fa fa-arrow-left\"></span> nazad na prikaz </button>\n</body>\n</html>\n"

/***/ }),

/***/ 792:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n  <title>PlanTech</title>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"author\" content=\"HighFive\" />\n\n  <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n  <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\n  <link rel=\"stylesheet\" href=\"css/w3.css\">\n  <script src='https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/9.2.0/nouislider.min.js'></script>\n</head>\n\n<body>\n  <div id=\"wrapper\">\n\n    <app-meni></app-meni>\n\n    <!-- glavni deo -->\n    <div id=\"page-wrapper\">\n\t<div class=\"hidden-sm hidden-xs\" style=\"margin-top:60px\"></div>\n       <app-widgets></app-widgets>\n\n      <div class=\"container-fluid\">\n\n        <div class=\"tab\" role=\"tabpanel\" *ngIf=\"dozvole!==undefined&&lang=='srb'\">\n          <!-- Nav tabs -->\n          <ul class=\"nav nav-tabs\" role=\"tablist\">\n            <li role=\"presentation\" class=\"{{cssStyleT}} {{rulesBasic ? 'profileTab active' : ''}} \"><a (click)=\"promeniTabOsnovna()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Osnovna pravila</a></li>\n            <li role=\"presentation\" class=\"{{cssStyleT}} {{rulesAdvanced ? 'profileTab active' : ''}}\">\n              <a (click)=\"promeniTabNapredna()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Napredna pravila</a></li>\n            <li role=\"presentation\" class=\"{{cssStyleT}} {{rulesDelete ? 'profileTab active' : ''}}\">\n              <a (click)=\"promeniTabBrisanje()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Brisanje pravila</a></li>\n\n          </ul>\n        </div>\n   <div class=\"tab\" role=\"tabpanel\" *ngIf=\"dozvole!==undefined&&lang=='eng'\">\n          <!-- Nav tabs -->\n          <ul class=\"nav nav-tabs\" role=\"tablist\">\n            <li role=\"presentation\" class=\"{{cssStyleT}} {{rulesBasic ? 'profileTab active' : ''}} \"><a (click)=\"promeniTabOsnovna()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Basic rules</a></li>\n            <li role=\"presentation\" class=\"{{cssStyleT}} {{rulesAdvanced ? 'profileTab active' : ''}}\">\n              <a (click)=\"promeniTabNapredna()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Advance rules</a></li>\n            <li role=\"presentation\" class=\"{{cssStyleT}} {{rulesDelete ? 'profileTab active' : ''}}\">\n              <a (click)=\"promeniTabBrisanje()\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Delete rules</a></li>\n\n          </ul>\n        </div>\n        <div *ngIf=\"rulesBasic\" >\n       \n            <app-rules></app-rules>\n         \n\n        </div>\n\n        <div *ngIf=\"rulesAdvanced\" >\n         \n            <app-rules-advance>\n            </app-rules-advance>\n         \n\n        </div>\n\n\n        <div *ngIf=\"rulesDelete\" >\n         \n            <app-rules-delete></app-rules-delete>\n\n       \n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</body>\n\n</html>"

/***/ }),

/***/ 793:
/***/ (function(module, exports) {

module.exports = "<html>\n\n<head>\n  <title>PlanTech</title>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"author\" content=\"HighFive\" />\n\n  <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n  <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n</head>\n\n<body>\n  <div style=\"margin-top:10px\" class=\"form-group\">\n    <div id=\"wrapper\">\n\n\n      <app-meni></app-meni>\n      <div id=\"page-wrapper\">\n        <app-widgets></app-widgets>\n        <div *ngIf=\"poslatZahtev\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n          <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>          Vas zahtev je poslat adminu.\n\n        </div>\n        <div *ngIf=\"postojiUBazi\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"\">\n          <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black\" type=\"button\"><span aria-hidden=\"true\">×</span></button>          Vas zahtev je vec poslat adminu.\n        </div>\n        <!-- Button -->\n        <div class=\"col-sm-12 controls\" style=\"text-align: center;align-items: center\">\n          <button *ngIf=\"!isOwner\" class=\"btn btn-primary\" type=\"submit\" (click)=\"posaljiZahtev()\"> Posalji zahtev</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n\n</html>"

/***/ }),

/***/ 794:
/***/ (function(module, exports) {

module.exports = "\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\n      <link rel=\"stylesheet\" href=\"css/w3.css\"> \n      <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/8.5.1/nouislider.min.css'>\n\n\n\n\t\t\t\t\t \n                      \t \n                        <div class=\"panel panel-primary panelDef{{cssStyle}}\">\n                            <div id=\"togglable-tabs\" id=\"opcije\">\n\n                               \n                                <!--  <div class=\"col-md-12 \" style=\"text-align:center\" *ngIf=\"!sideBarVidljiv&&plantazaVidljiva\">\n                        <div class=\"col-md-4 col-centered \" style=\"text-align:center;\">\n  \n                            <div class=\"panel panel-primary\">\n  \n                            </div>\n                        </div>\n                    </div>-->\n                                <div *ngIf=\"pravila\" class=\"panel-heading highFivePanel{{cssStyle}}\">{{selectedLang[0][\"text\"]}}</div>\n\t\n                                <div *ngIf=\"pravila\" class=\"panel-body \">\n                                     \n                               \t <div class=\"col-md-12 rulesMeni \" style=\"text-align:center;\">\n                                           <div class=\"col-md-4 \" style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">{{selectedLang[1][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                   <select class=\"form-control\"  #t (change)=\"callType(t.value)\">\n                                                        <option *ngFor = \"let tip of tipovi\"  [value]=\"tip.id\"> {{tip.name}} </option>\n                                                    </select>\n                                                  \n                                                </div>\n\n                                            </div>\n\n                                          <div class=\"col-md-4 \"  style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \">{{selectedLang[2][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                   <select class=\"form-control\"  #t1 (change)=\"izaberiPodTip(t1.value)\">\n                                                        <option *ngFor = \"let podtip of podTipovi\"  [value]=\"podtip.id\"> {{podtip.name}} </option>\n                                                    </select>\n                                                   <!-- <select class=\"form-control btn-primary\" formControlName=\"podvrsta\">\n                                                        <option *ngFor=\"let podtip of podtipovi\" [value]=\"podtip.id\" >{{podtip.name}}</option>\n                                                    </select>-->\n                                                </div>\n\n\n                                            </div>                                      \n                                            <div class=\"col-md-4 \"  style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \">{{selectedLang[3][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                   <select class=\"form-control\"  #t2 (change)=\"callType3(t2.value)\">\n                                                        <option *ngFor = \"let atribut of atributi\"  [value]=\"atribut.name\"> {{atribut.name}} </option>\n                                                    </select>\n                                                   <!-- <select class=\"form-control btn-primary\" formControlName=\"podvrsta\">\n                                                        <option *ngFor=\"let podtip of podtipovi\" [value]=\"podtip.id\" >{{podtip.name}}</option>\n                                                    </select>-->\n                                                </div>\n\n\n                                            </div>\n                                             </div>\n                                           \n\n\n                                        <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\" [hidden]=\"!tu||tipovi==undefined || podTipovi==undefined || tipovi.length==0 || podTipovi.length == 0\">\n                                             <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\"  name=\"c646322\" id=\"rangerMin\" [(ngModel)]=\"criticalMinS1\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-6 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\"   name=\"c65682\" id=\"rangerMax\" [(ngModel)]=\"criticalMaxS1\" class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            <div class=\"col-md-2 \" style=\"text-align:center;\">\n                                               <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"unesiPravilo()\">{{selectedLang[4][\"text\"]}} {{activeDay}}</button>\n\n\n                                            </div>                                                                                \n                                        </div>\n                                        \n                                     <!--    <div class=\"col-md-12 dan\">\n                                              <div class=\"ribbon\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Dan 1</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n\n                                                  <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\">\n                                                    <div id=\"pravilo0\">  </div> \n                                                       \n                                                  <div class=\"col-md-3 no-left-padding no-right-padding\">   \n                                                      <div  class=\"tile tile-primary\">\n                                                        PRAVILO\n                                                          \n                                                        </div>                       \n                                                        <div  class=\"tile tile-primary\">\n                                                            20-30\n                                                            <p>TEMPERATURA</p>                   \n                                                            <div class=\"informer informer-default\"><span class=\"fa fa-thermometer-full\"></span></div>\n                                                        </div>                        \n                                                  </div>\n                                                 \n                                                </div>\n                                             \n                                            \n                                              </div>\n                                          <span class=\"ribbon3\"><a  (click)=\"anotherDay()\" >Novi dan <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a></span>\n                                      </div>  \n\n                                          </div>\n                                           <div id=\"newDay1\">\n                                            \n                                                   \n                                           </div>-->\n                                         \n                                           <section>\n<div class=\"col-md-12 dan1\">\n       <div *ngIf=\"uspesnoUneti\"  role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                            <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            {{selectedLang[15][\"text\"]}}\n                        </div>\n                         <div *ngIf=\"istoIme\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        {{selectedLang[16][\"text\"]}}\n                                    </div>\n                                      <div *ngIf=\"nisuPopunjena\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        {{selectedLang[17][\"text\"]}}\n                                    </div>\n   <div class=\"ribbon\">\n \n  <input type=\"radio\" id=\"control_01\" name=\"select\" value=\"1\" checked (click)=\"changeDay(1)\">\n  <label for=\"control_01\" class=\"radioLabel{{cssStyle}} ref1 ref\">\n   \n  <h2>{{selectedLang[5][\"text\"]}} 1 <span *ngIf=\"refDay==1\">{{selectedLang[6][\"text\"]}}</span></h2>  \n    \n    <p *ngIf=\"activeDay==1\">{{selectedLang[7][\"text\"]}} 1</p>\n  </label>\n    <span class=\"ribbon3\" *ngIf=\"dayCount<2\"><a  (click)=\"anotherDay()\" >{{selectedLang[8][\"text\"]}} <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a></span>\n                                      </div>  \n        <div  class=\"panel-body dayPanel\">\n\n\t\t  <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\">\n\t\t\t<div id=\"pravilo1\">  </div> \n\t\t\t   \n\n\t\t \n\t\t</div>\n\t\t\t<div class=\"col-md-12 align-elements\" *ngIf=\"refDay!=1\">\n                                             \n\t\t\t\t\t\t  <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"ref(1)\">{{selectedLang[9][\"text\"]}}</button>\n\t\t\t\t   \n\t\t\t</div>\n                                       \n\t\n\t  </div>\n</div>\n<div class=\"col-md-12 dan2\">\n   <div class=\"ribbon\">\n  <input type=\"radio\" id=\"control_02\" name=\"select\" value=\"2\" (click)=\"changeDay(2)\">\n  <label for=\"control_02\" class=\"radioLabel{{cssStyle}} ref2\">\n    <h2>{{selectedLang[5][\"text\"]}} 2 <span *ngIf=\"refDay==2\">{{selectedLang[6][\"text\"]}}</span></h2>\n    <p *ngIf=\"activeDay==2\">{{selectedLang[7][\"text\"]}} 2</p>\n  </label>\n    <span class=\"ribbon3\" *ngIf=\"dayCount<3\"><a  (click)=\"anotherDay()\" >{{selectedLang[8][\"text\"]}} <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a></span>\n                                      </div>  \n        <div  class=\"panel-body dayPanel\">\n\n\t\t  <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\">\n\t\t\t<div id=\"pravilo2\">  </div> \n\t\t\t   \n\t\t\n\t\t \n\t\t</div>\n\t <div class=\"col-md-12 align-elements\" *ngIf=\"refDay!=2\">\n                                             \n\t\t\t\t\t\t  <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"ref(2)\">{{selectedLang[9][\"text\"]}}</button>\n\t\t\t\t   \n\t\t\t</div>\n\t\n\t  </div>\n</div>\n<div class=\"col-md-12 dan3\">\n   <div class=\"ribbon\">\n  <input type=\"radio\" id=\"control_03\" name=\"select\" value=\"3\" (click)=\"changeDay(3)\">\n  <label for=\"control_03\" class=\"radioLabel{{cssStyle}} ref3\">\n   <h2>{{selectedLang[5][\"text\"]}} 3 <span *ngIf=\"refDay==3\">{{selectedLang[6][\"text\"]}}</span></h2>\n    <p *ngIf=\"activeDay==3\">{{selectedLang[7][\"text\"]}} 3</p>\n  </label>\n    <span class=\"ribbon3\" *ngIf=\"dayCount<4\"><a  (click)=\"anotherDay()\" >{{selectedLang[8][\"text\"]}} <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a></span>\n                                      </div>  \n        <div  class=\"panel-body dayPanel\">\n\n\t\t  <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\">\n\t\t\t<div id=\"pravilo3\">  </div> \n\t\t\t   \n\n\t\t \n\t\t</div>\n\t <div class=\"col-md-12 align-elements\" *ngIf=\"refDay!=3\">\n                                             \n\t\t\t\t\t\t  <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"ref(3)\">{{selectedLang[9][\"text\"]}}</button>\n\t\t\t\t   \n\t\t\t</div>\n\t\n\t  </div>\n</div>\n<div class=\"col-md-12 dan4\">\n   <div class=\"ribbon\">\n  <input type=\"radio\" id=\"control_04\" name=\"select\" value=\"4\" (click)=\"changeDay(4)\">\n  <label for=\"control_04\" class=\"radioLabel{{cssStyle}} ref4\">\n   <h2>{{selectedLang[5][\"text\"]}} 4 <span *ngIf=\"refDay==4\">{{selectedLang[6][\"text\"]}}</span></h2>\n    <p *ngIf=\"activeDay==4\">{{selectedLang[7][\"text\"]}} 4</p>\n  </label>\n    <span class=\"ribbon3\" *ngIf=\"dayCount<5\"><a  (click)=\"anotherDay()\" >Novi dan <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a></span>\n                                      </div>  \n        <div  class=\"panel-body dayPanel\">\n\n\t\t  <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\">\n\t\t\t<div id=\"pravilo4\">  </div> \n\t\t\t   \n\t\t\n\t\t</div>\n\t <div class=\"col-md-12 align-elements\" *ngIf=\"refDay!=4\">\n                                             \n\t\t\t\t\t\t  <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"ref(4)\">{{selectedLang[9][\"text\"]}}</button>\n\t\t\t\t   \n\t\t\t</div>\n\t\n\t  </div>\n</div>\n<div class=\"col-md-12 dan5\">\n   <div class=\"ribbon\">\n  <input type=\"radio\" id=\"control_05\" name=\"select\" value=\"5\" (click)=\"changeDay(5)\">\n  <label for=\"control_05\" class=\"radioLabel{{cssStyle}} ref5\">\n   <h2>{{selectedLang[5][\"text\"]}} 5 <span *ngIf=\"refDay==5\">{{selectedLang[6][\"text\"]}}</span></h2>\n    <p *ngIf=\"activeDay==5\">{{selectedLang[7][\"text\"]}} 5</p>\n  </label>\n  \n                                      </div>  \n        <div  class=\"panel-body dayPanel\">\n\n\t\t  <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\">\n\t\t\t<div id=\"pravilo5\">  </div> \n\t\t\t   \n\t\t\n\t\t \n\t\t</div>\n\t <div class=\"col-md-12 align-elements\" *ngIf=\"refDay!=5\">\n                                             \n\t\t\t\t\t\t  <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"ref(5)\">{{selectedLang[9][\"text\"]}}</button>\n\t\t\t\t   \n\t\t\t</div>\n\t\n\t  </div>\n</div>\n\n</section>\n                                             <div class=\"col-md-12 align-elements\">\n                                                <div class=\"row2\">\n                                                <span *ngIf=\"(lang[0]['lang']==undefined||lang[0]['lang']=='srb')\">\n                                                  <input class=\"slide-up\" placeholder=\"Ime pravila\" name=\"b\" [(ngModel)]=\"ime\" type=\"text\" ngModel><label>{{selectedLang[10][\"text\"]}} </label>\n                                                </span>\n                                                <span *ngIf=\"(lang[0]['lang']==undefined||lang[0]['lang']=='srb')\">\n                                                  <input class=\"slide-up\"  placeholder=\"Obavestenje\" name=\"b\" [(ngModel)]=\"obavestenje\" type=\"text\" ngModel><label for=\"expires\">{{selectedLang[11][\"text\"]}}</label>\n                                                </span>\n\t\t\t\t\t\t\t\t\t\t\t\t  <span *ngIf=\"(lang[0]['lang']==undefined||lang[0]['lang']=='srb')\">\n                                                  <input class=\"slide-up\"  placeholder=\"Posledica\" name=\"c\" [(ngModel)]=\"posledica\" type=\"text\" ngModel><label for=\"expires\">{{selectedLang[12][\"text\"]}}</label>\n                                                </span>\n                                                <span *ngIf=\"lang[0]['lang']=='eng'\">\n                                                  <input class=\"slide-up\" placeholder=\"Rule name\" name=\"b\" [(ngModel)]=\"ime\" type=\"text\" ngModel><label>{{selectedLang[10][\"text\"]}} </label>\n                                                </span>\n                                                <span *ngIf=\"lang[0]['lang']=='eng'\">\n                                                  <input class=\"slide-up\"  placeholder=\"Notification\" name=\"b\" [(ngModel)]=\"obavestenje\" type=\"text\" ngModel><label for=\"expires\">{{selectedLang[11][\"text\"]}}</label>\n                                                </span>\n\t\t\t\t\t\t\t\t\t\t\t\t  <span *ngIf=\"lang[0]['lang']=='eng'\">\n                                                  <input class=\"slide-up\"  placeholder=\"Consequence\" name=\"c\" [(ngModel)]=\"posledica\" type=\"text\" ngModel><label for=\"expires\">{{selectedLang[12][\"text\"]}}</label>\n                                                </span>\n                                                 <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"Sacuvaj()\">{{selectedLang[13][\"text\"]}}</button>\n\t\t\t\t\t\t\t\t\t\t\t\t  <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"Ponisti()\">{{selectedLang[14][\"text\"]}}</button>\n                                              </div>\n                                          </div>\n                                       \n                                   \n                                </div>\n                            \n                            </div>\n                        </div> \n           \n     \n       \n        <!-- end glavni deo -->\n       \n \n\n\n<script>\nfunction testna()\n{\nalert(\"nesto\");\n}\n</script>\n\n\n"

/***/ }),

/***/ 795:
/***/ (function(module, exports) {

module.exports = "<!--\n<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n    <link rel=\"stylesheet\" href=\"css/infoTabStyle.css\">\n    <link rel=\"stylesheet\" href=\"css/weather-icons.css\">\n\n\n\n    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n        defer>\n\n        </script>\n\n\n\n    <script>\n        function initMap() {\n            var mapProp = {\n                center: new google.maps.LatLng(51.508742, -0.120850),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        }\n        google.maps.event.addDomListener(window, 'load', initialize);\n    </script>\n</head>\n\n<body>\n\n\n\n\n\n\n\n    <div class=\"container-fluid\">\n        <div class=\"col-md-12 row\" style=\"text-align:center\">\n            <div class=\"panel panel-primary panelDef{{cssStyle}}\">\n                <div id=\"togglable-tabs\" id=\"opcije\">\n\n                    <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"text-align:center;\">Lista mojih pravila</div>\n\n                    <div *ngIf=\"uspesnoObrisano\" id=\"uspesnaReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                        Pravilo je izbrisano.\n                    </div>\n                    <div class=\"panel-body \">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                          <th>#</th>\n                                        <th style=\"text-align: center\">Naziv pravila</th>\n                                        <th style=\"text-align: center\">Naziv podvrste</th>\n                                        <th style=\"text-align: center\">Opcije</th>\n                                    </tr>\n                                </thead>\n                                <tbody id=\"idTabele\">\n                                    <tr *ngFor=\"let podtip of podtipovi\">\n\n                                        <td><span>{{podtip.name}}</span></td>\n                                        <td><span>{{podtip.names}}</span></td>\n                                        <td>\n                                            <i (click)=\"obrisiPravilo(podtip.id)\" id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\n\n\n                                        </td>\n                                    </tr>\n\n                                </tbody>\n                            </table>\n\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n\n\n\n\n</body>\n\n</html>-->\n\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n    <link rel=\"stylesheet\" href=\"css/infoTabStyle.css\">\n    <link rel=\"stylesheet\" href=\"css/weather-icons.css\">\n\n\n\n    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqbPWLQuyiljUeKZ4f8KTsAHmCFnSAMJs&libraries=drawing\"\n        defer>\n\n        </script>\n\n\n\n    <script>\n        function initMap() {\n            var mapProp = {\n                center: new google.maps.LatLng(51.508742, -0.120850),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            var map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        }\n        google.maps.event.addDomListener(window, 'load', initialize);\n    </script>\n\n            <div class=\"panel panel-primary panelDef{{cssStyle}}\"  *ngIf=\"dozvole!==undefined&&lang=='srb'\">\n                <div id=\"togglable-tabs\" id=\"opcije\">\n\n                    <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"text-align:center;\">Lista mojih pravila</div>\n\n                    <div *ngIf=\"uspesnoObrisano\" id=\"uspesnaReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                        Pravilo je izbrisano.\n                    </div>\n                    <div class=\"panel-body \">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <!--    <th>#</th>-->\n                                        <th style=\"text-align: center\">Naziv pravila</th>\n                                        <th style=\"text-align: center\">Naziv podvrste</th>\n                                        <th style=\"text-align: center\">Opcije</th>\n                                    </tr>\n                                </thead>\n                                <tbody id=\"idTabele\">\n                                    <tr *ngFor=\"let podtip of podtipovi\">\n\n                                        <td><span>{{podtip.name}}</span></td>\n                                        <td><span>{{podtip.names}}</span></td>\n                                        <td>\n                                            <i (click)=\"obrisiPravilo(podtip.id)\" id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\n\n\n                                        </td>\n                                    </tr>\n\n                                </tbody>\n                            </table>\n\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n         <div class=\"panel panel-primary panelDef{{cssStyle}}\"  *ngIf=\"dozvole!==undefined&&lang=='eng'\">\n                <div id=\"togglable-tabs\" id=\"opcije\">\n\n                    <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"text-align:center;\">List of rules</div>\n\n                    <div *ngIf=\"uspesnoObrisano\" id=\"uspesnaReg\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>Rule deleted\n                    </div>\n                    <div class=\"panel-body \">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <!--    <th>#</th>-->\n                                        <th style=\"text-align: center\">Rule name</th>\n                                        <th style=\"text-align: center\">Subtype name</th>\n                                        <th style=\"text-align: center\">Options</th>\n                                    </tr>\n                                </thead>\n                                <tbody id=\"idTabele\">\n                                    <tr *ngFor=\"let podtip of podtipovi\">\n\n                                        <td><span>{{podtip.name}}</span></td>\n                                        <td><span>{{podtip.names}}</span></td>\n                                        <td>\n                                            <i (click)=\"obrisiPravilo(podtip.id)\" id=\"btn-login\" class=\"fa fa-times fa-2x\"> </i>\n\n\n                                        </td>\n                                    </tr>\n\n                                </tbody>\n                            </table>\n\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n\n"

/***/ }),

/***/ 796:
/***/ (function(module, exports) {

module.exports = "\n\n<head>\n    \n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n\n      <link rel=\"stylesheet\" href=\"css/w3.css\"> \n     <script src='https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/9.2.0/nouislider.min.js'></script>\n</head>\n\n    \n          \n\n         \n\t\t\t\t\t \n                      \n                        <div class=\"panel panel-primary panelDef{{cssStyle}}\">\n                            <div id=\"togglable-tabs\" id=\"opcije\">\n\n                               \n                                <!--  <div class=\"col-md-12 \" style=\"text-align:center\" *ngIf=\"!sideBarVidljiv&&plantazaVidljiva\">\n                        <div class=\"col-md-4 col-centered \" style=\"text-align:center;\">\n  \n                            <div class=\"panel panel-primary\">\n  \n                            </div>\n                        </div>\n                    </div>-->\n                                <div *ngIf=\"pravila\" class=\"panel-heading highFivePanel{{cssStyle}}\">{{selectedLang[0][\"text\"]}}</div>\n\t\t\n                                <div *ngIf=\"pravila\" class=\"panel-body \">\n                               \t <div class=\"col-md-12 rulesMeni\" style=\"text-align:center;\">\n                                            <div class=\"col-md-4 \" style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \" style=\"padding-top: 5px\">{{selectedLang[1][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                   <select class=\"form-control\"  #t (change)=\"callType(t.value)\">\n                                                        <option *ngFor = \"let tip of tipovi\"  [value]=\"tip.id\"> {{tip.name}} </option>\n                                                    </select>\n                                                  \n                                                </div>\n\n                                            </div>\n\n                                            <div *ngIf=\"podTipovi!=undefined &&podTipovi.length > 0\" class=\"col-md-4 \"  style=\"text-align:center;\">\n                                                <label class=\"col-md-5 \">{{selectedLang[2][\"text\"]}}</label>\n                                                <div class=\"col-md-7 \">\n                                                   <select class=\"form-control\"  #t1 (change)=\"callType2(t1.value)\">\n                                                        <option *ngFor = \"let podtip of podTipovi\"  [value]=\"podtip.id\"> {{podtip.name}} </option>\n                                                    </select>\n                                                   <!-- <select class=\"form-control btn-primary\" formControlName=\"podvrsta\">\n                                                        <option *ngFor=\"let podtip of podtipovi\" [value]=\"podtip.id\" >{{podtip.name}}</option>\n                                                    </select>-->\n                                                </div>\n\n\n                                            </div>\n                                            \n                                            <div class=\"col-md-2 \" style=\"text-align:center;\">\n                                               <button  type=\"submit\" class=\"btn btn-highFive{{cssStyle}}\" (click)=\"Unesi()\">{{selectedLang[3][\"text\"]}}</button>\n\n\n                                            </div>\n                                            <div class=\"col-md-2 rulesNapredno\" style=\"text-align:center;\">\n                                                <div class=\"form-group\"  >\n                                                \n                                                    <input type=\"checkbox\" class=\"{{cssStyleC}}\" id=\"box-3\" (click)=\"napredneOpcije()\">\n                                                    <label for=\"box-3\" class=\"{{cssStyleC}}\">{{selectedLang[4][\"text\"]}}</label>\n                                                </div>\n                                           </div>\n                                       \n                                           \n                                        </div>\n                                          <div class=\"col-md-12\">\n                                                    <div *ngIf=\"jednakeVrednosti\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        {{selectedLang[5][\"text\"]}}\n                                    </div>\n                                      <div *ngIf=\"neSmeVeca\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        {{selectedLang[6][\"text\"]}}\n                                    </div>\n                                        <div *ngIf=\"nijeIzabranPodtip\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\">\n                                        <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                                        {{selectedLang[7][\"text\"]}}\n                                    </div>\n                                      <div *ngIf=\"uspesnoUneti\"  role=\"alert\" class=\"alert alert-success alert-dismissible fade in\">\n                            <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>                            {{selectedLang[8][\"text\"]}}\n                        </div>\n                                                <!-- Slider 1 -->\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\" [hidden]=\"!optMinS1\">{{selectedLang[9][\"text\"]}}</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\" >\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\" [hidden]=\"!optMinS1\">  <input type=\"number\"  name=\"c1\" [(ngModel)]=\"criticalMinS1\"  id=\"rangerMin\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\" [hidden]=\"!optMaxS1\"><input type=\"number\" name=\"c2\" id=\"rangerMax\" [(ngModel)]=\"criticalMaxS1\" class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                                <!-- End Slider 1 -->\n                                                 <!-- Slider 2 -->\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\"  [hidden]=\"!optMinS2\">{{selectedLang[10][\"text\"]}}</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\" [hidden]=\"!optMinS2\">  <input type=\"number\" name=\"c11\" [(ngModel)]=\"criticalMinS2\" id=\"rangerMin2\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider2\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\" [hidden]=\"!optMaxS2\"><input type=\"number\" name=\"c22\" [(ngModel)]=\"criticalMaxS2\" id=\"rangerMax2\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                                <!-- End Slider 2 -->\n                                             <div [hidden]=\"!napredno\"> \n                                                  <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">C</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c13\" [(ngModel)]=\"criticalMinS3\" id=\"rangerMin3\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider3\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c33\" [(ngModel)]=\"criticalMaxS3\"  id=\"rangerMax3\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n\n                            \n                                            <div class=\"col-md-12 napredno\" >\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Na</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c14\" [(ngModel)]=\"criticalMinS4\"  id=\"rangerMin4\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider4\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c24\" [(ngModel)]=\"criticalMaxS4\" id=\"rangerMax4\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">N</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c54\" [(ngModel)]=\"criticalMinS5\" id=\"rangerMin5\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider5\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c55\" [(ngModel)]=\"criticalMaxS5\" id=\"rangerMax5\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">O</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c56\" [(ngModel)]=\"criticalMinS6\" id=\"rangerMin6\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider6\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c65\" [(ngModel)]=\"criticalMaxS6\" id=\"rangerMax6\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">H</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c57\" [(ngModel)]=\"criticalMinS7\"  id=\"rangerMin7\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider7\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c75\" [(ngModel)]=\"criticalMaxS7\" id=\"rangerMax7\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">S</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c58\" [(ngModel)]=\"criticalMinS8\" id=\"rangerMin8\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider8\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c77\" [(ngModel)]=\"criticalMaxS8\" id=\"rangerMax8\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Pi</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c79\" [(ngModel)]=\"criticalMinS9\" id=\"rangerMin9\" class=\"control-number \" placeholder=\"min\"></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider9\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c97\" [(ngModel)]=\"criticalMaxS9\"  id=\"rangerMax9\"  class=\"control-number \" placeholder=\"max\"></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Si</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c111\" [(ngModel)]=\"criticalMinS10\" id=\"rangerMin10\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider10\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c717\" [(ngModel)]=\"criticalMaxS10\" id=\"rangerMax10\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Cl</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c1111\" [(ngModel)]=\"criticalMinS11\" id=\"rangerMin11\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider11\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c11111\" [(ngModel)]=\"criticalMaxS11\" id=\"rangerMax11\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Mg</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c1121\" [(ngModel)]=\"criticalMinS12\" id=\"rangerMin12\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider12\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\"  id=\"rangerMax12\" name=\"c1131\" [(ngModel)]=\"criticalMaxS12\" class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Al</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c1311\" [(ngModel)]=\"criticalMinS13\" id=\"rangerMin13\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider13\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c11651\" [(ngModel)]=\"criticalMaxS13\"  id=\"rangerMax13\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Fe</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c11133\" [(ngModel)]=\"criticalMinS14\" id=\"rangerMin14\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider14\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c14511\" [(ngModel)]=\"criticalMaxS14\" id=\"rangerMax14\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                            <div class=\"col-md-12 napredno\">\n                                            <div  class=\"panel-heading highFivePanel{{cssStyle}}\">Mn</div>\n\t\t                                         <div  class=\"panel-body sliderPanel\">\n                                                \n                                              <div class=\"col-md-1 cnr hidden-xs hidden-sm\">  <input type=\"number\" name=\"c11551\" [(ngModel)]=\"criticalMinS15\" id=\"rangerMin15\" class=\"control-number \" placeholder=\"min\" ngModel></div>\n                                                <div class=\"col-md-9 rangerSlider\">\n                                                  <!-- Start noUiSlider -->\n                                                  <div id=\"doubleSlider15\">\n                                                  </div>\n                                                  <!-- End noUiSlider -->\n                                                </div>\n                                                <div class=\"col-md-1 cnl hidden-xs hidden-sm\"><input type=\"number\" name=\"c18911\" [(ngModel)]=\"criticalMaxS15\" id=\"rangerMax15\"  class=\"control-number \" placeholder=\"max\" ngModel></div>\n                                            \n                                              </div>\n                                          </div>\n                                          </div>\n                                          </div>                                   \n                                </div>\n                               \n                            </div>\n                        </div>\n              \n"

/***/ }),

/***/ 797:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n</head>\n\n<body>\n\n\n\n    <div id=\"wrapper\" *ngIf=\"lang=='srb'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" >\n\n             <app-widgets></app-widgets>\n            <div class=\"container-fluid\">\n                 <div class=\"col-md-12 no-left-padding\">                                    \n                    <!-- Naslov -->\n                    <div class=\"col-md-12\">                        \n                        <div class=\"page-title\">                    \n                            <h2><span class=\"fa fa-inbox\"></span> Inbox <small></small></h2>\n                        </div>                                                                                \n                                   \n                    </div>\n                    <!-- END  Naslov -->\n                   <div class=\"col-md-12 no-left-padding\">  \n                    <!-- Meni za poruke -->\n                    <div class=\"col-md-2 no-left-padding\" >\n                      \n                         <a  routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\" ><span class=\"fa fa-edit\"></span> Nova poruka</a>\n                       \n                            <div class=\"block\" style=\"margin-top: 5px\">\n                            <div class=\"list-group border-bottom\">\n                                <a routerLink=\"/inbox\" class=\"list-group-item\"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\"></span></a>\n                                <a routerLink=\"/sent\" class=\"list-group-item  active\"><span class=\"fa fa-rocket\"></span>  Poslate</a>\n                            </div>                        \n                        </div>\n                            \n                        \n                    </div>\n                    <!-- END Meni za poruke -->\n                    \n                    <!-- INBoX -->\n                    <div class=\"col-md-10\">\n                            <div class=\"mail\">\n                                 <div *ngIf=\"poslatePoruke.length>0\">\n                                    <div *ngFor=\"let poruka of poslatePoruke | paginate: { itemsPerPage: 5, currentPage: p }\" class=\"mail-item mail-info\" (click)=\"goToMessage(poruka)\">\n                                        <div class=\"mail-user\">{{poruka.username}}</div>\n                                        <div  class=\"mail-text\">{{poruka.text}}</div>\n                                        <div class=\"mail-date\">{{ poruka.time | date:'medium' }}</div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"poslatePoruke.length==0\">\n                                    <h2>Nemate poslatih poruka</h2>\n                                </div>\n                                 <!-- msg\n                                <div class=\"mail-item mail-unread mail-info\"  >\n                                    <div class=\"mail-user\">Djole Junior</div>                                    \n                                    <a routerLink=\"/msg\" class=\"mail-text\">Task 1</a>                                    \n                                    <div class=\"mail-date\">Danas, 10:36</div>\n                                </div>\n                                  \n                                <div class=\"mail-item mail-unread mail-danger\" > \n                                    <div class=\"mail-user\">Djole Senior</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 2</a>                                    \n                                    <div class=\"mail-date\">Danas, 10:36</div>\n                                </div>\n                                \n                                <div class=\"mail-item mail-success\">\n                                    <div class=\"mail-user\">Jovan</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 3</a>                                    \n                                    <div class=\"mail-date\">Danas, 20:19</div>\n                                </div>\n                                \n                                <div class=\"mail-item mail-warning\">\n                                    <div class=\"mail-user\">Jovana</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 4</a>                                    \n                                    <div class=\"mail-date\">Danas, 21:19</div>\n                                </div>\n                                \n                                <div class=\"mail-item mail-info\">\n                                    <div class=\"mail-user\">Bojan</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 5</a>                                    \n                                    <div class=\"mail-date\">Juce 20:22</div>\n                                   \n                                </div>\n                                \n                            \n                                \n                                <div class=\"mail-item mail-primary\">\n                                    <div class=\"mail-user\">Darth Vader</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Where are the drawings of the new spaceship?</a>\n                                    <div class=\"mail-date\">Juce 10:36</div>\n                                </div>                                \n                                -->\n                            </div>\n                        \n                            <div class=\"panel-footer\" style=\"height: 100%\">  \n                               <pagination-controls style='cursor: pointer;' previousLabel=\"Prethodna\" nextLabel=\"Sledeca\" (pageChange)=\"p = $event\"></pagination-controls>\n                            </div>                 \n                        \n                        \n                    </div>\n                    </div>\n                    <!-- ENDINBoX  -->\n                </div>\n             \n            </div>\n\n            <!-- CONTACT MODAL -->\n            <div id=\"ContactModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Kontaktrijate nas</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form class=\"form-horizontal col-sm-12\">\n                                <div class=\"form-group\"><label>Ime</label><input class=\"form-control required\" placeholder=\"Vase ime\" data-placement=\"top\"\n                                        data-trigger=\"manual\" data-content=\"Must be at least 3 characters long, and must only contain letters.\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><label>Poruka</label><textarea class=\"form-control\" placeholder=\"Vasa poruka...\" data-placement=\"top\"\n                                        data-trigger=\"manual\"></textarea></div>\n                                <div class=\"form-group\"><label>E-Mail</label><input class=\"form-control email\" placeholder=\"email@you.com (kako bi smo mogli da vam odgovrimo)\"\n                                        data-placement=\"top\" data-trigger=\"manual\" data-content=\"Must be a valid e-mail address (user@gmail.com)\"\n                                        type=\"text\"></div>\n                                <div class=\"form-group\"><button type=\"submit\" class=\"btn btn-send pull-right\">Poslaji!</button>\n                                    <p class=\"help-block pull-left text-danger hide\"\n                                        id=\"form-error\">  The form is not valid. </p>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END CONTACT MODAL -->\n\n            <!-- ABOUT MODAL -->\n            <div id=\"AboutModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">O nama</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p>Uz pomoc mladog i entuzijazticnog tima sastavljenog od dva Djoleta, jednog Jovana,jedne Jovane\n                                i jednog Bojana kreirana je aplikacija koja ce zadovoljiti sve vase potrebe vezane za poljoprivredu\n                            </p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END ABOUT MODAL -->\n            <!-- SETINGS MODAL -->\n            <div id=\"SettingsModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n                            <h3 id=\"myModalLabel\">Podesavanja</h3>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"panel panel-primary\">\n\n                                <div class=\"panel-body\">\n                                    <form action=\"#\" role=\"form\" class=\"form-horizontal\">\n                                        <div class=\"form-group\">\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Obavestenja putem email-a</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"1\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n                                            <label class=\"col-md-3 control-label text-left\" style=\"padding-top: 0px;\">Uzmi moju lokaciju</label>\n                                            <div class=\"col-md-3\">\n                                                <label class=\"switch\">\n                                                    <input class=\"switch\" value=\"0\" checked=\"\" type=\"checkbox\">\n                                                    <span></span>\n                                                </label>\n                                            </div>\n\n                                        </div>\n\n\n\n\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-primary\" data-dismiss=\"modal\" aria-hidden=\"true\">Izadji</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--END SETINGS MODAL -->\n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                ovde ide neki content za guesta\n            </div>\n        </div>\n    </div>\n\n    <div id=\"wrapper\" *ngIf=\"lang=='eng'\">\n\n        <app-meni></app-meni>\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" >\n\n             <app-widgets></app-widgets>\n            <div class=\"container-fluid\">\n                 <div class=\"col-md-12 no-left-padding\">                                    \n                    <!-- Naslov -->\n                    <div class=\"col-md-12\">                        \n                        <div class=\"page-title\">                    \n                            <h2><span class=\"fa fa-inbox\"></span> Inbox <small></small></h2>\n                        </div>                                                                                \n                                   \n                    </div>\n                    <!-- END  Naslov -->\n                   <div class=\"col-md-12 no-left-padding\">  \n                    <!-- Meni za poruke -->\n                    <div class=\"col-md-2 no-left-padding\" >\n                      \n                         <a  routerLink=\"/newmsg\" class=\"btn btn-highFive{{cssStyle}} btn-block btn-lg\" ><span class=\"fa fa-edit\"></span> New message</a>\n                       \n                            <div class=\"block\" style=\"margin-top: 5px\">\n                            <div class=\"list-group border-bottom\">\n                                <a routerLink=\"/inbox\" class=\"list-group-item\"><span class=\"fa fa-inbox\"></span> Inbox <span class=\"badge badge-primary notification\"></span></a>\n                                <a routerLink=\"/sent\" class=\"list-group-item  active\"><span class=\"fa fa-rocket\"></span>  Sent</a>\n                            </div>                        \n                        </div>\n                              \n                        \n                    </div>\n                    <!-- END Meni za poruke -->\n                    \n                    <!-- INBoX -->\n                    <div class=\"col-md-10\">\n                            <div class=\"mail\">\n                                 <div *ngIf=\"poslatePoruke.length>0\">\n                                    <div *ngFor=\"let poruka of poslatePoruke | paginate: { itemsPerPage: 5, currentPage: p }\" class=\"mail-item mail-info\" (click)=\"goToMessage(poruka)\">\n                                        <div class=\"mail-user\">{{poruka.username}}</div>\n                                        <div  class=\"mail-text\">{{poruka.text}}</div>\n                                        <div class=\"mail-date\">{{ poruka.time | date:'medium' }}</div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"poslatePoruke.length==0\">\n                                    <h2>No sent messages</h2>\n                                </div>\n                                 <!-- msg\n                                <div class=\"mail-item mail-unread mail-info\"  >\n                                    <div class=\"mail-user\">Djole Junior</div>                                    \n                                    <a routerLink=\"/msg\" class=\"mail-text\">Task 1</a>                                    \n                                    <div class=\"mail-date\">Danas, 10:36</div>\n                                </div>\n                                  \n                                <div class=\"mail-item mail-unread mail-danger\" > \n                                    <div class=\"mail-user\">Djole Senior</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 2</a>                                    \n                                    <div class=\"mail-date\">Danas, 10:36</div>\n                                </div>\n                                \n                                <div class=\"mail-item mail-success\">\n                                    <div class=\"mail-user\">Jovan</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 3</a>                                    \n                                    <div class=\"mail-date\">Danas, 20:19</div>\n                                </div>\n                                \n                                <div class=\"mail-item mail-warning\">\n                                    <div class=\"mail-user\">Jovana</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 4</a>                                    \n                                    <div class=\"mail-date\">Danas, 21:19</div>\n                                </div>\n                                \n                                <div class=\"mail-item mail-info\">\n                                    <div class=\"mail-user\">Bojan</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Task 5</a>                                    \n                                    <div class=\"mail-date\">Juce 20:22</div>\n                                   \n                                </div>\n                                \n                            \n                                \n                                <div class=\"mail-item mail-primary\">\n                                    <div class=\"mail-user\">Darth Vader</div>                                    \n                                    <a routerLink=\"/msg\"  class=\"mail-text\">Where are the drawings of the new spaceship?</a>\n                                    <div class=\"mail-date\">Juce 10:36</div>\n                                </div>                                \n                                -->\n                            </div>\n                        \n                            <div class=\"panel-footer\" style=\"height: 100%\">  \n                               <pagination-controls style='cursor: pointer;' previousLabel=\"Previous\" nextLabel=\"Next\" (pageChange)=\"p = $event\"></pagination-controls>\n                            </div>                 \n                        \n                        \n                    </div>\n                    </div>\n                    <!-- ENDINBoX  -->\n                </div>\n             \n            </div>\n\n          \n        </div>\n        <!-- end glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==true\">\n            <div class=\"container-fluid\">\n                Guest content\n            </div>\n        </div>\n    </div>\n\n\n\n</body>\n\n</html>"

/***/ }),

/***/ 798:
/***/ (function(module, exports) {

module.exports = "  <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\r\n        <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\r\n\t\t <link rel=\"stylesheet\" href=\"css/bootstrap-select.min.css\">\r\n          <link rel=\"stylesheet\" href=\"css/w3.css\">\r\n        <link href=\"fontawesome/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n\r\n\r\n<div class=\"container-fluid hidden-xs hidden-sm\">\r\n            \r\n          <div class=\"col-md-12 \" style=\"text-align:center;margin-top: 10px\" *ngIf=\"vidljiv\">\r\n                    <div class=\"col-md-3\" (click)=\"promeniStranu(1)\" style=\"cursor:pointer\">\r\n                        <div class=\"widget widget-success widget-item-icon\">\r\n                            <div class=\"widget-item-left\">\r\n                                <span class=\"fa fa-globe\"></span>\r\n                            </div>\r\n                            <div class=\"widget-data\">\r\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.plantaze}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.plantaze>=5\" class=\"widget-title\">{{selectedLang[0][\"registrovanih plantaza\"]}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.plantaze<5&&stats.plantaze>0\" class=\"widget-title\">{{selectedLang[1][\"registrovane plantaze\"]}}</div>\r\n                                <div *ngIf=\"stats===undefined||stats.plantaze==0\" class=\"widget-title\">{{selectedLang[2][\"nemate registrovanih plantaza\"]}}</div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-md-3\" (click)=\"promeniStranu(2)\" style=\"cursor:pointer\">\r\n                        <div class=\"widget widget-primary widget-item-icon\">\r\n                            <div class=\"widget-item-left\">\r\n                                <span class=\"fa fa-users\"></span>\r\n                            </div>\r\n                            <div class=\"widget-data\">\r\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.radnici}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.radnici==1\" class=\"widget-title\">{{selectedLang[3][\"registrovan radnik\"]}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.radnici<5&&stats.radnici>1\"class=\"widget-title\">{{selectedLang[4][\"registrovana radnika\"]}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.radnici>5\" class=\"widget-title\">{{selectedLang[5][\"registrovanih radnika\"]}}</div>\r\n                                <div *ngIf=\"stats===undefined||stats.radnici==0\" class=\"widget-title\">{{selectedLang[6][\"nemate registrovanih radnika\"]}}</div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3\" (click)=\"promeniStranu(3)\" style=\"cursor:pointer\">\r\n                        <div class=\"widget widget-info widget-item-icon\">\r\n                            <div class=\"widget-item-left\">\r\n                                <span class=\"fa fa-book\"></span>\r\n                            </div>\r\n                            <div class=\"widget-data\">\r\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{stats.eksperti}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.eksperti==1\" class=\"widget-title\">{{selectedLang[7][\"registrovan ekspert\"]}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.eksperti>1&&stats.eksperti<5\" class=\"widget-title\">{{selectedLang[8][\"registrovana eksperta\"]}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&stats.eksperti>5\" class=\"widget-title\">{{selectedLang[9][\"registrovanih eksperata\"]}}</div>\r\n                                <div *ngIf=\"stats===undefined||stats.eksperti==0\" class=\"widget-title\">{{selectedLang[10][\"nemate registrovanih eksperata\"]}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 \" (click)=\"promeniStranu(4)\" style=\"cursor:pointer\">\r\n                        <div class=\"widget widget-warning widget-item-icon\">\r\n                            <div class=\"widget-item-left\">\r\n                                <span class=\"fa fa-warning\"></span>\r\n                            </div>\r\n                            <div class=\"widget-data\">\r\n                                <div *ngIf=\"stats!==undefined\" class=\"widget-int num-count\">{{ukupnoObavestenja}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&ukupnoObavestenja==1\" class=\"widget-title\">{{selectedLang[11][\"obavestenje\"]}}</div>\r\n                                <div *ngIf=\"stats!==undefined&&ukupnoObavestenja>1\" class=\"widget-title\">{{selectedLang[12][\"obavestenja\"]}}</div>\r\n                                <div *ngIf=\"stats===undefined||ukupnoObavestenja==0\" class=\"widget-title\">{{selectedLang[13][\"nemate obavestenja\"]}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t   <div class=\"col-md-12 {{widget}}\" *ngIf=\"lang[0]['lang']=='srb'\">\r\n\t\t\t\t<span tooltip=\"Prikazi\"   *ngIf=\"!vidljiv\" flow=\"down\" class=\"WidgetHide\"> \r\n\t\t\t\t\t<i  (click)=\"skarijMeni()\" class=\"fa fa-sort-asc fa-3x\"></i> \r\n\t\t\t\t</span>\r\n\t\t\t\t<span tooltip=\"Sakri\"   *ngIf=\"vidljiv\" flow=\"down\" class=\"WidgetHide\"> \r\n\t\t\t\t\t<i  (click)=\"skarijMeni()\" class=\"fa fa-sort-desc fa-3x\"></i> \r\n\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t   <div class=\"col-md-12 {{widget}}\" *ngIf=\"lang[0]['lang']=='eng'\">\r\n\t\t\t\t<span tooltip=\"Show\"   *ngIf=\"!vidljiv\" flow=\"down\" class=\"WidgetHide\"> \r\n\t\t\t\t\t<i  (click)=\"skarijMeni()\" class=\"fa fa-sort-asc fa-3x\"></i> \r\n\t\t\t\t</span>\r\n\t\t\t\t<span tooltip=\"Hide\"   *ngIf=\"vidljiv\" flow=\"down\" class=\"WidgetHide\"> \r\n\t\t\t\t\t<i  (click)=\"skarijMeni()\" class=\"fa fa-sort-desc fa-3x\"></i> \r\n\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n</div>"

/***/ }),

/***/ 799:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n\n<head>\n    <title>PlanTech</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"HighFive\" />\n\n    <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n    <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n    <link rel=\"stylesheet\" href=\"css/infoTabStyle.css\">\n    <link rel=\"stylesheet\" href=\"css/weather-icons.css\">\n\n\n    <style>\n        #kriticno {\n            background-color: #8f2846;\n        }\n        \n        #standardno {\n            background-color: cornflowerblue;\n        }\n    </style>\n\n\n\n\n</head>\n\n<body>\n    <div id=\"loading-wrapper\" *ngIf=\"dozvole==undefined\">\n        <div id=\"loading-text\">UČITAVANJE</div>\n        <div id=\"loading-content\"></div>\n    </div>\n    <div id=\"wrapper\" *ngIf=\"dozvole!==undefined\">\n\n        <!-- Meni -->\n        <app-meni></app-meni>\n        <!-- end Meni -->\n\n        <!-- glavni deo -->\n        <div id=\"page-wrapper\" *ngIf=\"dozvole!==undefined&&dozvole.guest==false&&plantId!==undefined\">\n            <button  *ngIf=\"lang=='srb'\" (click)=\"nazad()\" class=\"btn pull-right backToPrikaz{{cssStyle}} col-md-3\" style=\"width:100px;margin-right:40px;margin-bottom:8px;\">Nazad</button>\n            <button  *ngIf=\"lang=='eng'\" (click)=\"nazad()\" class=\"btn pull-right backToPrikaz{{cssStyle}} col-md-3\" style=\"width:100px;margin-right:40px;margin-bottom:8px;\">Return</button>\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12 \" style=\"text-align:center\">\n\n                    <div *ngIf=\"podaci!==undefined&&podaci.length!==undefined&&podaci.length>0\" class=\"panel panel-primary panelDef{{cssStyle}}\" >\n                        <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 100%\">\n                            <h1 *ngIf=\"lang=='srb'\">Vremenska linija plantaže: {{podaci[0].plantaza}}</h1>\n\t\t\t\t\t\t\t<h1 *ngIf=\"lang=='eng'\">Timeline for plantation: : {{podaci[0].plantaza}}</h1>\n                        </div>\n                        <div  class=\"panel-footer\" style=\"max-height: 100%\" *ngIf=\"lang=='srb'\">\n                            Zasadjeno:\n                            <p>Tip: {{podaci[0].tip}}</p><br/>\n                            <p>Podtip: {{podaci[0].podtip}}</p><br/>\n                            <p>Proizvođač: {{podaci[0].producer}}</p><br/>\n                        </div>\n\t\t\t\t\t\t   <div  class=\"panel-footer\" style=\"max-height: 100%\" *ngIf=\"lang=='eng'\">\n                          Planted:\n                            <p>Type: {{podaci[0].tip}}</p><br/>\n                            <p>Subtype: {{podaci[0].podtip}}</p><br/>\n                            <p>Producer: {{podaci[0].producer}}</p><br/>\n                        </div>\n\n                    </div>\n\n                </div>\n                <!-- ODABIR PARCELA -->\n\n                <!--END ODABIR PARCELA -->\n            </div>\n            <div *ngIf=\"podaci!=undefined&&podaci.length==0\">\n                        <h2 class=\"alert alert-danger\" *ngIf=\"lang=='srb'\">Nemate nova obaveštenja</h2>\n\t\t\t\t\t\t    <h2 class=\"alert alert-danger\" *ngIf=\"lang=='eng'\">No new Notifications</h2>\n                    </div>\n            <!-- end widgeti -->\n\n            <div class=\"container-fluid\">\n                <div class=\"col-md-12\">\n\n                    <!-- START TIMELINE -->\n                    <div class=\"timeline\" *ngIf=\"podaci!=undefined\">\n\n\n\n                        <!-- START TIMELINE ITEM -->\n                        <div class=\"timeline-item {{i%2==0? 'timeline-item-right' : ''}}\" *ngFor=\"let i=index;let item of podaci\">\n                            <div class=\"timeline-item-info\">{{item.datum}}</div>\n                            <div class=\"timeline-item-icon\" id=\"{{item.severity==1? 'kriticno' : 'standardno'}}\"><span class=\"fa fa-warning\"></span></div>\n                            <div class=\"timeline-item-content\">\n                                <div class=\"panel panel-primary timelinePanel\" style=\"  \">\n                                    <div class=\"panel-heading\" style=\" \" *ngIf=\"lang=='srb'\">\n                                       Obavestenje\n                                       \n\n                                    </div>\n\t\t\t\t\t\t\t\t\t <div class=\"panel-heading\" style=\" \" *ngIf=\"lang=='eng'\">\n                                      Notification\n                                       \n\n                                    </div>\n                                    <div class=\"panel-footer\">\n                                        <h6>{{item.description}}</h6>\n\n\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                        <!-- END TIMELINE ITEM -->\n\n                        <!-- START TIMELINE ITEM -->\n\n\n                    </div>\n                    \n\n                </div>\n\n\n            </div>\n            <!-- end glavni deo -->\n        </div>\n        <div id=\"page-wrapper\" *ngIf=\"(dozvole!==undefined&&dozvole.guest==true)||plantId==undefined\">\n            <div class=\"container-fluid\" style=\" width:80%; margin-top:10%;\">\n                <!--   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:15%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Trenutno pristupate kao gost.\n                   </p> \n                   <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:#F2F2F2;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">\n                   Veliki deo aplikacije vam je onemogućen. Kako bi imali pristup svim funkcionalnostima morate se pretplatiti <br>\n                   kao vlasnik  ili kontaktirati Vašeg vlasnika.\n                   Za više informacija obratite se administratoru sistema.\n                   </p> -->\n                <img src=\"lock.png\" width=\"15%\" height=\"15%;\" style=\"float:left; margin-left:5%; margin-top:5%;\">\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:5%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:43px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Nemate pristup ovoj stranici!</p>\n                <p style=\"text-shadow:-3px 0px 1px rgba(176,146,143,1);font-weight:normal; text-align:center; margin-top:1%; font-style:italic;color:red;letter-spacing:1pt;word-spacing:2pt;font-size:33px;font-family:comic sans, comic sans ms, cursive, verdana, arial, sans-serif;line-height:1;\">Za vise informacija obratite se administratoru sistema.</p>\n            </div>\n        </div>\n\n    </div>\n\n    <script src='js/jquery-3.1.1.min.js'></script>\n    <script src='js/bootstrap.min.js'></script>\n    <script src='js/bootstrap-select.min.js'></script>\n\n    <!-- full screen -->\n\n</body>\n\n</html>"

/***/ }),

/***/ 800:
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n\n<html>\n\n<head>\n  <title>PlanTech</title>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta name=\"author\" content=\"HighFive\" />\n\n  <link rel='stylesheet prefetch' href='css/bootstrap.min.css'>\n  <link rel=\"stylesheet\" href=\"css/mainStyle.css\">\n\n  <!-- full screen -->\n\n</head>\n\n<body>\n\n\n\n\n  <div id=\"wrapper\" *ngIf=\"lang=='srb'\">\n    <app-meni></app-meni>\n    <div id=\"page-wrapper\">\n\n      <!-- end Meni -->\n\n      <!-- glavni deo -->\n      <div id=\"page-wrapper\" style=\"min-height: 100vh\">\n        <app-widgets></app-widgets>\n        <div class=\"container-fluid\">\n          <div class=\"col-md-12 \" style=\"text-align:center\">\n            <div class=\"panel panel-primary\">\n              <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 100%\">\n                <h1>Ažuriranje mojih imanja</h1>\n              </div>\n            </div>\n            <button (click)=\"nazad()\" class=\"btn pull-right backToPrikaz{{cssStyle}} col-md-3\" style=\"padding-bottom:10px\">Nazad</button>\n            <form id=\"loginform\" class=\"form-horizontal\" role=\"form\" novalidate method=\"post\">\n              <div *ngIf=\"uspesnoPromenjeniPodaci\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>Podaci\n                o Vasem imanju su azurirani.\n              </div>\n              <div class=\"col-md-12\">\n                <div class=\"col-md-6 \">\n\n                  <label class=\"col-md-5 \" style=\"padding-top: 5px\">Naziv imanja:</label>\n                  <div class=\"input-group col-md-7\">\n                    <input class=\"form-control \" name=\"sername\" *ngIf=\"vidljivost\" value=\"{{imeParcele}}\" [(ngModel)]=\"imeParcele\">\n                    <span class=\"input-group-addon\"><i  class=\"fa fa-tag\"></i></span>\n                  </div>\n                </div>\n              </div>\n                 \n                        <div  class=\"form-group col-md-12\"  style=\"text-align: center;align-items: center;margin-top:2%\">\n                            <!-- Button -->\n                         \n                                <button class=\"btn btn-highFive{{cssStyle}}\" type=\"submit\" (click)=\"promeniPodatke()\"> Promeni podatke </button>\n                          \n                        </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"wrapper\" *ngIf=\"lang=='eng'\">\n    <app-meni></app-meni>\n    <div id=\"page-wrapper\">\n\n      <!-- end Meni -->\n\n      <!-- glavni deo -->\n      <div id=\"page-wrapper\" style=\"min-height: 100vh\">\n        <app-widgets></app-widgets>\n        <div class=\"container-fluid\">\n          <div class=\"col-md-12 \" style=\"text-align:center\">\n            <div class=\"panel panel-primary\">\n              <div class=\"panel-heading highFivePanel{{cssStyle}}\" style=\"background-color:  #8f2846;max-height: 100%\">\n                <h1>Update properties</h1>\n              </div>\n            </div>\n            <button (click)=\"nazad()\" class=\"btn pull-right backToPrikaz{{cssStyle}} col-md-3\" style=\"padding-bottom:10px\">Return</button>\n            <form id=\"loginform\" class=\"form-horizontal\" role=\"form\" novalidate method=\"post\">\n              <div *ngIf=\"uspesnoPromenjeniPodaci\" role=\"alert\" class=\"alert alert-danger alert-dismissible fade in\" style=\"color: #4F8A10;background-color: #DFF2BF;\">\n                <button aria-label=\"Close\" (click)='resetuj()' data-dismiss=\"alert\" class=\"close\" style=\"color:black;\" type=\"button\"><span aria-hidden=\"true\">×</span></button>Your property is updated\n              </div>\n              <div class=\"col-md-12\">\n                <div class=\"col-md-6 \">\n\n                  <label class=\"col-md-5 \" style=\"padding-top: 5px\">Property name:</label>\n                  <div class=\"input-group col-md-7\">\n                    <input class=\"form-control \" name=\"sername\" *ngIf=\"vidljivost\" value=\"{{imeParcele}}\" [(ngModel)]=\"imeParcele\">\n                    <span class=\"input-group-addon\"><i  class=\"fa fa-tag\"></i></span>\n                  </div>\n                </div>\n              </div>\n                 \n                        <div  class=\"form-group col-md-12\"  style=\"text-align: center;align-items: center;margin-top:2%\">\n                            <!-- Button -->\n                         \n                                <button class=\"btn btn-highFive{{cssStyle}}\" type=\"submit\" (click)=\"promeniPodatke()\"> Update </button>\n                          \n                        </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n\n</body>\n\n</html>"

/***/ })

},[1063]);
//# sourceMappingURL=main.bundle.js.map